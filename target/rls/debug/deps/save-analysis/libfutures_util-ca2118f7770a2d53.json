{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5","program":"C:\\Users\\rafat\\.rustup\\toolchains\\nightly-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","futures_util","--edition=2018","C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"async-await\"","--cfg","feature=\"async-await-macro\"","--cfg","feature=\"default\"","--cfg","feature=\"futures-macro\"","--cfg","feature=\"futures-sink\"","--cfg","feature=\"proc-macro-hack\"","--cfg","feature=\"proc-macro-nested\"","--cfg","feature=\"sink\"","--cfg","feature=\"slab\"","--cfg","feature=\"std\"","-C","metadata=ca2118f7770a2d53","-C","extra-filename=-ca2118f7770a2d53","--out-dir","c:\\Users\\rafat\\mosquitto-analysis\\communication\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\rafat\\mosquitto-analysis\\communication\\target\\rls\\debug\\deps","--extern","futures_core=c:\\Users\\rafat\\mosquitto-analysis\\communication\\target\\rls\\debug\\deps\\libfutures_core-86198bf793ee59bf.rmeta","--extern","futures_macro=c:\\Users\\rafat\\mosquitto-analysis\\communication\\target\\rls\\debug\\deps\\futures_macro-dcc04359a0f6c015.dll","--extern","futures_sink=c:\\Users\\rafat\\mosquitto-analysis\\communication\\target\\rls\\debug\\deps\\libfutures_sink-9ef939b6410158cd.rmeta","--extern","futures_task=c:\\Users\\rafat\\mosquitto-analysis\\communication\\target\\rls\\debug\\deps\\libfutures_task-168209fad832cc99.rmeta","--extern","pin_project=c:\\Users\\rafat\\mosquitto-analysis\\communication\\target\\rls\\debug\\deps\\libpin_project-a8ab20d34fd24711.rmeta","--extern","pin_utils=c:\\Users\\rafat\\mosquitto-analysis\\communication\\target\\rls\\debug\\deps\\libpin_utils-71f94e88913fb15d.rmeta","--extern","proc_macro_hack=c:\\Users\\rafat\\mosquitto-analysis\\communication\\target\\rls\\debug\\deps\\proc_macro_hack-6cbbd1e35645776a.dll","--extern","proc_macro_nested=c:\\Users\\rafat\\mosquitto-analysis\\communication\\target\\rls\\debug\\deps\\libproc_macro_nested-73323755661ad73a.rmeta","--extern","slab=c:\\Users\\rafat\\mosquitto-analysis\\communication\\target\\rls\\debug\\deps\\libslab-09e879a872a7f754.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\rafat\\.rustup/toolchains/nightly-x86_64-pc-windows-msvc"],"output":"c:\\Users\\rafat\\mosquitto-analysis\\communication\\target\\rls\\debug\\deps\\libfutures_util-ca2118f7770a2d53.rmeta"},"prelude":{"crate_id":{"name":"futures_util","disambiguator":[602260437576847172,2475262363038855487]},"crate_root":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src","external_crates":[{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[18288881757689090121,9419737486893313901]}},{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\async_await\\poll.rs","num":2,"id":{"name":"core","disambiguator":[14213619342689192713,15088536995624829400]}},{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[244939429982917557,17416797231968220338]}},{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[14317763785426805453,5211879464951989797]}},{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[16422418778299216526,17207051225670732338]}},{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[17306314435355081657,11195041620083223393]}},{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[1573703505585426212,7163609454926384372]}},{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[12479693318245447873,11762408771930065524]}},{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[13307518198829802953,2695921345460214220]}},{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[16906543842776722203,11322133077543445249]}},{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","num":11,"id":{"name":"hashbrown","disambiguator":[9131476741001934248,9345293261506072414]}},{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","num":12,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[13524165811214674457,13541977140981627092]}},{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[14352779422789734697,5487940749699149244]}},{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","num":14,"id":{"name":"futures_core","disambiguator":[13261482865129816204,668838186523774074]}},{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","num":15,"id":{"name":"pin_utils","disambiguator":[4786372884959799621,8862626822088352257]}},{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\async_await\\join_mod.rs","num":16,"id":{"name":"proc_macro_hack","disambiguator":[15248170830419140116,3409361407893882668]}},{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\mod.rs","num":17,"id":{"name":"futures_task","disambiguator":[14187782179165377850,14106917183161744134]}},{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\mod.rs","num":18,"id":{"name":"once_cell","disambiguator":[13169750122952819361,16176671802332148872]}},{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\flatten.rs","num":19,"id":{"name":"futures_sink","disambiguator":[731266328914723550,186131959704591782]}},{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\flatten.rs","num":20,"id":{"name":"pin_project","disambiguator":[8501516633687512985,10433324526091687247]}},{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\flatten.rs","num":21,"id":{"name":"pin_project_internal","disambiguator":[2775879209520213349,15483844454683194131]}},{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\shared.rs","num":22,"id":{"name":"slab","disambiguator":[16261289062895254178,3154024672244672276]}},{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\async_await\\join_mod.rs","num":23,"id":{"name":"futures_macro","disambiguator":[12583047899055459988,4918336323684334693]}},{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\async_await\\join_mod.rs","num":24,"id":{"name":"proc_macro_nested","disambiguator":[15749280234219766737,16811106227160961629]}}],"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":0,"byte_end":12350,"line_start":1,"line_end":335,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":14,"index":131},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":1650,"byte_end":1655,"line_start":37,"line_end":37,"column_start":23,"column_end":28},"alias_span":null,"name":"ready","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":15,"index":7},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":1676,"byte_end":1683,"line_start":38,"line_end":38,"column_start":20,"column_end":27},"alias_span":null,"name":"pin_mut","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":14,"index":17},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\async_await\\mod.rs","byte_start":12587,"byte_end":12598,"line_start":10,"line_end":10,"column_start":31,"column_end":42},"alias_span":null,"name":"FusedFuture","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":14,"index":82},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\async_await\\mod.rs","byte_start":12645,"byte_end":12656,"line_start":12,"line_end":12,"column_start":31,"column_end":42},"alias_span":null,"name":"FusedStream","value":"","parent":{"krate":0,"index":7}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\async_await\\mod.rs","byte_start":12702,"byte_end":12703,"line_start":16,"line_end":16,"column_start":21,"column_end":22},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":7}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\async_await\\mod.rs","byte_start":12702,"byte_end":12703,"line_start":16,"line_end":16,"column_start":21,"column_end":22},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":7}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\async_await\\mod.rs","byte_start":12702,"byte_end":12703,"line_start":16,"line_end":16,"column_start":21,"column_end":22},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":7}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\async_await\\mod.rs","byte_start":12702,"byte_end":12703,"line_start":16,"line_end":16,"column_start":21,"column_end":22},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":7}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\async_await\\mod.rs","byte_start":12702,"byte_end":12703,"line_start":16,"line_end":16,"column_start":21,"column_end":22},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":7}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":1860,"byte_end":1861,"line_start":47,"line_end":47,"column_start":28,"column_end":29},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":14,"index":168},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":1920,"byte_end":1933,"line_start":51,"line_end":51,"column_start":23,"column_end":36},"alias_span":null,"name":"core_reexport","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":1860,"byte_end":1861,"line_start":47,"line_end":47,"column_start":28,"column_end":29},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":77}},{"kind":"Use","ref_id":{"krate":14,"index":11},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\mod.rs","byte_start":34145,"byte_end":34154,"line_start":8,"line_end":8,"column_start":32,"column_end":41},"alias_span":null,"name":"BoxFuture","value":"","parent":{"krate":0,"index":85}},{"kind":"Use","ref_id":{"krate":14,"index":14},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\mod.rs","byte_start":34156,"byte_end":34170,"line_start":8,"line_end":8,"column_start":43,"column_end":57},"alias_span":null,"name":"LocalBoxFuture","value":"","parent":{"krate":0,"index":85}},{"kind":"Use","ref_id":{"krate":14,"index":17},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\mod.rs","byte_start":34204,"byte_end":34215,"line_start":9,"line_end":9,"column_start":32,"column_end":43},"alias_span":null,"name":"FusedFuture","value":"","parent":{"krate":0,"index":85}},{"kind":"Use","ref_id":{"krate":2,"index":8198},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\mod.rs","byte_start":34217,"byte_end":34223,"line_start":9,"line_end":9,"column_start":45,"column_end":51},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":85}},{"kind":"Use","ref_id":{"krate":14,"index":32},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\mod.rs","byte_start":34225,"byte_end":34234,"line_start":9,"line_end":9,"column_start":53,"column_end":62},"alias_span":null,"name":"TryFuture","value":"","parent":{"krate":0,"index":85}},{"kind":"Use","ref_id":{"krate":17,"index":111},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\mod.rs","byte_start":34260,"byte_end":34269,"line_start":10,"line_end":10,"column_start":24,"column_end":33},"alias_span":null,"name":"FutureObj","value":"","parent":{"krate":0,"index":85}},{"kind":"Use","ref_id":{"krate":17,"index":77},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\mod.rs","byte_start":34271,"byte_end":34285,"line_start":10,"line_end":10,"column_start":35,"column_end":49},"alias_span":null,"name":"LocalFutureObj","value":"","parent":{"krate":0,"index":85}},{"kind":"Use","ref_id":{"krate":17,"index":132},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\mod.rs","byte_start":34287,"byte_end":34302,"line_start":10,"line_end":10,"column_start":51,"column_end":66},"alias_span":null,"name":"UnsafeFutureObj","value":"","parent":{"krate":0,"index":85}},{"kind":"Use","ref_id":{"krate":0,"index":4322},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":39726,"byte_end":39737,"line_start":99,"line_end":99,"column_start":29,"column_end":40},"alias_span":null,"name":"CatchUnwind","value":"","parent":{"krate":0,"index":97}},{"kind":"Use","ref_id":{"krate":0,"index":257},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":40151,"byte_end":40157,"line_start":113,"line_end":113,"column_start":23,"column_end":29},"alias_span":null,"name":"Shared","value":"","parent":{"krate":0,"index":97}},{"kind":"Use","ref_id":{"krate":0,"index":3762},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\mod.rs","byte_start":34417,"byte_end":34424,"line_start":16,"line_end":16,"column_start":5,"column_end":12},"alias_span":null,"name":"Flatten","value":"","parent":{"krate":0,"index":85}},{"kind":"Use","ref_id":{"krate":0,"index":3654},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\mod.rs","byte_start":34426,"byte_end":34430,"line_start":16,"line_end":16,"column_start":14,"column_end":18},"alias_span":null,"name":"Fuse","value":"","parent":{"krate":0,"index":85}},{"kind":"Use","ref_id":{"krate":0,"index":329},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\mod.rs","byte_start":34432,"byte_end":34441,"line_start":16,"line_end":16,"column_start":20,"column_end":29},"alias_span":null,"name":"FutureExt","value":"","parent":{"krate":0,"index":85}},{"kind":"Use","ref_id":{"krate":0,"index":4151},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\mod.rs","byte_start":34443,"byte_end":34450,"line_start":16,"line_end":16,"column_start":31,"column_end":38},"alias_span":null,"name":"Inspect","value":"","parent":{"krate":0,"index":85}},{"kind":"Use","ref_id":{"krate":0,"index":3945},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\mod.rs","byte_start":34452,"byte_end":34462,"line_start":16,"line_end":16,"column_start":40,"column_end":50},"alias_span":null,"name":"IntoStream","value":"","parent":{"krate":0,"index":85}},{"kind":"Use","ref_id":{"krate":0,"index":3878},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\mod.rs","byte_start":34464,"byte_end":34467,"line_start":16,"line_end":16,"column_start":52,"column_end":55},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":85}},{"kind":"Use","ref_id":{"krate":0,"index":4218},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\mod.rs","byte_start":34469,"byte_end":34479,"line_start":16,"line_end":16,"column_start":57,"column_end":67},"alias_span":null,"name":"NeverError","value":"","parent":{"krate":0,"index":85}},{"kind":"Use","ref_id":{"krate":0,"index":4069},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\mod.rs","byte_start":34481,"byte_end":34485,"line_start":16,"line_end":16,"column_start":69,"column_end":73},"alias_span":null,"name":"Then","value":"","parent":{"krate":0,"index":85}},{"kind":"Use","ref_id":{"krate":0,"index":4271},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\mod.rs","byte_start":34487,"byte_end":34496,"line_start":16,"line_end":16,"column_start":75,"column_end":84},"alias_span":null,"name":"UnitError","value":"","parent":{"krate":0,"index":85}},{"kind":"Use","ref_id":{"krate":0,"index":4000},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\mod.rs","byte_start":34498,"byte_end":34505,"line_start":16,"line_end":16,"column_start":86,"column_end":93},"alias_span":null,"name":"MapInto","value":"","parent":{"krate":0,"index":85}},{"kind":"Use","ref_id":{"krate":0,"index":3815},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\mod.rs","byte_start":34601,"byte_end":34614,"line_start":20,"line_end":20,"column_start":23,"column_end":36},"alias_span":null,"name":"FlattenStream","value":"","parent":{"krate":0,"index":85}},{"kind":"Use","ref_id":{"krate":0,"index":4322},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\mod.rs","byte_start":34663,"byte_end":34674,"line_start":23,"line_end":23,"column_start":23,"column_end":34},"alias_span":null,"name":"CatchUnwind","value":"","parent":{"krate":0,"index":85}},{"kind":"Use","ref_id":{"krate":0,"index":257},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\mod.rs","byte_start":34822,"byte_end":34828,"line_start":30,"line_end":30,"column_start":23,"column_end":29},"alias_span":null,"name":"Shared","value":"","parent":{"krate":0,"index":85}},{"kind":"Use","ref_id":{"krate":0,"index":4839},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\mod.rs","byte_start":34879,"byte_end":34886,"line_start":34,"line_end":34,"column_start":5,"column_end":12},"alias_span":null,"name":"AndThen","value":"","parent":{"krate":0,"index":85}},{"kind":"Use","ref_id":{"krate":0,"index":5004},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\mod.rs","byte_start":34888,"byte_end":34895,"line_start":34,"line_end":34,"column_start":14,"column_end":21},"alias_span":null,"name":"ErrInto","value":"","parent":{"krate":0,"index":85}},{"kind":"Use","ref_id":{"krate":0,"index":5072},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\mod.rs","byte_start":34897,"byte_end":34903,"line_start":34,"line_end":34,"column_start":23,"column_end":29},"alias_span":null,"name":"OkInto","value":"","parent":{"krate":0,"index":85}},{"kind":"Use","ref_id":{"krate":0,"index":5208},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\mod.rs","byte_start":34905,"byte_end":34915,"line_start":34,"line_end":34,"column_start":31,"column_end":41},"alias_span":null,"name":"InspectErr","value":"","parent":{"krate":0,"index":85}},{"kind":"Use","ref_id":{"krate":0,"index":5140},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\mod.rs","byte_start":34917,"byte_end":34926,"line_start":34,"line_end":34,"column_start":43,"column_end":52},"alias_span":null,"name":"InspectOk","value":"","parent":{"krate":0,"index":85}},{"kind":"Use","ref_id":{"krate":0,"index":4366},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\mod.rs","byte_start":34928,"byte_end":34938,"line_start":34,"line_end":34,"column_start":54,"column_end":64},"alias_span":null,"name":"IntoFuture","value":"","parent":{"krate":0,"index":85}},{"kind":"Use","ref_id":{"krate":0,"index":5344},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\mod.rs","byte_start":34940,"byte_end":34946,"line_start":34,"line_end":34,"column_start":66,"column_end":72},"alias_span":null,"name":"MapErr","value":"","parent":{"krate":0,"index":85}},{"kind":"Use","ref_id":{"krate":0,"index":5276},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\mod.rs","byte_start":34948,"byte_end":34953,"line_start":34,"line_end":34,"column_start":74,"column_end":79},"alias_span":null,"name":"MapOk","value":"","parent":{"krate":0,"index":85}},{"kind":"Use","ref_id":{"krate":0,"index":4922},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\mod.rs","byte_start":34955,"byte_end":34961,"line_start":34,"line_end":34,"column_start":81,"column_end":87},"alias_span":null,"name":"OrElse","value":"","parent":{"krate":0,"index":85}},{"kind":"Use","ref_id":{"krate":0,"index":4697},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\mod.rs","byte_start":34963,"byte_end":34979,"line_start":34,"line_end":34,"column_start":89,"column_end":105},"alias_span":null,"name":"TryFlattenStream","value":"","parent":{"krate":0,"index":85}},{"kind":"Use","ref_id":{"krate":0,"index":482},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\mod.rs","byte_start":34985,"byte_end":34997,"line_start":35,"line_end":35,"column_start":5,"column_end":17},"alias_span":null,"name":"TryFutureExt","value":"","parent":{"krate":0,"index":85}},{"kind":"Use","ref_id":{"krate":0,"index":5495},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\mod.rs","byte_start":34999,"byte_end":35011,"line_start":35,"line_end":35,"column_start":19,"column_end":31},"alias_span":null,"name":"UnwrapOrElse","value":"","parent":{"krate":0,"index":85}},{"kind":"Use","ref_id":{"krate":0,"index":5413},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\mod.rs","byte_start":35013,"byte_end":35024,"line_start":35,"line_end":35,"column_start":33,"column_end":44},"alias_span":null,"name":"MapOkOrElse","value":"","parent":{"krate":0,"index":85}},{"kind":"Use","ref_id":{"krate":0,"index":4562},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\mod.rs","byte_start":35026,"byte_end":35036,"line_start":35,"line_end":35,"column_start":46,"column_end":56},"alias_span":null,"name":"TryFlatten","value":"","parent":{"krate":0,"index":85}},{"kind":"Use","ref_id":{"krate":0,"index":4760},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\mod.rs","byte_start":35093,"byte_end":35104,"line_start":39,"line_end":39,"column_start":27,"column_end":38},"alias_span":null,"name":"FlattenSink","value":"","parent":{"krate":0,"index":85}},{"kind":"Use","ref_id":{"krate":0,"index":541},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\mod.rs","byte_start":35160,"byte_end":35164,"line_start":44,"line_end":44,"column_start":22,"column_end":26},"alias_span":null,"name":"lazy","value":"","parent":{"krate":0,"index":85}},{"kind":"Use","ref_id":{"krate":0,"index":5560},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\mod.rs","byte_start":35166,"byte_end":35170,"line_start":44,"line_end":44,"column_start":28,"column_end":32},"alias_span":null,"name":"Lazy","value":"","parent":{"krate":0,"index":85}},{"kind":"Use","ref_id":{"krate":0,"index":568},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\mod.rs","byte_start":35211,"byte_end":35218,"line_start":47,"line_end":47,"column_start":25,"column_end":32},"alias_span":null,"name":"pending","value":"","parent":{"krate":0,"index":85}},{"kind":"Use","ref_id":{"krate":0,"index":5566},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\mod.rs","byte_start":35220,"byte_end":35227,"line_start":47,"line_end":47,"column_start":34,"column_end":41},"alias_span":null,"name":"Pending","value":"","parent":{"krate":0,"index":85}},{"kind":"Use","ref_id":{"krate":0,"index":594},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\mod.rs","byte_start":35274,"byte_end":35284,"line_start":50,"line_end":50,"column_start":28,"column_end":38},"alias_span":null,"name":"maybe_done","value":"","parent":{"krate":0,"index":85}},{"kind":"Use","ref_id":{"krate":0,"index":5572},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\mod.rs","byte_start":35286,"byte_end":35295,"line_start":50,"line_end":50,"column_start":40,"column_end":49},"alias_span":null,"name":"MaybeDone","value":"","parent":{"krate":0,"index":85}},{"kind":"Use","ref_id":{"krate":0,"index":621},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\mod.rs","byte_start":35350,"byte_end":35364,"line_start":53,"line_end":53,"column_start":32,"column_end":46},"alias_span":null,"name":"try_maybe_done","value":"","parent":{"krate":0,"index":85}},{"kind":"Use","ref_id":{"krate":0,"index":5634},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\mod.rs","byte_start":35366,"byte_end":35378,"line_start":53,"line_end":53,"column_start":48,"column_end":60},"alias_span":null,"name":"TryMaybeDone","value":"","parent":{"krate":0,"index":85}},{"kind":"Use","ref_id":{"krate":0,"index":5696},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\mod.rs","byte_start":35416,"byte_end":35428,"line_start":56,"line_end":56,"column_start":23,"column_end":35},"alias_span":null,"name":"OptionFuture","value":"","parent":{"krate":0,"index":85}},{"kind":"Use","ref_id":{"krate":0,"index":667},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\mod.rs","byte_start":35468,"byte_end":35475,"line_start":59,"line_end":59,"column_start":25,"column_end":32},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":85}},{"kind":"Use","ref_id":{"krate":0,"index":662},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\mod.rs","byte_start":35477,"byte_end":35483,"line_start":59,"line_end":59,"column_start":34,"column_end":40},"alias_span":null,"name":"PollFn","value":"","parent":{"krate":0,"index":85}},{"kind":"Use","ref_id":{"krate":0,"index":706},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\mod.rs","byte_start":35520,"byte_end":35523,"line_start":62,"line_end":62,"column_start":23,"column_end":26},"alias_span":null,"name":"err","value":"","parent":{"krate":0,"index":85}},{"kind":"Use","ref_id":{"krate":0,"index":703},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\mod.rs","byte_start":35525,"byte_end":35527,"line_start":62,"line_end":62,"column_start":28,"column_end":30},"alias_span":null,"name":"ok","value":"","parent":{"krate":0,"index":85}},{"kind":"Use","ref_id":{"krate":0,"index":701},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\mod.rs","byte_start":35529,"byte_end":35534,"line_start":62,"line_end":62,"column_start":32,"column_end":37},"alias_span":null,"name":"ready","value":"","parent":{"krate":0,"index":85}},{"kind":"Use","ref_id":{"krate":0,"index":5743},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\mod.rs","byte_start":35536,"byte_end":35541,"line_start":62,"line_end":62,"column_start":39,"column_end":44},"alias_span":null,"name":"Ready","value":"","parent":{"krate":0,"index":85}},{"kind":"Use","ref_id":{"krate":0,"index":729},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\mod.rs","byte_start":35576,"byte_end":35580,"line_start":65,"line_end":65,"column_start":22,"column_end":26},"alias_span":null,"name":"join","value":"","parent":{"krate":0,"index":85}},{"kind":"Use","ref_id":{"krate":0,"index":732},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\mod.rs","byte_start":35582,"byte_end":35587,"line_start":65,"line_end":65,"column_start":28,"column_end":33},"alias_span":null,"name":"join3","value":"","parent":{"krate":0,"index":85}},{"kind":"Use","ref_id":{"krate":0,"index":736},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\mod.rs","byte_start":35589,"byte_end":35594,"line_start":65,"line_end":65,"column_start":35,"column_end":40},"alias_span":null,"name":"join4","value":"","parent":{"krate":0,"index":85}},{"kind":"Use","ref_id":{"krate":0,"index":741},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\mod.rs","byte_start":35596,"byte_end":35601,"line_start":65,"line_end":65,"column_start":42,"column_end":47},"alias_span":null,"name":"join5","value":"","parent":{"krate":0,"index":85}},{"kind":"Use","ref_id":{"krate":0,"index":5845},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\mod.rs","byte_start":35603,"byte_end":35607,"line_start":65,"line_end":65,"column_start":49,"column_end":53},"alias_span":null,"name":"Join","value":"","parent":{"krate":0,"index":85}},{"kind":"Use","ref_id":{"krate":0,"index":5897},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\mod.rs","byte_start":35609,"byte_end":35614,"line_start":65,"line_end":65,"column_start":55,"column_end":60},"alias_span":null,"name":"Join3","value":"","parent":{"krate":0,"index":85}},{"kind":"Use","ref_id":{"krate":0,"index":5963},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\mod.rs","byte_start":35616,"byte_end":35621,"line_start":65,"line_end":65,"column_start":62,"column_end":67},"alias_span":null,"name":"Join4","value":"","parent":{"krate":0,"index":85}},{"kind":"Use","ref_id":{"krate":0,"index":6043},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\mod.rs","byte_start":35623,"byte_end":35628,"line_start":65,"line_end":65,"column_start":69,"column_end":74},"alias_span":null,"name":"Join5","value":"","parent":{"krate":0,"index":85}},{"kind":"Use","ref_id":{"krate":0,"index":778},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\mod.rs","byte_start":35723,"byte_end":35731,"line_start":70,"line_end":70,"column_start":26,"column_end":34},"alias_span":null,"name":"join_all","value":"","parent":{"krate":0,"index":85}},{"kind":"Use","ref_id":{"krate":0,"index":772},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\mod.rs","byte_start":35733,"byte_end":35740,"line_start":70,"line_end":70,"column_start":36,"column_end":43},"alias_span":null,"name":"JoinAll","value":"","parent":{"krate":0,"index":85}},{"kind":"Use","ref_id":{"krate":0,"index":806},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\mod.rs","byte_start":35779,"byte_end":35785,"line_start":73,"line_end":73,"column_start":24,"column_end":30},"alias_span":null,"name":"select","value":"","parent":{"krate":0,"index":85}},{"kind":"Use","ref_id":{"krate":0,"index":6137},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\mod.rs","byte_start":35787,"byte_end":35793,"line_start":73,"line_end":73,"column_start":32,"column_end":38},"alias_span":null,"name":"Select","value":"","parent":{"krate":0,"index":85}},{"kind":"Use","ref_id":{"krate":0,"index":833},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\mod.rs","byte_start":35892,"byte_end":35902,"line_start":78,"line_end":78,"column_start":28,"column_end":38},"alias_span":null,"name":"select_all","value":"","parent":{"krate":0,"index":85}},{"kind":"Use","ref_id":{"krate":0,"index":6145},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\mod.rs","byte_start":35904,"byte_end":35913,"line_start":78,"line_end":78,"column_start":40,"column_end":49},"alias_span":null,"name":"SelectAll","value":"","parent":{"krate":0,"index":85}},{"kind":"Use","ref_id":{"krate":0,"index":861},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\mod.rs","byte_start":35961,"byte_end":35969,"line_start":82,"line_end":82,"column_start":5,"column_end":13},"alias_span":null,"name":"try_join","value":"","parent":{"krate":0,"index":85}},{"kind":"Use","ref_id":{"krate":0,"index":864},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\mod.rs","byte_start":35971,"byte_end":35980,"line_start":82,"line_end":82,"column_start":15,"column_end":24},"alias_span":null,"name":"try_join3","value":"","parent":{"krate":0,"index":85}},{"kind":"Use","ref_id":{"krate":0,"index":868},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\mod.rs","byte_start":35982,"byte_end":35991,"line_start":82,"line_end":82,"column_start":26,"column_end":35},"alias_span":null,"name":"try_join4","value":"","parent":{"krate":0,"index":85}},{"kind":"Use","ref_id":{"krate":0,"index":873},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\mod.rs","byte_start":35993,"byte_end":36002,"line_start":82,"line_end":82,"column_start":37,"column_end":46},"alias_span":null,"name":"try_join5","value":"","parent":{"krate":0,"index":85}},{"kind":"Use","ref_id":{"krate":0,"index":6221},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\mod.rs","byte_start":36004,"byte_end":36011,"line_start":82,"line_end":82,"column_start":48,"column_end":55},"alias_span":null,"name":"TryJoin","value":"","parent":{"krate":0,"index":85}},{"kind":"Use","ref_id":{"krate":0,"index":6273},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\mod.rs","byte_start":36013,"byte_end":36021,"line_start":82,"line_end":82,"column_start":57,"column_end":65},"alias_span":null,"name":"TryJoin3","value":"","parent":{"krate":0,"index":85}},{"kind":"Use","ref_id":{"krate":0,"index":6339},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\mod.rs","byte_start":36023,"byte_end":36031,"line_start":82,"line_end":82,"column_start":67,"column_end":75},"alias_span":null,"name":"TryJoin4","value":"","parent":{"krate":0,"index":85}},{"kind":"Use","ref_id":{"krate":0,"index":6419},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\mod.rs","byte_start":36033,"byte_end":36041,"line_start":82,"line_end":82,"column_start":77,"column_end":85},"alias_span":null,"name":"TryJoin5","value":"","parent":{"krate":0,"index":85}},{"kind":"Use","ref_id":{"krate":0,"index":921},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\mod.rs","byte_start":36146,"byte_end":36158,"line_start":88,"line_end":88,"column_start":30,"column_end":42},"alias_span":null,"name":"try_join_all","value":"","parent":{"krate":0,"index":85}},{"kind":"Use","ref_id":{"krate":0,"index":915},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\mod.rs","byte_start":36160,"byte_end":36170,"line_start":88,"line_end":88,"column_start":44,"column_end":54},"alias_span":null,"name":"TryJoinAll","value":"","parent":{"krate":0,"index":85}},{"kind":"Use","ref_id":{"krate":0,"index":949},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\mod.rs","byte_start":36217,"byte_end":36227,"line_start":91,"line_end":91,"column_start":28,"column_end":38},"alias_span":null,"name":"try_select","value":"","parent":{"krate":0,"index":85}},{"kind":"Use","ref_id":{"krate":0,"index":6513},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\mod.rs","byte_start":36229,"byte_end":36238,"line_start":91,"line_end":91,"column_start":40,"column_end":49},"alias_span":null,"name":"TrySelect","value":"","parent":{"krate":0,"index":85}},{"kind":"Use","ref_id":{"krate":0,"index":974},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\mod.rs","byte_start":36335,"byte_end":36344,"line_start":96,"line_end":96,"column_start":27,"column_end":36},"alias_span":null,"name":"select_ok","value":"","parent":{"krate":0,"index":85}},{"kind":"Use","ref_id":{"krate":0,"index":6521},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\mod.rs","byte_start":36346,"byte_end":36354,"line_start":96,"line_end":96,"column_start":38,"column_end":46},"alias_span":null,"name":"SelectOk","value":"","parent":{"krate":0,"index":85}},{"kind":"Use","ref_id":{"krate":0,"index":6527},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\mod.rs","byte_start":36392,"byte_end":36398,"line_start":99,"line_end":99,"column_start":23,"column_end":29},"alias_span":null,"name":"Either","value":"","parent":{"krate":0,"index":85}},{"kind":"Use","ref_id":{"krate":0,"index":6620},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\mod.rs","byte_start":36535,"byte_end":36544,"line_start":105,"line_end":105,"column_start":31,"column_end":40},"alias_span":null,"name":"abortable","value":"","parent":{"krate":0,"index":85}},{"kind":"Use","ref_id":{"krate":0,"index":11889},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\mod.rs","byte_start":36546,"byte_end":36555,"line_start":105,"line_end":105,"column_start":42,"column_end":51},"alias_span":null,"name":"Abortable","value":"","parent":{"krate":0,"index":85}},{"kind":"Use","ref_id":{"krate":0,"index":6641},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\mod.rs","byte_start":36557,"byte_end":36568,"line_start":105,"line_end":105,"column_start":53,"column_end":64},"alias_span":null,"name":"AbortHandle","value":"","parent":{"krate":0,"index":85}},{"kind":"Use","ref_id":{"krate":0,"index":6637},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\mod.rs","byte_start":36570,"byte_end":36587,"line_start":105,"line_end":105,"column_start":66,"column_end":83},"alias_span":null,"name":"AbortRegistration","value":"","parent":{"krate":0,"index":85}},{"kind":"Use","ref_id":{"krate":0,"index":6652},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\mod.rs","byte_start":36589,"byte_end":36596,"line_start":105,"line_end":105,"column_start":85,"column_end":92},"alias_span":null,"name":"Aborted","value":"","parent":{"krate":0,"index":85}},{"kind":"Use","ref_id":{"krate":0,"index":329},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":11768,"byte_end":11777,"line_start":305,"line_end":305,"column_start":40,"column_end":49},"alias_span":null,"name":"FutureExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":482},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":11779,"byte_end":11791,"line_start":305,"line_end":305,"column_start":51,"column_end":63},"alias_span":null,"name":"TryFutureExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":14,"index":62},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\mod.rs","byte_start":158428,"byte_end":158437,"line_start":8,"line_end":8,"column_start":32,"column_end":41},"alias_span":null,"name":"BoxStream","value":"","parent":{"krate":0,"index":1044}},{"kind":"Use","ref_id":{"krate":14,"index":65},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\mod.rs","byte_start":158439,"byte_end":158453,"line_start":8,"line_end":8,"column_start":43,"column_end":57},"alias_span":null,"name":"LocalBoxStream","value":"","parent":{"krate":0,"index":1044}},{"kind":"Use","ref_id":{"krate":14,"index":82},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\mod.rs","byte_start":158487,"byte_end":158498,"line_start":9,"line_end":9,"column_start":32,"column_end":43},"alias_span":null,"name":"FusedStream","value":"","parent":{"krate":0,"index":1044}},{"kind":"Use","ref_id":{"krate":14,"index":68},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\mod.rs","byte_start":158500,"byte_end":158506,"line_start":9,"line_end":9,"column_start":45,"column_end":51},"alias_span":null,"name":"Stream","value":"","parent":{"krate":0,"index":1044}},{"kind":"Use","ref_id":{"krate":14,"index":97},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\mod.rs","byte_start":158508,"byte_end":158517,"line_start":9,"line_end":9,"column_start":53,"column_end":62},"alias_span":null,"name":"TryStream","value":"","parent":{"krate":0,"index":1044}},{"kind":"Use","ref_id":{"krate":0,"index":8339},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":165374,"byte_end":165380,"line_start":148,"line_end":148,"column_start":23,"column_end":29},"alias_span":null,"name":"Chunks","value":"","parent":{"krate":0,"index":1052}},{"kind":"Use","ref_id":{"krate":0,"index":8395},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":165557,"byte_end":165568,"line_start":154,"line_end":154,"column_start":29,"column_end":40},"alias_span":null,"name":"ReadyChunks","value":"","parent":{"krate":0,"index":1052}},{"kind":"Use","ref_id":{"krate":0,"index":8739},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":166805,"byte_end":166816,"line_start":192,"line_end":192,"column_start":29,"column_end":40},"alias_span":null,"name":"CatchUnwind","value":"","parent":{"krate":0,"index":1052}},{"kind":"Use","ref_id":{"krate":0,"index":6665},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\mod.rs","byte_start":158633,"byte_end":158638,"line_start":16,"line_end":16,"column_start":5,"column_end":10},"alias_span":null,"name":"Chain","value":"","parent":{"krate":0,"index":1044}},{"kind":"Use","ref_id":{"krate":0,"index":6722},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\mod.rs","byte_start":158640,"byte_end":158647,"line_start":16,"line_end":16,"column_start":12,"column_end":19},"alias_span":null,"name":"Collect","value":"","parent":{"krate":0,"index":1044}},{"kind":"Use","ref_id":{"krate":0,"index":6778},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\mod.rs","byte_start":158649,"byte_end":158655,"line_start":16,"line_end":16,"column_start":21,"column_end":27},"alias_span":null,"name":"Concat","value":"","parent":{"krate":0,"index":1044}},{"kind":"Use","ref_id":{"krate":0,"index":6823},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\mod.rs","byte_start":158657,"byte_end":158666,"line_start":16,"line_end":16,"column_start":29,"column_end":38},"alias_span":null,"name":"Enumerate","value":"","parent":{"krate":0,"index":1044}},{"kind":"Use","ref_id":{"krate":0,"index":6876},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\mod.rs","byte_start":158668,"byte_end":158674,"line_start":16,"line_end":16,"column_start":40,"column_end":46},"alias_span":null,"name":"Filter","value":"","parent":{"krate":0,"index":1044}},{"kind":"Use","ref_id":{"krate":0,"index":6953},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\mod.rs","byte_start":158676,"byte_end":158685,"line_start":16,"line_end":16,"column_start":48,"column_end":57},"alias_span":null,"name":"FilterMap","value":"","parent":{"krate":0,"index":1044}},{"kind":"Use","ref_id":{"krate":0,"index":7653},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\mod.rs","byte_start":158687,"byte_end":158694,"line_start":16,"line_end":16,"column_start":59,"column_end":66},"alias_span":null,"name":"FlatMap","value":"","parent":{"krate":0,"index":1044}},{"kind":"Use","ref_id":{"krate":0,"index":7094},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\mod.rs","byte_start":158696,"byte_end":158703,"line_start":16,"line_end":16,"column_start":68,"column_end":75},"alias_span":null,"name":"Flatten","value":"","parent":{"krate":0,"index":1044}},{"kind":"Use","ref_id":{"krate":0,"index":7160},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\mod.rs","byte_start":158705,"byte_end":158709,"line_start":16,"line_end":16,"column_start":77,"column_end":81},"alias_span":null,"name":"Fold","value":"","parent":{"krate":0,"index":1044}},{"kind":"Use","ref_id":{"krate":0,"index":7378},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\mod.rs","byte_start":158711,"byte_end":158718,"line_start":16,"line_end":16,"column_start":83,"column_end":90},"alias_span":null,"name":"ForEach","value":"","parent":{"krate":0,"index":1044}},{"kind":"Use","ref_id":{"krate":0,"index":7444},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\mod.rs","byte_start":158720,"byte_end":158724,"line_start":16,"line_end":16,"column_start":92,"column_end":96},"alias_span":null,"name":"Fuse","value":"","parent":{"krate":0,"index":1044}},{"kind":"Use","ref_id":{"krate":0,"index":7506},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\mod.rs","byte_start":158730,"byte_end":158737,"line_start":17,"line_end":17,"column_start":5,"column_end":12},"alias_span":null,"name":"Inspect","value":"","parent":{"krate":0,"index":1044}},{"kind":"Use","ref_id":{"krate":0,"index":7588},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\mod.rs","byte_start":158739,"byte_end":158742,"line_start":17,"line_end":17,"column_start":14,"column_end":17},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":1044}},{"kind":"Use","ref_id":{"krate":0,"index":7751},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\mod.rs","byte_start":158744,"byte_end":158748,"line_start":17,"line_end":17,"column_start":19,"column_end":23},"alias_span":null,"name":"Next","value":"","parent":{"krate":0,"index":1044}},{"kind":"Use","ref_id":{"krate":0,"index":7821},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\mod.rs","byte_start":158750,"byte_end":158754,"line_start":17,"line_end":17,"column_start":25,"column_end":29},"alias_span":null,"name":"Peek","value":"","parent":{"krate":0,"index":1044}},{"kind":"Use","ref_id":{"krate":0,"index":7767},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\mod.rs","byte_start":158756,"byte_end":158764,"line_start":17,"line_end":17,"column_start":31,"column_end":39},"alias_span":null,"name":"Peekable","value":"","parent":{"krate":0,"index":1044}},{"kind":"Use","ref_id":{"krate":0,"index":8451},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\mod.rs","byte_start":158766,"byte_end":158770,"line_start":17,"line_end":17,"column_start":41,"column_end":45},"alias_span":null,"name":"Scan","value":"","parent":{"krate":0,"index":1044}},{"kind":"Use","ref_id":{"krate":0,"index":7759},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\mod.rs","byte_start":158772,"byte_end":158786,"line_start":17,"line_end":17,"column_start":47,"column_end":61},"alias_span":null,"name":"SelectNextSome","value":"","parent":{"krate":0,"index":1044}},{"kind":"Use","ref_id":{"krate":0,"index":7869},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\mod.rs","byte_start":158788,"byte_end":158792,"line_start":17,"line_end":17,"column_start":63,"column_end":67},"alias_span":null,"name":"Skip","value":"","parent":{"krate":0,"index":1044}},{"kind":"Use","ref_id":{"krate":0,"index":7922},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\mod.rs","byte_start":158794,"byte_end":158803,"line_start":17,"line_end":17,"column_start":69,"column_end":78},"alias_span":null,"name":"SkipWhile","value":"","parent":{"krate":0,"index":1044}},{"kind":"Use","ref_id":{"krate":0,"index":1989},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\mod.rs","byte_start":158805,"byte_end":158814,"line_start":17,"line_end":17,"column_start":80,"column_end":89},"alias_span":null,"name":"StreamExt","value":"","parent":{"krate":0,"index":1044}},{"kind":"Use","ref_id":{"krate":0,"index":7497},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\mod.rs","byte_start":158820,"byte_end":158832,"line_start":18,"line_end":18,"column_start":5,"column_end":17},"alias_span":null,"name":"StreamFuture","value":"","parent":{"krate":0,"index":1044}},{"kind":"Use","ref_id":{"krate":0,"index":8002},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\mod.rs","byte_start":158834,"byte_end":158838,"line_start":18,"line_end":18,"column_start":19,"column_end":23},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":1044}},{"kind":"Use","ref_id":{"krate":0,"index":8055},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\mod.rs","byte_start":158840,"byte_end":158849,"line_start":18,"line_end":18,"column_start":25,"column_end":34},"alias_span":null,"name":"TakeWhile","value":"","parent":{"krate":0,"index":1044}},{"kind":"Use","ref_id":{"krate":0,"index":8135},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\mod.rs","byte_start":158851,"byte_end":158860,"line_start":18,"line_end":18,"column_start":36,"column_end":45},"alias_span":null,"name":"TakeUntil","value":"","parent":{"krate":0,"index":1044}},{"kind":"Use","ref_id":{"krate":0,"index":8202},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\mod.rs","byte_start":158862,"byte_end":158866,"line_start":18,"line_end":18,"column_start":47,"column_end":51},"alias_span":null,"name":"Then","value":"","parent":{"krate":0,"index":1044}},{"kind":"Use","ref_id":{"krate":0,"index":8276},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\mod.rs","byte_start":158868,"byte_end":158871,"line_start":18,"line_end":18,"column_start":53,"column_end":56},"alias_span":null,"name":"Zip","value":"","parent":{"krate":0,"index":1044}},{"kind":"Use","ref_id":{"krate":0,"index":8739},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\mod.rs","byte_start":158923,"byte_end":158934,"line_start":22,"line_end":22,"column_start":23,"column_end":34},"alias_span":null,"name":"CatchUnwind","value":"","parent":{"krate":0,"index":1044}},{"kind":"Use","ref_id":{"krate":0,"index":8339},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\mod.rs","byte_start":158985,"byte_end":158991,"line_start":25,"line_end":25,"column_start":23,"column_end":29},"alias_span":null,"name":"Chunks","value":"","parent":{"krate":0,"index":1044}},{"kind":"Use","ref_id":{"krate":0,"index":8395},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\mod.rs","byte_start":159042,"byte_end":159053,"line_start":28,"line_end":28,"column_start":23,"column_end":34},"alias_span":null,"name":"ReadyChunks","value":"","parent":{"krate":0,"index":1044}},{"kind":"Use","ref_id":{"krate":0,"index":7313},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\mod.rs","byte_start":159103,"byte_end":159110,"line_start":31,"line_end":31,"column_start":23,"column_end":30},"alias_span":null,"name":"Forward","value":"","parent":{"krate":0,"index":1044}},{"kind":"Use","ref_id":{"krate":0,"index":11845},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\mod.rs","byte_start":159241,"byte_end":159256,"line_start":35,"line_end":35,"column_start":24,"column_end":39},"alias_span":null,"name":"BufferUnordered","value":"","parent":{"krate":0,"index":1044}},{"kind":"Use","ref_id":{"krate":0,"index":11800},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\mod.rs","byte_start":159258,"byte_end":159266,"line_start":35,"line_end":35,"column_start":41,"column_end":49},"alias_span":null,"name":"Buffered","value":"","parent":{"krate":0,"index":1044}},{"kind":"Use","ref_id":{"krate":0,"index":11732},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\mod.rs","byte_start":159268,"byte_end":159285,"line_start":35,"line_end":35,"column_start":51,"column_end":68},"alias_span":null,"name":"ForEachConcurrent","value":"","parent":{"krate":0,"index":1044}},{"kind":"Use","ref_id":{"krate":0,"index":8686},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\mod.rs","byte_start":159442,"byte_end":159454,"line_start":40,"line_end":40,"column_start":24,"column_end":36},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":1044}},{"kind":"Use","ref_id":{"krate":0,"index":8730},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\mod.rs","byte_start":159456,"byte_end":159465,"line_start":40,"line_end":40,"column_start":38,"column_end":47},"alias_span":null,"name":"SplitSink","value":"","parent":{"krate":0,"index":1044}},{"kind":"Use","ref_id":{"krate":0,"index":8723},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\mod.rs","byte_start":159467,"byte_end":159478,"line_start":40,"line_end":40,"column_start":49,"column_end":60},"alias_span":null,"name":"SplitStream","value":"","parent":{"krate":0,"index":1044}},{"kind":"Use","ref_id":{"krate":0,"index":2511},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\mod.rs","byte_start":159530,"byte_end":159540,"line_start":44,"line_end":44,"column_start":5,"column_end":15},"alias_span":null,"name":"try_unfold","value":"","parent":{"krate":0,"index":1044}},{"kind":"Use","ref_id":{"krate":0,"index":8790},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\mod.rs","byte_start":159542,"byte_end":159549,"line_start":44,"line_end":44,"column_start":17,"column_end":24},"alias_span":null,"name":"AndThen","value":"","parent":{"krate":0,"index":1044}},{"kind":"Use","ref_id":{"krate":0,"index":8867},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\mod.rs","byte_start":159551,"byte_end":159558,"line_start":44,"line_end":44,"column_start":26,"column_end":33},"alias_span":null,"name":"ErrInto","value":"","parent":{"krate":0,"index":1044}},{"kind":"Use","ref_id":{"krate":0,"index":9037},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\mod.rs","byte_start":159560,"byte_end":159570,"line_start":44,"line_end":44,"column_start":35,"column_end":45},"alias_span":null,"name":"InspectErr","value":"","parent":{"krate":0,"index":1044}},{"kind":"Use","ref_id":{"krate":0,"index":8952},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\mod.rs","byte_start":159572,"byte_end":159581,"line_start":44,"line_end":44,"column_start":47,"column_end":56},"alias_span":null,"name":"InspectOk","value":"","parent":{"krate":0,"index":1044}},{"kind":"Use","ref_id":{"krate":0,"index":9119},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\mod.rs","byte_start":159583,"byte_end":159593,"line_start":44,"line_end":44,"column_start":58,"column_end":68},"alias_span":null,"name":"IntoStream","value":"","parent":{"krate":0,"index":1044}},{"kind":"Use","ref_id":{"krate":0,"index":9256},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\mod.rs","byte_start":159595,"byte_end":159601,"line_start":44,"line_end":44,"column_start":70,"column_end":76},"alias_span":null,"name":"MapErr","value":"","parent":{"krate":0,"index":1044}},{"kind":"Use","ref_id":{"krate":0,"index":9171},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\mod.rs","byte_start":159603,"byte_end":159608,"line_start":44,"line_end":44,"column_start":78,"column_end":83},"alias_span":null,"name":"MapOk","value":"","parent":{"krate":0,"index":1044}},{"kind":"Use","ref_id":{"krate":0,"index":9338},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\mod.rs","byte_start":159610,"byte_end":159616,"line_start":44,"line_end":44,"column_start":85,"column_end":91},"alias_span":null,"name":"OrElse","value":"","parent":{"krate":0,"index":1044}},{"kind":"Use","ref_id":{"krate":0,"index":9691},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\mod.rs","byte_start":159622,"byte_end":159632,"line_start":45,"line_end":45,"column_start":5,"column_end":15},"alias_span":null,"name":"TryCollect","value":"","parent":{"krate":0,"index":1044}},{"kind":"Use","ref_id":{"krate":0,"index":9747},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\mod.rs","byte_start":159634,"byte_end":159643,"line_start":45,"line_end":45,"column_start":17,"column_end":26},"alias_span":null,"name":"TryConcat","value":"","parent":{"krate":0,"index":1044}},{"kind":"Use","ref_id":{"krate":0,"index":9486},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\mod.rs","byte_start":159645,"byte_end":159654,"line_start":45,"line_end":45,"column_start":28,"column_end":37},"alias_span":null,"name":"TryFilter","value":"","parent":{"krate":0,"index":1044}},{"kind":"Use","ref_id":{"krate":0,"index":9563},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\mod.rs","byte_start":159656,"byte_end":159668,"line_start":45,"line_end":45,"column_start":39,"column_end":51},"alias_span":null,"name":"TryFilterMap","value":"","parent":{"krate":0,"index":1044}},{"kind":"Use","ref_id":{"krate":0,"index":9637},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\mod.rs","byte_start":159670,"byte_end":159680,"line_start":45,"line_end":45,"column_start":53,"column_end":63},"alias_span":null,"name":"TryFlatten","value":"","parent":{"krate":0,"index":1044}},{"kind":"Use","ref_id":{"krate":0,"index":9792},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\mod.rs","byte_start":159682,"byte_end":159689,"line_start":45,"line_end":45,"column_start":65,"column_end":72},"alias_span":null,"name":"TryFold","value":"","parent":{"krate":0,"index":1044}},{"kind":"Use","ref_id":{"krate":0,"index":9420},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\mod.rs","byte_start":159691,"byte_end":159701,"line_start":45,"line_end":45,"column_start":74,"column_end":84},"alias_span":null,"name":"TryForEach","value":"","parent":{"krate":0,"index":1044}},{"kind":"Use","ref_id":{"krate":0,"index":9412},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\mod.rs","byte_start":159703,"byte_end":159710,"line_start":45,"line_end":45,"column_start":86,"column_end":93},"alias_span":null,"name":"TryNext","value":"","parent":{"krate":0,"index":1044}},{"kind":"Use","ref_id":{"krate":0,"index":9936},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\mod.rs","byte_start":159716,"byte_end":159728,"line_start":46,"line_end":46,"column_start":5,"column_end":17},"alias_span":null,"name":"TrySkipWhile","value":"","parent":{"krate":0,"index":1044}},{"kind":"Use","ref_id":{"krate":0,"index":2576},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\mod.rs","byte_start":159730,"byte_end":159742,"line_start":46,"line_end":46,"column_start":19,"column_end":31},"alias_span":null,"name":"TryStreamExt","value":"","parent":{"krate":0,"index":1044}},{"kind":"Use","ref_id":{"krate":0,"index":9871},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\mod.rs","byte_start":159744,"byte_end":159753,"line_start":46,"line_end":46,"column_start":33,"column_end":42},"alias_span":null,"name":"TryUnfold","value":"","parent":{"krate":0,"index":1044}},{"kind":"Use","ref_id":{"krate":0,"index":11683},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\mod.rs","byte_start":159980,"byte_end":159998,"line_start":55,"line_end":55,"column_start":28,"column_end":46},"alias_span":null,"name":"TryBufferUnordered","value":"","parent":{"krate":0,"index":1044}},{"kind":"Use","ref_id":{"krate":0,"index":11615},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\mod.rs","byte_start":160000,"byte_end":160020,"line_start":55,"line_end":55,"column_start":48,"column_end":68},"alias_span":null,"name":"TryForEachConcurrent","value":"","parent":{"krate":0,"index":1044}},{"kind":"Use","ref_id":{"krate":0,"index":2656},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\mod.rs","byte_start":160077,"byte_end":160081,"line_start":60,"line_end":60,"column_start":22,"column_end":26},"alias_span":null,"name":"iter","value":"","parent":{"krate":0,"index":1044}},{"kind":"Use","ref_id":{"krate":0,"index":10096},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\mod.rs","byte_start":160083,"byte_end":160087,"line_start":60,"line_end":60,"column_start":28,"column_end":32},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":1044}},{"kind":"Use","ref_id":{"krate":0,"index":2674},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\mod.rs","byte_start":160126,"byte_end":160132,"line_start":63,"line_end":63,"column_start":24,"column_end":30},"alias_span":null,"name":"repeat","value":"","parent":{"krate":0,"index":1044}},{"kind":"Use","ref_id":{"krate":0,"index":10102},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\mod.rs","byte_start":160134,"byte_end":160140,"line_start":63,"line_end":63,"column_start":32,"column_end":38},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":1044}},{"kind":"Use","ref_id":{"krate":0,"index":2698},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\mod.rs","byte_start":160177,"byte_end":160182,"line_start":66,"line_end":66,"column_start":23,"column_end":28},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":1044}},{"kind":"Use","ref_id":{"krate":0,"index":10108},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\mod.rs","byte_start":160184,"byte_end":160189,"line_start":66,"line_end":66,"column_start":30,"column_end":35},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":1044}},{"kind":"Use","ref_id":{"krate":0,"index":2725},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\mod.rs","byte_start":160224,"byte_end":160228,"line_start":69,"line_end":69,"column_start":22,"column_end":26},"alias_span":null,"name":"once","value":"","parent":{"krate":0,"index":1044}},{"kind":"Use","ref_id":{"krate":0,"index":10114},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\mod.rs","byte_start":160230,"byte_end":160234,"line_start":69,"line_end":69,"column_start":28,"column_end":32},"alias_span":null,"name":"Once","value":"","parent":{"krate":0,"index":1044}},{"kind":"Use","ref_id":{"krate":0,"index":2749},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\mod.rs","byte_start":160275,"byte_end":160282,"line_start":72,"line_end":72,"column_start":25,"column_end":32},"alias_span":null,"name":"pending","value":"","parent":{"krate":0,"index":1044}},{"kind":"Use","ref_id":{"krate":0,"index":10156},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\mod.rs","byte_start":160284,"byte_end":160291,"line_start":72,"line_end":72,"column_start":34,"column_end":41},"alias_span":null,"name":"Pending","value":"","parent":{"krate":0,"index":1044}},{"kind":"Use","ref_id":{"krate":0,"index":2779},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\mod.rs","byte_start":160332,"byte_end":160339,"line_start":75,"line_end":75,"column_start":25,"column_end":32},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":1044}},{"kind":"Use","ref_id":{"krate":0,"index":2771},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\mod.rs","byte_start":160341,"byte_end":160347,"line_start":75,"line_end":75,"column_start":34,"column_end":40},"alias_span":null,"name":"PollFn","value":"","parent":{"krate":0,"index":1044}},{"kind":"Use","ref_id":{"krate":0,"index":2804},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\mod.rs","byte_start":160386,"byte_end":160392,"line_start":78,"line_end":78,"column_start":24,"column_end":30},"alias_span":null,"name":"select","value":"","parent":{"krate":0,"index":1044}},{"kind":"Use","ref_id":{"krate":0,"index":10162},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\mod.rs","byte_start":160394,"byte_end":160400,"line_start":78,"line_end":78,"column_start":32,"column_end":38},"alias_span":null,"name":"Select","value":"","parent":{"krate":0,"index":1044}},{"kind":"Use","ref_id":{"krate":0,"index":2840},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\mod.rs","byte_start":160439,"byte_end":160445,"line_start":81,"line_end":81,"column_start":24,"column_end":30},"alias_span":null,"name":"unfold","value":"","parent":{"krate":0,"index":1044}},{"kind":"Use","ref_id":{"krate":0,"index":10223},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\mod.rs","byte_start":160447,"byte_end":160453,"line_start":81,"line_end":81,"column_start":32,"column_end":38},"alias_span":null,"name":"Unfold","value":"","parent":{"krate":0,"index":1044}},{"kind":"Use","ref_id":{"krate":0,"index":10323},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\mod.rs","byte_start":160602,"byte_end":160616,"line_start":87,"line_end":87,"column_start":36,"column_end":50},"alias_span":null,"name":"FuturesOrdered","value":"","parent":{"krate":0,"index":1044}},{"kind":"Use","ref_id":{"krate":0,"index":10671},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_unordered\\mod.rs","byte_start":8413461,"byte_end":8413465,"line_start":25,"line_end":25,"column_start":22,"column_end":26},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":10358}},{"kind":"Use","ref_id":{"krate":0,"index":10651},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_unordered\\mod.rs","byte_start":8413467,"byte_end":8413474,"line_start":25,"line_end":25,"column_start":28,"column_end":35},"alias_span":null,"name":"IterMut","value":"","parent":{"krate":0,"index":10358}},{"kind":"Use","ref_id":{"krate":0,"index":10641},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_unordered\\mod.rs","byte_start":8413476,"byte_end":8413486,"line_start":25,"line_end":25,"column_start":37,"column_end":47},"alias_span":null,"name":"IterPinMut","value":"","parent":{"krate":0,"index":10358}},{"kind":"Use","ref_id":{"krate":0,"index":10660},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_unordered\\mod.rs","byte_start":8413488,"byte_end":8413498,"line_start":25,"line_end":25,"column_start":49,"column_end":59},"alias_span":null,"name":"IterPinRef","value":"","parent":{"krate":0,"index":10358}},{"kind":"Use","ref_id":{"krate":0,"index":10525},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\mod.rs","byte_start":160766,"byte_end":160782,"line_start":93,"line_end":93,"column_start":38,"column_end":54},"alias_span":null,"name":"FuturesUnordered","value":"","parent":{"krate":0,"index":1044}},{"kind":"Use","ref_id":{"krate":0,"index":10628},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\mod.rs","byte_start":160896,"byte_end":160906,"line_start":98,"line_end":98,"column_start":32,"column_end":42},"alias_span":null,"name":"select_all","value":"","parent":{"krate":0,"index":1044}},{"kind":"Use","ref_id":{"krate":0,"index":10606},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\mod.rs","byte_start":160908,"byte_end":160917,"line_start":98,"line_end":98,"column_start":44,"column_end":53},"alias_span":null,"name":"SelectAll","value":"","parent":{"krate":0,"index":1044}},{"kind":"Use","ref_id":{"krate":0,"index":1989},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":11850,"byte_end":11859,"line_start":308,"line_end":308,"column_start":40,"column_end":49},"alias_span":null,"name":"StreamExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2576},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":11861,"byte_end":11873,"line_start":308,"line_end":308,"column_start":51,"column_end":63},"alias_span":null,"name":"TryStreamExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":19,"index":9},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":355765,"byte_end":355769,"line_start":18,"line_end":18,"column_start":23,"column_end":27},"alias_span":null,"name":"Sink","value":"","parent":{"krate":0,"index":2868}},{"kind":"Use","ref_id":{"krate":0,"index":10680},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":355804,"byte_end":355809,"line_start":21,"line_end":21,"column_start":22,"column_end":27},"alias_span":null,"name":"Close","value":"","parent":{"krate":0,"index":2868}},{"kind":"Use","ref_id":{"krate":0,"index":2909},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":355845,"byte_end":355850,"line_start":24,"line_end":24,"column_start":23,"column_end":28},"alias_span":null,"name":"drain","value":"","parent":{"krate":0,"index":2868}},{"kind":"Use","ref_id":{"krate":0,"index":10691},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":355852,"byte_end":355857,"line_start":24,"line_end":24,"column_start":30,"column_end":35},"alias_span":null,"name":"Drain","value":"","parent":{"krate":0,"index":2868}},{"kind":"Use","ref_id":{"krate":0,"index":10697},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":355895,"byte_end":355901,"line_start":27,"line_end":27,"column_start":23,"column_end":29},"alias_span":null,"name":"Fanout","value":"","parent":{"krate":0,"index":2868}},{"kind":"Use","ref_id":{"krate":0,"index":10754},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":355936,"byte_end":355941,"line_start":30,"line_end":30,"column_start":22,"column_end":27},"alias_span":null,"name":"Flush","value":"","parent":{"krate":0,"index":2868}},{"kind":"Use","ref_id":{"krate":0,"index":10765},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":355982,"byte_end":355993,"line_start":33,"line_end":33,"column_start":25,"column_end":36},"alias_span":null,"name":"SinkErrInto","value":"","parent":{"krate":0,"index":2868}},{"kind":"Use","ref_id":{"krate":0,"index":10838},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":356032,"byte_end":356042,"line_start":36,"line_end":36,"column_start":24,"column_end":34},"alias_span":null,"name":"SinkMapErr","value":"","parent":{"krate":0,"index":2868}},{"kind":"Use","ref_id":{"krate":0,"index":10903},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":356075,"byte_end":356079,"line_start":39,"line_end":39,"column_start":21,"column_end":25},"alias_span":null,"name":"Send","value":"","parent":{"krate":0,"index":2868}},{"kind":"Use","ref_id":{"krate":0,"index":3082},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":356120,"byte_end":356127,"line_start":42,"line_end":42,"column_start":25,"column_end":32},"alias_span":null,"name":"SendAll","value":"","parent":{"krate":0,"index":2868}},{"kind":"Use","ref_id":{"krate":0,"index":10914},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":356160,"byte_end":356164,"line_start":45,"line_end":45,"column_start":21,"column_end":25},"alias_span":null,"name":"With","value":"","parent":{"krate":0,"index":2868}},{"kind":"Use","ref_id":{"krate":0,"index":11010},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":356215,"byte_end":356226,"line_start":48,"line_end":48,"column_start":30,"column_end":41},"alias_span":null,"name":"WithFlatMap","value":"","parent":{"krate":0,"index":2868}},{"kind":"Use","ref_id":{"krate":0,"index":11109},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":356315,"byte_end":356321,"line_start":53,"line_end":53,"column_start":23,"column_end":29},"alias_span":null,"name":"Buffer","value":"","parent":{"krate":0,"index":2868}},{"kind":"Use","ref_id":{"krate":0,"index":3258},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":11977,"byte_end":11984,"line_start":313,"line_end":313,"column_start":37,"column_end":44},"alias_span":null,"name":"SinkExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":260},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\task\\mod.rs","byte_start":391180,"byte_end":391187,"line_start":5,"line_end":5,"column_start":27,"column_end":34},"alias_span":null,"name":"ArcWake","value":"","parent":{"krate":0,"index":3292}},{"kind":"Use","ref_id":{"krate":17,"index":274},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\task\\mod.rs","byte_start":391246,"byte_end":391251,"line_start":8,"line_end":8,"column_start":27,"column_end":32},"alias_span":null,"name":"waker","value":"","parent":{"krate":0,"index":3292}},{"kind":"Use","ref_id":{"krate":17,"index":305},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\task\\mod.rs","byte_start":391311,"byte_end":391320,"line_start":11,"line_end":11,"column_start":28,"column_end":37},"alias_span":null,"name":"waker_ref","value":"","parent":{"krate":0,"index":3292}},{"kind":"Use","ref_id":{"krate":17,"index":310},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\task\\mod.rs","byte_start":391322,"byte_end":391330,"line_start":11,"line_end":11,"column_start":39,"column_end":47},"alias_span":null,"name":"WakerRef","value":"","parent":{"krate":0,"index":3292}},{"kind":"Use","ref_id":{"krate":14,"index":142},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\task\\mod.rs","byte_start":391378,"byte_end":391389,"line_start":13,"line_end":13,"column_start":45,"column_end":56},"alias_span":null,"name":"AtomicWaker","value":"","parent":{"krate":0,"index":3292}},{"kind":"Use","ref_id":{"krate":0,"index":3307},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\task\\mod.rs","byte_start":391427,"byte_end":391435,"line_start":17,"line_end":17,"column_start":23,"column_end":31},"alias_span":null,"name":"SpawnExt","value":"","parent":{"krate":0,"index":3292}},{"kind":"Use","ref_id":{"krate":0,"index":3310},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\task\\mod.rs","byte_start":391437,"byte_end":391450,"line_start":17,"line_end":17,"column_start":33,"column_end":46},"alias_span":null,"name":"LocalSpawnExt","value":"","parent":{"krate":0,"index":3292}},{"kind":"Use","ref_id":{"krate":2,"index":8288},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\task\\mod.rs","byte_start":391483,"byte_end":391490,"line_start":19,"line_end":19,"column_start":30,"column_end":37},"alias_span":null,"name":"Context","value":"","parent":{"krate":0,"index":3292}},{"kind":"Use","ref_id":{"krate":2,"index":32053},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\task\\mod.rs","byte_start":391492,"byte_end":391496,"line_start":19,"line_end":19,"column_start":39,"column_end":43},"alias_span":null,"name":"Poll","value":"","parent":{"krate":0,"index":3292}},{"kind":"Use","ref_id":{"krate":2,"index":8298},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\task\\mod.rs","byte_start":391498,"byte_end":391503,"line_start":19,"line_end":19,"column_start":45,"column_end":50},"alias_span":null,"name":"Waker","value":"","parent":{"krate":0,"index":3292}},{"kind":"Use","ref_id":{"krate":2,"index":32093},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\task\\mod.rs","byte_start":391505,"byte_end":391513,"line_start":19,"line_end":19,"column_start":52,"column_end":60},"alias_span":null,"name":"RawWaker","value":"","parent":{"krate":0,"index":3292}},{"kind":"Use","ref_id":{"krate":2,"index":32102},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\task\\mod.rs","byte_start":391515,"byte_end":391529,"line_start":19,"line_end":19,"column_start":62,"column_end":76},"alias_span":null,"name":"RawWakerVTable","value":"","parent":{"krate":0,"index":3292}},{"kind":"Use","ref_id":{"krate":17,"index":10},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\task\\mod.rs","byte_start":391561,"byte_end":391566,"line_start":22,"line_end":22,"column_start":5,"column_end":10},"alias_span":null,"name":"Spawn","value":"","parent":{"krate":0,"index":3292}},{"kind":"Use","ref_id":{"krate":17,"index":13},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\task\\mod.rs","byte_start":391568,"byte_end":391578,"line_start":22,"line_end":22,"column_start":12,"column_end":22},"alias_span":null,"name":"LocalSpawn","value":"","parent":{"krate":0,"index":3292}},{"kind":"Use","ref_id":{"krate":17,"index":16},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\task\\mod.rs","byte_start":391580,"byte_end":391590,"line_start":22,"line_end":22,"column_start":24,"column_end":34},"alias_span":null,"name":"SpawnError","value":"","parent":{"krate":0,"index":3292}},{"kind":"Use","ref_id":{"krate":17,"index":111},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\task\\mod.rs","byte_start":391596,"byte_end":391605,"line_start":23,"line_end":23,"column_start":5,"column_end":14},"alias_span":null,"name":"FutureObj","value":"","parent":{"krate":0,"index":3292}},{"kind":"Use","ref_id":{"krate":17,"index":77},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\task\\mod.rs","byte_start":391607,"byte_end":391621,"line_start":23,"line_end":23,"column_start":16,"column_end":30},"alias_span":null,"name":"LocalFutureObj","value":"","parent":{"krate":0,"index":3292}},{"kind":"Use","ref_id":{"krate":17,"index":132},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\task\\mod.rs","byte_start":391623,"byte_end":391638,"line_start":23,"line_end":23,"column_start":32,"column_end":47},"alias_span":null,"name":"UnsafeFutureObj","value":"","parent":{"krate":0,"index":3292}},{"kind":"Use","ref_id":{"krate":17,"index":237},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\task\\mod.rs","byte_start":391666,"byte_end":391676,"line_start":26,"line_end":26,"column_start":23,"column_end":33},"alias_span":null,"name":"noop_waker","value":"","parent":{"krate":0,"index":3292}},{"kind":"Use","ref_id":{"krate":17,"index":238},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\task\\mod.rs","byte_start":391724,"byte_end":391738,"line_start":28,"line_end":28,"column_start":23,"column_end":37},"alias_span":null,"name":"noop_waker_ref","value":"","parent":{"krate":0,"index":3292}},{"kind":"Use","ref_id":{"krate":0,"index":11436},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mod.rs","byte_start":8462690,"byte_end":8462706,"line_start":9,"line_end":9,"column_start":23,"column_end":39},"alias_span":null,"name":"MappedMutexGuard","value":"","parent":{"krate":0,"index":11335}},{"kind":"Use","ref_id":{"krate":0,"index":11357},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mod.rs","byte_start":8462708,"byte_end":8462713,"line_start":9,"line_end":9,"column_start":41,"column_end":46},"alias_span":null,"name":"Mutex","value":"","parent":{"krate":0,"index":11335}},{"kind":"Use","ref_id":{"krate":0,"index":11394},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mod.rs","byte_start":8462715,"byte_end":8462730,"line_start":9,"line_end":9,"column_start":48,"column_end":63},"alias_span":null,"name":"MutexLockFuture","value":"","parent":{"krate":0,"index":11335}},{"kind":"Use","ref_id":{"krate":0,"index":11413},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mod.rs","byte_start":8462732,"byte_end":8462742,"line_start":9,"line_end":9,"column_start":65,"column_end":75},"alias_span":null,"name":"MutexGuard","value":"","parent":{"krate":0,"index":11335}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":0,"byte_end":12350,"line_start":1,"line_end":335,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":1041},{"krate":0,"index":1044},{"krate":0,"index":2865},{"krate":0,"index":2868},{"krate":0,"index":3291},{"krate":0,"index":3292},{"krate":0,"index":3331},{"krate":0,"index":3333},{"krate":0,"index":11335}],"decl_id":null,"docs":" Combinators and utilities for working with `Future`s, `Stream`s, `Sink`s,\n and the `AsyncRead` and `AsyncWrite` traits.\n","sig":null,"attributes":[{"value":"! Combinators and utilities for working with `Future`s, `Stream`s, `Sink`s,","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":0,"byte_end":77,"line_start":1,"line_end":1,"column_start":1,"column_end":78}},{"value":"! and the `AsyncRead` and `AsyncWrite` traits.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":78,"byte_end":126,"line_start":2,"line_end":2,"column_start":1,"column_end":49}},{"value":"warn(missing_docs, missing_debug_implementations, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":394,"byte_end":482,"line_start":9,"line_end":9,"column_start":1,"column_end":89}},{"value":"warn(clippy :: all)","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":483,"byte_end":504,"line_start":10,"line_end":10,"column_start":1,"column_end":22}},{"value":"allow(clippy :: mem_replace_with_default)","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":737,"byte_end":780,"line_start":15,"line_end":15,"column_start":1,"column_end":44}}]},{"kind":"Mod","id":{"krate":0,"index":7},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\async_await\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"async_await","qualname":"::async_await","value":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\async_await\\mod.rs","parent":null,"children":[{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":71},{"krate":0,"index":73}],"decl_id":null,"docs":" Await","sig":null,"attributes":[{"value":"cfg(feature = \"async-await\")","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":1705,"byte_end":1736,"line_start":41,"line_end":41,"column_start":1,"column_end":32}},{"value":"macro_use","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":1737,"byte_end":1749,"line_start":42,"line_end":42,"column_start":1,"column_end":13}},{"value":"! Await","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\async_await\\mod.rs","byte_start":12352,"byte_end":12361,"line_start":1,"line_end":1,"column_start":1,"column_end":10}},{"value":"!","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\async_await\\mod.rs","byte_start":12362,"byte_end":12365,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This module contains a number of functions and combinators for working","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\async_await\\mod.rs","byte_start":12366,"byte_end":12440,"line_start":3,"line_end":3,"column_start":1,"column_end":75}},{"value":"! with `async`/`await` code.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\async_await\\mod.rs","byte_start":12441,"byte_end":12471,"line_start":4,"line_end":4,"column_start":1,"column_end":31}}]},{"kind":"Function","id":{"krate":0,"index":20},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\async_await\\poll.rs","byte_start":14040,"byte_end":14044,"line_start":20,"line_end":20,"column_start":8,"column_end":12},"name":"poll","qualname":"::async_await::poll::poll","value":"fn <F> (future: F) -> PollOnce<F>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":22},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\async_await\\poll.rs","byte_start":14185,"byte_end":14193,"line_start":26,"line_end":26,"column_start":12,"column_end":20},"name":"PollOnce","qualname":"::async_await::poll::PollOnce","value":"PollOnce {  }","parent":null,"children":[{"krate":0,"index":24}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\async_await\\poll.rs","byte_start":14119,"byte_end":14158,"line_start":24,"line_end":24,"column_start":1,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":37},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\async_await\\pending.rs","byte_start":15242,"byte_end":15254,"line_start":23,"line_end":23,"column_start":8,"column_end":20},"name":"pending_once","qualname":"::async_await::pending::pending_once","value":"fn () -> PendingOnce","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":38},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\async_await\\pending.rs","byte_start":15379,"byte_end":15390,"line_start":29,"line_end":29,"column_start":12,"column_end":23},"name":"PendingOnce","qualname":"::async_await::pending::PendingOnce","value":"PendingOnce {  }","parent":null,"children":[{"krate":0,"index":39}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\async_await\\pending.rs","byte_start":15313,"byte_end":15352,"line_start":27,"line_end":27,"column_start":1,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":61},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\async_await\\random.rs","byte_start":32817,"byte_end":32824,"line_start":13,"line_end":13,"column_start":8,"column_end":15},"name":"shuffle","qualname":"::async_await::random::shuffle","value":"fn <T> (slice: &mut [T]) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":69},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\async_await\\mod.rs","byte_start":13259,"byte_end":13271,"line_start":43,"line_end":43,"column_start":8,"column_end":20},"name":"assert_unpin","qualname":"::async_await::assert_unpin","value":"fn <T> (_: &T) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\async_await\\mod.rs","byte_start":13234,"byte_end":13251,"line_start":42,"line_end":42,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":71},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\async_await\\mod.rs","byte_start":13333,"byte_end":13352,"line_start":47,"line_end":47,"column_start":8,"column_end":27},"name":"assert_fused_future","qualname":"::async_await::assert_fused_future","value":"fn <T> (_: &T) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\async_await\\mod.rs","byte_start":13308,"byte_end":13325,"line_start":46,"line_end":46,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":73},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\async_await\\mod.rs","byte_start":13429,"byte_end":13448,"line_start":51,"line_end":51,"column_start":8,"column_end":27},"name":"assert_fused_stream","qualname":"::async_await::assert_fused_stream","value":"fn <T> (_: &T) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\async_await\\mod.rs","byte_start":13404,"byte_end":13421,"line_start":50,"line_end":50,"column_start":1,"column_end":18}}]},{"kind":"Mod","id":{"krate":0,"index":77},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":2010,"byte_end":2020,"line_start":56,"line_end":56,"column_start":9,"column_end":19},"name":"__reexport","qualname":"::__reexport","value":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":78}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"async-await\")","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":1955,"byte_end":1986,"line_start":54,"line_end":54,"column_start":1,"column_end":32}}]},{"kind":"Mod","id":{"krate":0,"index":85},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"future","qualname":"::future","value":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\mod.rs","parent":null,"children":[{"krate":0,"index":86},{"krate":0,"index":89},{"krate":0,"index":93},{"krate":0,"index":97},{"krate":0,"index":358},{"krate":0,"index":369},{"krate":0,"index":370},{"krate":0,"index":371},{"krate":0,"index":372},{"krate":0,"index":515},{"krate":0,"index":530},{"krate":0,"index":531},{"krate":0,"index":553},{"krate":0,"index":556},{"krate":0,"index":579},{"krate":0,"index":582},{"krate":0,"index":605},{"krate":0,"index":608},{"krate":0,"index":632},{"krate":0,"index":635},{"krate":0,"index":654},{"krate":0,"index":655},{"krate":0,"index":678},{"krate":0,"index":681},{"krate":0,"index":709},{"krate":0,"index":714},{"krate":0,"index":747},{"krate":0,"index":756},{"krate":0,"index":789},{"krate":0,"index":792},{"krate":0,"index":818},{"krate":0,"index":821},{"krate":0,"index":844},{"krate":0,"index":847},{"krate":0,"index":879},{"krate":0,"index":888},{"krate":0,"index":932},{"krate":0,"index":935},{"krate":0,"index":957},{"krate":0,"index":960},{"krate":0,"index":985},{"krate":0,"index":988},{"krate":0,"index":1037},{"krate":0,"index":6602},{"krate":0,"index":6631},{"krate":0,"index":1038}],"decl_id":null,"docs":" Futures","sig":null,"attributes":[{"value":"! Futures","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\mod.rs","byte_start":33886,"byte_end":33897,"line_start":1,"line_end":1,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\mod.rs","byte_start":33898,"byte_end":33901,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This module contains a number of functions for working with `Future`s,","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\mod.rs","byte_start":33902,"byte_end":33976,"line_start":3,"line_end":3,"column_start":1,"column_end":75}},{"value":"! including the [`FutureExt`] trait and the [`TryFutureExt`] trait which add","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\mod.rs","byte_start":33977,"byte_end":34055,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"! methods to `Future` types.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\mod.rs","byte_start":34056,"byte_end":34086,"line_start":5,"line_end":5,"column_start":1,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3580},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\flatten.rs","byte_start":56537,"byte_end":56542,"line_start":12,"line_end":12,"column_start":5,"column_end":10},"name":"First","qualname":"::future::future::flatten::Flatten::First","value":"Flatten::First(Fut1)","parent":{"krate":0,"index":3577},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3582},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\flatten.rs","byte_start":56561,"byte_end":56567,"line_start":13,"line_end":13,"column_start":5,"column_end":11},"name":"Second","qualname":"::future::future::flatten::Flatten::Second","value":"Flatten::Second(Fut2)","parent":{"krate":0,"index":3577},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3584},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\flatten.rs","byte_start":56586,"byte_end":56591,"line_start":14,"line_end":14,"column_start":5,"column_end":10},"name":"Empty","qualname":"::future::future::flatten::Flatten::Empty","value":"Flatten::Empty","parent":{"krate":0,"index":3577},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3577},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\flatten.rs","byte_start":56511,"byte_end":56518,"line_start":11,"line_end":11,"column_start":10,"column_end":17},"name":"Flatten","qualname":"::future::future::flatten::Flatten","value":"Flatten::{First, Second, Empty}","parent":null,"children":[{"krate":0,"index":3580},{"krate":0,"index":3582},{"krate":0,"index":3584}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"pin(__private())","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\flatten.rs","byte_start":56470,"byte_end":56484,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":3620},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\flatten.rs","byte_start":56511,"byte_end":56518,"line_start":11,"line_end":11,"column_start":10,"column_end":17},"name":"__Flatten","qualname":"::future::future::flatten::_::__Flatten","value":"__Flatten {  }","parent":null,"children":[{"krate":0,"index":3624},{"krate":0,"index":3625},{"krate":0,"index":3626}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3654},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\fuse.rs","byte_start":61102,"byte_end":61106,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Fuse","qualname":"::future::future::fuse::Fuse","value":"","parent":null,"children":[],"decl_id":null,"docs":" Future for the [`fuse`](super::FutureExt::fuse) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\fuse.rs","byte_start":61023,"byte_end":61090,"line_start":9,"line_end":9,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\fuse.rs","byte_start":60991,"byte_end":61005,"line_start":7,"line_end":7,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":3675},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\fuse.rs","byte_start":61102,"byte_end":61106,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"__Fuse","qualname":"::future::future::fuse::_::__Fuse","value":"__Fuse {  }","parent":null,"children":[{"krate":0,"index":3678},{"krate":0,"index":3679}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":169},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\fuse.rs","byte_start":62888,"byte_end":62898,"line_start":64,"line_end":64,"column_start":12,"column_end":22},"name":"terminated","qualname":"<Fuse<Fut>>::terminated","value":"fn () -> Fuse<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Fuse`-wrapped future which is already terminated.","sig":null,"attributes":[{"value":"/ Creates a new `Fuse`-wrapped future which is already terminated.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\fuse.rs","byte_start":61266,"byte_end":61334,"line_start":19,"line_end":19,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\fuse.rs","byte_start":61339,"byte_end":61342,"line_start":20,"line_end":20,"column_start":5,"column_end":8}},{"value":"/ This can be useful in combination with looping and the `select!`","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\fuse.rs","byte_start":61347,"byte_end":61415,"line_start":21,"line_end":21,"column_start":5,"column_end":73}},{"value":"/ macro, which bypasses terminated futures.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\fuse.rs","byte_start":61420,"byte_end":61465,"line_start":22,"line_end":22,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\fuse.rs","byte_start":61470,"byte_end":61473,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\fuse.rs","byte_start":61478,"byte_end":61492,"line_start":24,"line_end":24,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\fuse.rs","byte_start":61497,"byte_end":61500,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\fuse.rs","byte_start":61505,"byte_end":61512,"line_start":26,"line_end":26,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\fuse.rs","byte_start":61517,"byte_end":61558,"line_start":27,"line_end":27,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\fuse.rs","byte_start":61563,"byte_end":61594,"line_start":28,"line_end":28,"column_start":5,"column_end":36}},{"value":"/ use futures::future::{Fuse, FusedFuture, FutureExt};","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\fuse.rs","byte_start":61599,"byte_end":61655,"line_start":29,"line_end":29,"column_start":5,"column_end":61}},{"value":"/ use futures::select;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\fuse.rs","byte_start":61660,"byte_end":61684,"line_start":30,"line_end":30,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\fuse.rs","byte_start":61689,"byte_end":61724,"line_start":31,"line_end":31,"column_start":5,"column_end":40}},{"value":"/ use futures::pin_mut;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\fuse.rs","byte_start":61729,"byte_end":61754,"line_start":32,"line_end":32,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\fuse.rs","byte_start":61759,"byte_end":61762,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ let (sender, mut stream) = mpsc::unbounded();","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\fuse.rs","byte_start":61767,"byte_end":61816,"line_start":34,"line_end":34,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\fuse.rs","byte_start":61821,"byte_end":61824,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ // Send a few messages into the stream","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\fuse.rs","byte_start":61829,"byte_end":61871,"line_start":36,"line_end":36,"column_start":5,"column_end":47}},{"value":"/ sender.unbounded_send(()).unwrap();","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\fuse.rs","byte_start":61876,"byte_end":61915,"line_start":37,"line_end":37,"column_start":5,"column_end":44}},{"value":"/ sender.unbounded_send(()).unwrap();","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\fuse.rs","byte_start":61920,"byte_end":61959,"line_start":38,"line_end":38,"column_start":5,"column_end":44}},{"value":"/ drop(sender);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\fuse.rs","byte_start":61964,"byte_end":61981,"line_start":39,"line_end":39,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\fuse.rs","byte_start":61986,"byte_end":61989,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ // Use `Fuse::termianted()` to create an already-terminated future","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\fuse.rs","byte_start":61994,"byte_end":62064,"line_start":41,"line_end":41,"column_start":5,"column_end":75}},{"value":"/ // which may be instantiated later.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\fuse.rs","byte_start":62069,"byte_end":62108,"line_start":42,"line_end":42,"column_start":5,"column_end":44}},{"value":"/ let foo_printer = Fuse::terminated();","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\fuse.rs","byte_start":62113,"byte_end":62154,"line_start":43,"line_end":43,"column_start":5,"column_end":46}},{"value":"/ pin_mut!(foo_printer);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\fuse.rs","byte_start":62159,"byte_end":62185,"line_start":44,"line_end":44,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\fuse.rs","byte_start":62190,"byte_end":62193,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ loop {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\fuse.rs","byte_start":62198,"byte_end":62208,"line_start":46,"line_end":46,"column_start":5,"column_end":15}},{"value":"/     select! {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\fuse.rs","byte_start":62213,"byte_end":62230,"line_start":47,"line_end":47,"column_start":5,"column_end":22}},{"value":"/         _ = foo_printer => {},","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\fuse.rs","byte_start":62235,"byte_end":62269,"line_start":48,"line_end":48,"column_start":5,"column_end":39}},{"value":"/         () = stream.select_next_some() => {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\fuse.rs","byte_start":62274,"byte_end":62321,"line_start":49,"line_end":49,"column_start":5,"column_end":52}},{"value":"/             if !foo_printer.is_terminated() {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\fuse.rs","byte_start":62326,"byte_end":62375,"line_start":50,"line_end":50,"column_start":5,"column_end":54}},{"value":"/                 println!(\"Foo is already being printed!\");","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\fuse.rs","byte_start":62380,"byte_end":62442,"line_start":51,"line_end":51,"column_start":5,"column_end":67}},{"value":"/             } else {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\fuse.rs","byte_start":62447,"byte_end":62471,"line_start":52,"line_end":52,"column_start":5,"column_end":29}},{"value":"/                 foo_printer.set(async {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\fuse.rs","byte_start":62476,"byte_end":62519,"line_start":53,"line_end":53,"column_start":5,"column_end":48}},{"value":"/                     // do some other async operations","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\fuse.rs","byte_start":62524,"byte_end":62581,"line_start":54,"line_end":54,"column_start":5,"column_end":62}},{"value":"/                     println!(\"Printing foo from `foo_printer` future\");","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\fuse.rs","byte_start":62586,"byte_end":62661,"line_start":55,"line_end":55,"column_start":5,"column_end":80}},{"value":"/                 }.fuse());","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\fuse.rs","byte_start":62666,"byte_end":62696,"line_start":56,"line_end":56,"column_start":5,"column_end":35}},{"value":"/             }","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\fuse.rs","byte_start":62701,"byte_end":62718,"line_start":57,"line_end":57,"column_start":5,"column_end":22}},{"value":"/         },","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\fuse.rs","byte_start":62723,"byte_end":62737,"line_start":58,"line_end":58,"column_start":5,"column_end":19}},{"value":"/         complete => break, // `foo_printer` is terminated and the stream is done","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\fuse.rs","byte_start":62742,"byte_end":62826,"line_start":59,"line_end":59,"column_start":5,"column_end":89}},{"value":"/     }","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\fuse.rs","byte_start":62831,"byte_end":62840,"line_start":60,"line_end":60,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\fuse.rs","byte_start":62845,"byte_end":62850,"line_start":61,"line_end":61,"column_start":5,"column_end":10}},{"value":"/ # });","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\fuse.rs","byte_start":62855,"byte_end":62864,"line_start":62,"line_end":62,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\fuse.rs","byte_start":62869,"byte_end":62876,"line_start":63,"line_end":63,"column_start":5,"column_end":12}}]},{"kind":"StructVariant","id":{"krate":0,"index":3701},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\map.rs","byte_start":63851,"byte_end":63861,"line_start":14,"line_end":14,"column_start":5,"column_end":15},"name":"Incomplete","qualname":"::future::future::map::Map::Incomplete","value":"Map::Incomplete { future, f }","parent":{"krate":0,"index":3698},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3703},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\map.rs","byte_start":63925,"byte_end":63933,"line_start":19,"line_end":19,"column_start":5,"column_end":13},"name":"Complete","qualname":"::future::future::map::Map::Complete","value":"Map::Complete","parent":{"krate":0,"index":3698},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3698},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\map.rs","byte_start":63833,"byte_end":63836,"line_start":13,"line_end":13,"column_start":10,"column_end":13},"name":"Map","qualname":"::future::future::map::Map","value":"Map::{Incomplete, Complete}","parent":null,"children":[{"krate":0,"index":3701},{"krate":0,"index":3703}],"decl_id":null,"docs":" Internal Map future\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\map.rs","byte_start":63756,"byte_end":63823,"line_start":12,"line_end":12,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\map.rs","byte_start":63724,"byte_end":63738,"line_start":10,"line_end":10,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":3732},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\map.rs","byte_start":63833,"byte_end":63836,"line_start":13,"line_end":13,"column_start":10,"column_end":13},"name":"__Map","qualname":"::future::future::map::_::__Map","value":"__Map {  }","parent":null,"children":[{"krate":0,"index":3736},{"krate":0,"index":3737}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3762},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"Flatten","qualname":"::future::future::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":3764}],"decl_id":null,"docs":" Future for the [`flatten`](super::FutureExt::flatten) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":3780},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"__Flatten","qualname":"::future::future::_::__Flatten","value":"__Flatten {  }","parent":null,"children":[{"krate":0,"index":3783},{"krate":0,"index":3784}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3815},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"FlattenStream","qualname":"::future::future::FlattenStream","value":"FlattenStream {  }","parent":null,"children":[{"krate":0,"index":3817}],"decl_id":null,"docs":" Stream for the [`flatten_stream`](FutureExt::flatten_stream) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":3833},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"__FlattenStream","qualname":"::future::future::_::__FlattenStream","value":"__FlattenStream {  }","parent":null,"children":[{"krate":0,"index":3836},{"krate":0,"index":3837}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3878},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"Map","qualname":"::future::future::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":3881}],"decl_id":null,"docs":" Future for the [`flatten`](super::FutureExt::flatten) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":3900},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"__Map","qualname":"::future::future::_::__Map","value":"__Map {  }","parent":null,"children":[{"krate":0,"index":3904},{"krate":0,"index":3905}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3945},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"IntoStream","qualname":"::future::future::IntoStream","value":"IntoStream {  }","parent":null,"children":[{"krate":0,"index":3947}],"decl_id":null,"docs":" Stream for the [`into_stream`](FutureExt::into_stream) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":3963},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"__IntoStream","qualname":"::future::future::_::__IntoStream","value":"__IntoStream {  }","parent":null,"children":[{"krate":0,"index":3966},{"krate":0,"index":3967}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4000},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"MapInto","qualname":"::future::future::MapInto","value":"MapInto {  }","parent":null,"children":[{"krate":0,"index":4003}],"decl_id":null,"docs":" Future for the [`map_into`](FutureExt::map_into) combinator.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4022},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"__MapInto","qualname":"::future::future::_::__MapInto","value":"__MapInto {  }","parent":null,"children":[{"krate":0,"index":4026},{"krate":0,"index":4027}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4069},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"Then","qualname":"::future::future::Then","value":"Then {  }","parent":null,"children":[{"krate":0,"index":4073}],"decl_id":null,"docs":" Future for the [`then`](FutureExt::then) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4095},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"__Then","qualname":"::future::future::_::__Then","value":"__Then {  }","parent":null,"children":[{"krate":0,"index":4100},{"krate":0,"index":4101}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4151},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"Inspect","qualname":"::future::future::Inspect","value":"Inspect {  }","parent":null,"children":[{"krate":0,"index":4154}],"decl_id":null,"docs":" Future for the [`inspect`](FutureExt::inspect) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4173},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"__Inspect","qualname":"::future::future::_::__Inspect","value":"__Inspect {  }","parent":null,"children":[{"krate":0,"index":4177},{"krate":0,"index":4178}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4218},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"NeverError","qualname":"::future::future::NeverError","value":"NeverError {  }","parent":null,"children":[{"krate":0,"index":4220}],"decl_id":null,"docs":" Future for the [`never_error`](super::FutureExt::never_error) combinator.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4236},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"__NeverError","qualname":"::future::future::_::__NeverError","value":"__NeverError {  }","parent":null,"children":[{"krate":0,"index":4239},{"krate":0,"index":4240}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4271},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"UnitError","qualname":"::future::future::UnitError","value":"UnitError {  }","parent":null,"children":[{"krate":0,"index":4273}],"decl_id":null,"docs":" Future for the [`unit_error`](super::FutureExt::unit_error) combinator.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4289},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"__UnitError","qualname":"::future::future::_::__UnitError","value":"__UnitError {  }","parent":null,"children":[{"krate":0,"index":4292},{"krate":0,"index":4293}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4322},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\catch_unwind.rs","byte_start":66549,"byte_end":66560,"line_start":13,"line_end":13,"column_start":12,"column_end":23},"name":"CatchUnwind","qualname":"::future::future::catch_unwind::CatchUnwind","value":"","parent":null,"children":[],"decl_id":null,"docs":" Future for the [`catch_unwind`](super::FutureExt::catch_unwind) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\catch_unwind.rs","byte_start":66470,"byte_end":66537,"line_start":12,"line_end":12,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\catch_unwind.rs","byte_start":66438,"byte_end":66452,"line_start":10,"line_end":10,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":4343},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\catch_unwind.rs","byte_start":66549,"byte_end":66560,"line_start":13,"line_end":13,"column_start":12,"column_end":23},"name":"__CatchUnwind","qualname":"::future::future::catch_unwind::_::__CatchUnwind","value":"__CatchUnwind {  }","parent":null,"children":[{"krate":0,"index":4346},{"krate":0,"index":4347}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":257},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\shared.rs","byte_start":67530,"byte_end":67536,"line_start":14,"line_end":14,"column_start":12,"column_end":18},"name":"Shared","qualname":"::future::future::shared::Shared","value":"Shared {  }","parent":null,"children":[{"krate":0,"index":259},{"krate":0,"index":260}],"decl_id":null,"docs":" Future for the [`shared`](super::FutureExt::shared) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`shared`](super::FutureExt::shared) method.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\shared.rs","byte_start":67387,"byte_end":67450,"line_start":12,"line_end":12,"column_start":1,"column_end":64}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\shared.rs","byte_start":67451,"byte_end":67518,"line_start":13,"line_end":13,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":298},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\shared.rs","byte_start":69648,"byte_end":69652,"line_start":100,"line_end":100,"column_start":12,"column_end":16},"name":"peek","qualname":"<Shared<Fut>>::peek","value":"fn (&self) -> Option<&Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Returns [`Some`] containing a reference to this [`Shared`]'s output if\n it has already been computed by a clone or [`None`] if it hasn't been\n computed yet or this [`Shared`] already returned its output from\n [`poll`](Future::poll).\n","sig":null,"attributes":[{"value":"/ Returns [`Some`] containing a reference to this [`Shared`]'s output if","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\shared.rs","byte_start":69379,"byte_end":69453,"line_start":96,"line_end":96,"column_start":5,"column_end":79}},{"value":"/ it has already been computed by a clone or [`None`] if it hasn't been","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\shared.rs","byte_start":69458,"byte_end":69531,"line_start":97,"line_end":97,"column_start":5,"column_end":78}},{"value":"/ computed yet or this [`Shared`] already returned its output from","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\shared.rs","byte_start":69536,"byte_end":69604,"line_start":98,"line_end":98,"column_start":5,"column_end":73}},{"value":"/ [`poll`](Future::poll).","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\shared.rs","byte_start":69609,"byte_end":69636,"line_start":99,"line_end":99,"column_start":5,"column_end":32}}]},{"kind":"Trait","id":{"krate":0,"index":329},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":40311,"byte_end":40320,"line_start":119,"line_end":119,"column_start":11,"column_end":20},"name":"FutureExt","qualname":"::future::future::FutureExt","value":"FutureExt: Future","parent":null,"children":[{"krate":0,"index":330},{"krate":0,"index":333},{"krate":0,"index":335},{"krate":0,"index":338},{"krate":0,"index":340},{"krate":0,"index":342},{"krate":0,"index":343},{"krate":0,"index":344},{"krate":0,"index":345},{"krate":0,"index":346},{"krate":0,"index":348},{"krate":0,"index":349},{"krate":0,"index":350},{"krate":0,"index":352},{"krate":0,"index":354},{"krate":0,"index":355},{"krate":0,"index":356},{"krate":0,"index":357}],"decl_id":null,"docs":" An extension trait for `Future`s that provides a variety of convenient\n adapters.\n","sig":null,"attributes":[{"value":"/ An extension trait for `Future`s that provides a variety of convenient","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":40212,"byte_end":40286,"line_start":117,"line_end":117,"column_start":1,"column_end":75}},{"value":"/ adapters.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":40287,"byte_end":40300,"line_start":118,"line_end":118,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":330},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":41152,"byte_end":41155,"line_start":142,"line_end":142,"column_start":8,"column_end":11},"name":"map","qualname":"::future::future::FutureExt::map","value":"fn <U, F> (self, f: F) -> Map<Self, F>","parent":{"krate":0,"index":329},"children":[],"decl_id":null,"docs":" Map this future's output to a different type, returning a new future of\n the resulting type.","sig":null,"attributes":[{"value":"/ Map this future's output to a different type, returning a new future of","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":40335,"byte_end":40410,"line_start":120,"line_end":120,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":40415,"byte_end":40438,"line_start":121,"line_end":121,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":40443,"byte_end":40446,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ This function is similar to the `Option::map` or `Iterator::map` where","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":40451,"byte_end":40525,"line_start":123,"line_end":123,"column_start":5,"column_end":79}},{"value":"/ it will change the type of the underlying future. This is useful to","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":40530,"byte_end":40601,"line_start":124,"line_end":124,"column_start":5,"column_end":76}},{"value":"/ chain along a computation once a future has been resolved.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":40606,"byte_end":40668,"line_start":125,"line_end":125,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":40673,"byte_end":40676,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":40681,"byte_end":40752,"line_start":127,"line_end":127,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it, similar to the existing `map` methods in the","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":40757,"byte_end":40828,"line_start":128,"line_end":128,"column_start":5,"column_end":76}},{"value":"/ standard library.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":40833,"byte_end":40854,"line_start":129,"line_end":129,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":40859,"byte_end":40862,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":40867,"byte_end":40881,"line_start":131,"line_end":131,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":40886,"byte_end":40889,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":40894,"byte_end":40901,"line_start":133,"line_end":133,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":40906,"byte_end":40947,"line_start":134,"line_end":134,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":40952,"byte_end":40987,"line_start":135,"line_end":135,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":40992,"byte_end":40995,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ let future = async { 1 };","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":41000,"byte_end":41029,"line_start":137,"line_end":137,"column_start":5,"column_end":34}},{"value":"/ let new_future = future.map(|x| x + 3);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":41034,"byte_end":41077,"line_start":138,"line_end":138,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(new_future.await, 4);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":41082,"byte_end":41118,"line_start":139,"line_end":139,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":41123,"byte_end":41132,"line_start":140,"line_end":140,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":41137,"byte_end":41144,"line_start":141,"line_end":141,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":333},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":41552,"byte_end":41560,"line_start":155,"line_end":155,"column_start":8,"column_end":16},"name":"map_into","qualname":"::future::future::FutureExt::map_into","value":"fn <U> (self) -> MapInto<Self, U>","parent":{"krate":0,"index":329},"children":[],"decl_id":null,"docs":" Map this future's output to a different type, returning a new future of\n the resulting type.","sig":null,"attributes":[{"value":"/ Map this future's output to a different type, returning a new future of","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":41325,"byte_end":41400,"line_start":150,"line_end":150,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":41405,"byte_end":41428,"line_start":151,"line_end":151,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":41433,"byte_end":41436,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ This function is equivalent to calling `map(Into::into)` but allows naming","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":41441,"byte_end":41519,"line_start":153,"line_end":153,"column_start":5,"column_end":83}},{"value":"/ the return type.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":41524,"byte_end":41544,"line_start":154,"line_end":154,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":335},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":42572,"byte_end":42576,"line_start":187,"line_end":187,"column_start":8,"column_end":12},"name":"then","qualname":"::future::future::FutureExt::then","value":"fn <Fut, F> (self, f: F) -> Then<Self, Fut, F>","parent":{"krate":0,"index":329},"children":[],"decl_id":null,"docs":" Chain on a computation for when a future finished, passing the result of\n the future to the provided closure `f`.","sig":null,"attributes":[{"value":"/ Chain on a computation for when a future finished, passing the result of","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":41719,"byte_end":41795,"line_start":163,"line_end":163,"column_start":5,"column_end":81}},{"value":"/ the future to the provided closure `f`.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":41800,"byte_end":41843,"line_start":164,"line_end":164,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":41848,"byte_end":41851,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ The returned value of the closure must implement the `Future` trait","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":41856,"byte_end":41927,"line_start":166,"line_end":166,"column_start":5,"column_end":76}},{"value":"/ and can represent some more work to be done before the composed future","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":41932,"byte_end":42006,"line_start":167,"line_end":167,"column_start":5,"column_end":79}},{"value":"/ is finished.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":42011,"byte_end":42027,"line_start":168,"line_end":168,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":42032,"byte_end":42035,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ The closure `f` is only run *after* successful completion of the `self`","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":42040,"byte_end":42115,"line_start":170,"line_end":170,"column_start":5,"column_end":80}},{"value":"/ future.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":42120,"byte_end":42131,"line_start":171,"line_end":171,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":42136,"byte_end":42139,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":42144,"byte_end":42215,"line_start":173,"line_end":173,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":42220,"byte_end":42246,"line_start":174,"line_end":174,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":42251,"byte_end":42254,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":42259,"byte_end":42273,"line_start":176,"line_end":176,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":42278,"byte_end":42281,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":42286,"byte_end":42293,"line_start":178,"line_end":178,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":42298,"byte_end":42339,"line_start":179,"line_end":179,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":42344,"byte_end":42379,"line_start":180,"line_end":180,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":42384,"byte_end":42387,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ let future_of_1 = async { 1 };","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":42392,"byte_end":42426,"line_start":182,"line_end":182,"column_start":5,"column_end":39}},{"value":"/ let future_of_4 = future_of_1.then(|x| async move { x + 3 });","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":42431,"byte_end":42496,"line_start":183,"line_end":183,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(future_of_4.await, 4);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":42501,"byte_end":42538,"line_start":184,"line_end":184,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":42543,"byte_end":42552,"line_start":185,"line_end":185,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":42557,"byte_end":42564,"line_start":186,"line_end":186,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":338},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":43446,"byte_end":43457,"line_start":218,"line_end":218,"column_start":8,"column_end":19},"name":"left_future","qualname":"::future::future::FutureExt::left_future","value":"fn <B> (self) -> Either<Self, B>","parent":{"krate":0,"index":329},"children":[],"decl_id":null,"docs":" Wrap this future in an `Either` future, making it the left-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this future in an `Either` future, making it the left-hand variant","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":42788,"byte_end":42863,"line_start":196,"line_end":196,"column_start":5,"column_end":80}},{"value":"/ of that `Either`.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":42868,"byte_end":42889,"line_start":197,"line_end":197,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":42894,"byte_end":42897,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `right_future` method to write `if`","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":42902,"byte_end":42982,"line_start":199,"line_end":199,"column_start":5,"column_end":85}},{"value":"/ statements that evaluate to different futures in different branches.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":42987,"byte_end":43059,"line_start":200,"line_end":200,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":43064,"byte_end":43067,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":43072,"byte_end":43086,"line_start":202,"line_end":202,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":43091,"byte_end":43094,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":43099,"byte_end":43106,"line_start":204,"line_end":204,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":43111,"byte_end":43152,"line_start":205,"line_end":205,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":43157,"byte_end":43192,"line_start":206,"line_end":206,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":43197,"byte_end":43200,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ let x = 6;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":43205,"byte_end":43219,"line_start":208,"line_end":208,"column_start":5,"column_end":19}},{"value":"/ let future = if x < 10 {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":43224,"byte_end":43252,"line_start":209,"line_end":209,"column_start":5,"column_end":33}},{"value":"/     async { true }.left_future()","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":43257,"byte_end":43293,"line_start":210,"line_end":210,"column_start":5,"column_end":41}},{"value":"/ } else {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":43298,"byte_end":43310,"line_start":211,"line_end":211,"column_start":5,"column_end":17}},{"value":"/     async { false }.right_future()","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":43315,"byte_end":43353,"line_start":212,"line_end":212,"column_start":5,"column_end":43}},{"value":"/ };","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":43358,"byte_end":43364,"line_start":213,"line_end":213,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":43369,"byte_end":43372,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future.await, true);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":43377,"byte_end":43412,"line_start":215,"line_end":215,"column_start":5,"column_end":40}},{"value":"/ # });","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":43417,"byte_end":43426,"line_start":216,"line_end":216,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":43431,"byte_end":43438,"line_start":217,"line_end":217,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":340},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":44262,"byte_end":44274,"line_start":248,"line_end":248,"column_start":8,"column_end":20},"name":"right_future","qualname":"::future::future::FutureExt::right_future","value":"fn <A> (self) -> Either<A, Self>","parent":{"krate":0,"index":329},"children":[],"decl_id":null,"docs":" Wrap this future in an `Either` future, making it the right-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this future in an `Either` future, making it the right-hand variant","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":43603,"byte_end":43679,"line_start":226,"line_end":226,"column_start":5,"column_end":81}},{"value":"/ of that `Either`.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":43684,"byte_end":43705,"line_start":227,"line_end":227,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":43710,"byte_end":43713,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `left_future` method to write `if`","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":43718,"byte_end":43797,"line_start":229,"line_end":229,"column_start":5,"column_end":84}},{"value":"/ statements that evaluate to different futures in different branches.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":43802,"byte_end":43874,"line_start":230,"line_end":230,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":43879,"byte_end":43882,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":43887,"byte_end":43901,"line_start":232,"line_end":232,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":43906,"byte_end":43909,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":43914,"byte_end":43921,"line_start":234,"line_end":234,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":43926,"byte_end":43967,"line_start":235,"line_end":235,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":43972,"byte_end":44007,"line_start":236,"line_end":236,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":44012,"byte_end":44015,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ let x = 6;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":44020,"byte_end":44034,"line_start":238,"line_end":238,"column_start":5,"column_end":19}},{"value":"/ let future = if x > 10 {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":44039,"byte_end":44067,"line_start":239,"line_end":239,"column_start":5,"column_end":33}},{"value":"/     async { true }.left_future()","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":44072,"byte_end":44108,"line_start":240,"line_end":240,"column_start":5,"column_end":41}},{"value":"/ } else {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":44113,"byte_end":44125,"line_start":241,"line_end":241,"column_start":5,"column_end":17}},{"value":"/     async { false }.right_future()","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":44130,"byte_end":44168,"line_start":242,"line_end":242,"column_start":5,"column_end":43}},{"value":"/ };","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":44173,"byte_end":44179,"line_start":243,"line_end":243,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":44184,"byte_end":44187,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future.await, false);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":44192,"byte_end":44228,"line_start":245,"line_end":245,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":44233,"byte_end":44242,"line_start":246,"line_end":246,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":44247,"byte_end":44254,"line_start":247,"line_end":247,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":342},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":45019,"byte_end":45030,"line_start":274,"line_end":274,"column_start":8,"column_end":19},"name":"into_stream","qualname":"::future::future::FutureExt::into_stream","value":"fn (self) -> IntoStream<Self>","parent":{"krate":0,"index":329},"children":[],"decl_id":null,"docs":" Convert this future into a single element stream.","sig":null,"attributes":[{"value":"/ Convert this future into a single element stream.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":44421,"byte_end":44474,"line_start":256,"line_end":256,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":44479,"byte_end":44482,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ The returned stream contains single success if this future resolves to","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":44487,"byte_end":44561,"line_start":258,"line_end":258,"column_start":5,"column_end":79}},{"value":"/ success or single error if this future resolves into error.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":44566,"byte_end":44629,"line_start":259,"line_end":259,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":44634,"byte_end":44637,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":44642,"byte_end":44656,"line_start":261,"line_end":261,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":44661,"byte_end":44664,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":44669,"byte_end":44676,"line_start":263,"line_end":263,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":44681,"byte_end":44722,"line_start":264,"line_end":264,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":44727,"byte_end":44762,"line_start":265,"line_end":265,"column_start":5,"column_end":40}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":44767,"byte_end":44802,"line_start":266,"line_end":266,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":44807,"byte_end":44810,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ let future = async { 17 };","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":44815,"byte_end":44845,"line_start":268,"line_end":268,"column_start":5,"column_end":35}},{"value":"/ let stream = future.into_stream();","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":44850,"byte_end":44888,"line_start":269,"line_end":269,"column_start":5,"column_end":43}},{"value":"/ let collected: Vec<_> = stream.collect().await;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":44893,"byte_end":44944,"line_start":270,"line_end":270,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(collected, vec![17]);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":44949,"byte_end":44985,"line_start":271,"line_end":271,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":44990,"byte_end":44999,"line_start":272,"line_end":272,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":45004,"byte_end":45011,"line_start":273,"line_end":273,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":343},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":45861,"byte_end":45868,"line_start":303,"line_end":303,"column_start":8,"column_end":15},"name":"flatten","qualname":"::future::future::FutureExt::flatten","value":"fn (self) -> Flatten<Self>","parent":{"krate":0,"index":329},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the output of this\n future is itself another future.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the output of this","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":45135,"byte_end":45199,"line_start":281,"line_end":281,"column_start":5,"column_end":69}},{"value":"/ future is itself another future.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":45204,"byte_end":45240,"line_start":282,"line_end":282,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":45245,"byte_end":45248,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ This can be useful when combining futures together to flatten the","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":45253,"byte_end":45322,"line_start":284,"line_end":284,"column_start":5,"column_end":74}},{"value":"/ computation out the final result.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":45327,"byte_end":45364,"line_start":285,"line_end":285,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":45369,"byte_end":45372,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ This method is roughly equivalent to `self.then(|x| x)`.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":45377,"byte_end":45437,"line_start":287,"line_end":287,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":45442,"byte_end":45445,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":45450,"byte_end":45521,"line_start":289,"line_end":289,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":45526,"byte_end":45552,"line_start":290,"line_end":290,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":45557,"byte_end":45560,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":45565,"byte_end":45579,"line_start":292,"line_end":292,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":45584,"byte_end":45587,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":45592,"byte_end":45599,"line_start":294,"line_end":294,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":45604,"byte_end":45645,"line_start":295,"line_end":295,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":45650,"byte_end":45685,"line_start":296,"line_end":296,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":45690,"byte_end":45693,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ let nested_future = async { async { 1 } };","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":45698,"byte_end":45744,"line_start":298,"line_end":298,"column_start":5,"column_end":51}},{"value":"/ let future = nested_future.flatten();","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":45749,"byte_end":45790,"line_start":299,"line_end":299,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(future.await, 1);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":45795,"byte_end":45827,"line_start":300,"line_end":300,"column_start":5,"column_end":37}},{"value":"/ # });","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":45832,"byte_end":45841,"line_start":301,"line_end":301,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":45846,"byte_end":45853,"line_start":302,"line_end":302,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":344},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":46973,"byte_end":46987,"line_start":337,"line_end":337,"column_start":8,"column_end":22},"name":"flatten_stream","qualname":"::future::future::FutureExt::flatten_stream","value":"fn (self) -> FlattenStream<Self>","parent":{"krate":0,"index":329},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the successful result of this\n future is a stream.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the successful result of this","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":46082,"byte_end":46157,"line_start":312,"line_end":312,"column_start":5,"column_end":80}},{"value":"/ future is a stream.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":46162,"byte_end":46185,"line_start":313,"line_end":313,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":46190,"byte_end":46193,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ This can be useful when stream initialization is deferred, and it is","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":46198,"byte_end":46270,"line_start":315,"line_end":315,"column_start":5,"column_end":77}},{"value":"/ convenient to work with that stream as if stream was available at the","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":46275,"byte_end":46348,"line_start":316,"line_end":316,"column_start":5,"column_end":78}},{"value":"/ call site.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":46353,"byte_end":46367,"line_start":317,"line_end":317,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":46372,"byte_end":46375,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes this future and returns a wrapped","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":46380,"byte_end":46450,"line_start":319,"line_end":319,"column_start":5,"column_end":75}},{"value":"/ version of it.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":46455,"byte_end":46473,"line_start":320,"line_end":320,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":46478,"byte_end":46481,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":46486,"byte_end":46500,"line_start":322,"line_end":322,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":46505,"byte_end":46508,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":46513,"byte_end":46520,"line_start":324,"line_end":324,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":46525,"byte_end":46566,"line_start":325,"line_end":325,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":46571,"byte_end":46606,"line_start":326,"line_end":326,"column_start":5,"column_end":40}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":46611,"byte_end":46654,"line_start":327,"line_end":327,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":46659,"byte_end":46662,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ let stream_items = vec![17, 18, 19];","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":46667,"byte_end":46707,"line_start":329,"line_end":329,"column_start":5,"column_end":45}},{"value":"/ let future_of_a_stream = async { stream::iter(stream_items) };","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":46712,"byte_end":46778,"line_start":330,"line_end":330,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":46783,"byte_end":46786,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ let stream = future_of_a_stream.flatten_stream();","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":46791,"byte_end":46844,"line_start":332,"line_end":332,"column_start":5,"column_end":58}},{"value":"/ let list: Vec<_> = stream.collect().await;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":46849,"byte_end":46895,"line_start":333,"line_end":333,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(list, vec![17, 18, 19]);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":46900,"byte_end":46939,"line_start":334,"line_end":334,"column_start":5,"column_end":44}},{"value":"/ # });","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":46944,"byte_end":46953,"line_start":335,"line_end":335,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":46958,"byte_end":46965,"line_start":336,"line_end":336,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":345},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":48023,"byte_end":48027,"line_start":361,"line_end":361,"column_start":8,"column_end":12},"name":"fuse","qualname":"::future::future::FutureExt::fuse","value":"fn (self) -> Fuse<Self>","parent":{"krate":0,"index":329},"children":[],"decl_id":null,"docs":" Fuse a future such that `poll` will never again be called once it has\n completed. This method can be used to turn any `Future` into a\n `FusedFuture`.","sig":null,"attributes":[{"value":"/ Fuse a future such that `poll` will never again be called once it has","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":47128,"byte_end":47201,"line_start":345,"line_end":345,"column_start":5,"column_end":78}},{"value":"/ completed. This method can be used to turn any `Future` into a","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":47206,"byte_end":47272,"line_start":346,"line_end":346,"column_start":5,"column_end":71}},{"value":"/ `FusedFuture`.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":47277,"byte_end":47295,"line_start":347,"line_end":347,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":47300,"byte_end":47303,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ Normally, once a future has returned `Poll::Ready` from `poll`,","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":47308,"byte_end":47375,"line_start":349,"line_end":349,"column_start":5,"column_end":72}},{"value":"/ any further calls could exhibit bad behavior such as blocking","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":47380,"byte_end":47445,"line_start":350,"line_end":350,"column_start":5,"column_end":70}},{"value":"/ forever, panicking, never returning, etc. If it is known that `poll`","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":47450,"byte_end":47522,"line_start":351,"line_end":351,"column_start":5,"column_end":77}},{"value":"/ may be called too often then this method can be used to ensure that it","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":47527,"byte_end":47601,"line_start":352,"line_end":352,"column_start":5,"column_end":79}},{"value":"/ has defined semantics.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":47606,"byte_end":47632,"line_start":353,"line_end":353,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":47637,"byte_end":47640,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ If a `fuse`d future is `poll`ed after having returned `Poll::Ready`","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":47645,"byte_end":47716,"line_start":355,"line_end":355,"column_start":5,"column_end":76}},{"value":"/ previously, it will return `Poll::Pending`, from `poll` again (and will","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":47721,"byte_end":47796,"line_start":356,"line_end":356,"column_start":5,"column_end":80}},{"value":"/ continue to do so for all future calls to `poll`).","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":47801,"byte_end":47855,"line_start":357,"line_end":357,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":47860,"byte_end":47863,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ This combinator will drop the underlying future as soon as it has been","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":47868,"byte_end":47942,"line_start":359,"line_end":359,"column_start":5,"column_end":79}},{"value":"/ completed to ensure resources are reclaimed as soon as possible.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":47947,"byte_end":48015,"line_start":360,"line_end":360,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":346},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":48867,"byte_end":48874,"line_start":387,"line_end":387,"column_start":8,"column_end":15},"name":"inspect","qualname":"::future::future::FutureExt::inspect","value":"fn <F> (self, f: F) -> Inspect<Self, F>","parent":{"krate":0,"index":329},"children":[],"decl_id":null,"docs":" Do something with the output of a future before passing it on.","sig":null,"attributes":[{"value":"/ Do something with the output of a future before passing it on.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":48173,"byte_end":48239,"line_start":369,"line_end":369,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":48244,"byte_end":48247,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ When using futures, you'll often chain several of them together.  While","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":48252,"byte_end":48327,"line_start":371,"line_end":371,"column_start":5,"column_end":80}},{"value":"/ working on such code, you might want to check out what's happening at","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":48332,"byte_end":48405,"line_start":372,"line_end":372,"column_start":5,"column_end":78}},{"value":"/ various parts in the pipeline, without consuming the intermediate","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":48410,"byte_end":48479,"line_start":373,"line_end":373,"column_start":5,"column_end":74}},{"value":"/ value. To do that, insert a call to `inspect`.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":48484,"byte_end":48534,"line_start":374,"line_end":374,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":48539,"byte_end":48542,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":48547,"byte_end":48561,"line_start":376,"line_end":376,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":48566,"byte_end":48569,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":48574,"byte_end":48581,"line_start":378,"line_end":378,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":48586,"byte_end":48627,"line_start":379,"line_end":379,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":48632,"byte_end":48667,"line_start":380,"line_end":380,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":48672,"byte_end":48675,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ let future = async { 1 };","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":48680,"byte_end":48709,"line_start":382,"line_end":382,"column_start":5,"column_end":34}},{"value":"/ let new_future = future.inspect(|&x| println!(\"about to resolve: {}\", x));","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":48714,"byte_end":48792,"line_start":383,"line_end":383,"column_start":5,"column_end":83}},{"value":"/ assert_eq!(new_future.await, 1);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":48797,"byte_end":48833,"line_start":384,"line_end":384,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":48838,"byte_end":48847,"line_start":385,"line_end":385,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":48852,"byte_end":48859,"line_start":386,"line_end":386,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":348},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":50412,"byte_end":50424,"line_start":427,"line_end":427,"column_start":8,"column_end":20},"name":"catch_unwind","qualname":"::future::future::FutureExt::catch_unwind","value":"fn (self) -> CatchUnwind<Self>","parent":{"krate":0,"index":329},"children":[],"decl_id":null,"docs":" Catches unwinding panics while polling the future.","sig":null,"attributes":[{"value":"/ Catches unwinding panics while polling the future.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":49056,"byte_end":49110,"line_start":395,"line_end":395,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":49115,"byte_end":49118,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ In general, panics within a future can propagate all the way out to the","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":49123,"byte_end":49198,"line_start":397,"line_end":397,"column_start":5,"column_end":80}},{"value":"/ task level. This combinator makes it possible to halt unwinding within","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":49203,"byte_end":49277,"line_start":398,"line_end":398,"column_start":5,"column_end":79}},{"value":"/ the future itself. It's most commonly used within task executors. It's","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":49282,"byte_end":49356,"line_start":399,"line_end":399,"column_start":5,"column_end":79}},{"value":"/ not recommended to use this for error handling.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":49361,"byte_end":49412,"line_start":400,"line_end":400,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":49417,"byte_end":49420,"line_start":401,"line_end":401,"column_start":5,"column_end":8}},{"value":"/ Note that this method requires the `UnwindSafe` bound from the standard","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":49425,"byte_end":49500,"line_start":402,"line_end":402,"column_start":5,"column_end":80}},{"value":"/ library. This isn't always applied automatically, and the standard","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":49505,"byte_end":49575,"line_start":403,"line_end":403,"column_start":5,"column_end":75}},{"value":"/ library provides an `AssertUnwindSafe` wrapper type to apply it","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":49580,"byte_end":49647,"line_start":404,"line_end":404,"column_start":5,"column_end":72}},{"value":"/ after-the fact. To assist using this method, the `Future` trait is also","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":49652,"byte_end":49727,"line_start":405,"line_end":405,"column_start":5,"column_end":80}},{"value":"/ implemented for `AssertUnwindSafe<F>` where `F` implements `Future`.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":49732,"byte_end":49804,"line_start":406,"line_end":406,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":49809,"byte_end":49812,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` feature of this","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":49817,"byte_end":49881,"line_start":408,"line_end":408,"column_start":5,"column_end":69}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":49886,"byte_end":49943,"line_start":409,"line_end":409,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":49948,"byte_end":49951,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":49956,"byte_end":49970,"line_start":411,"line_end":411,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":49975,"byte_end":49978,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":49983,"byte_end":49990,"line_start":413,"line_end":413,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":49995,"byte_end":50036,"line_start":414,"line_end":414,"column_start":5,"column_end":46}},{"value":"/ use futures::future::{self, FutureExt, Ready};","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":50041,"byte_end":50091,"line_start":415,"line_end":415,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":50096,"byte_end":50099,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ let future = future::ready(2);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":50104,"byte_end":50138,"line_start":417,"line_end":417,"column_start":5,"column_end":39}},{"value":"/ assert!(future.catch_unwind().await.is_ok());","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":50143,"byte_end":50192,"line_start":418,"line_end":418,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":50197,"byte_end":50200,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ let future = future::lazy(|_| -> Ready<i32> {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":50205,"byte_end":50254,"line_start":420,"line_end":420,"column_start":5,"column_end":54}},{"value":"/     unimplemented!()","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":50259,"byte_end":50283,"line_start":421,"line_end":421,"column_start":5,"column_end":29}},{"value":"/ });","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":50288,"byte_end":50295,"line_start":422,"line_end":422,"column_start":5,"column_end":12}},{"value":"/ assert!(future.catch_unwind().await.is_err());","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":50300,"byte_end":50350,"line_start":423,"line_end":423,"column_start":5,"column_end":55}},{"value":"/ # });","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":50355,"byte_end":50364,"line_start":424,"line_end":424,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":50369,"byte_end":50376,"line_start":425,"line_end":425,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":50381,"byte_end":50404,"line_start":426,"line_end":426,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":349},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":52080,"byte_end":52086,"line_start":480,"line_end":480,"column_start":8,"column_end":14},"name":"shared","qualname":"::future::future::FutureExt::shared","value":"fn (self) -> Shared<Self>","parent":{"krate":0,"index":329},"children":[],"decl_id":null,"docs":" Create a cloneable handle to this future where all handles will resolve\n to the same result.","sig":null,"attributes":[{"value":"/ Create a cloneable handle to this future where all handles will resolve","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":50558,"byte_end":50633,"line_start":434,"line_end":434,"column_start":5,"column_end":80}},{"value":"/ to the same result.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":50638,"byte_end":50661,"line_start":435,"line_end":435,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":50666,"byte_end":50669,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ The `shared` combinator method provides a method to convert any future","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":50674,"byte_end":50748,"line_start":437,"line_end":437,"column_start":5,"column_end":79}},{"value":"/ into a cloneable future. It enables a future to be polled by multiple","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":50753,"byte_end":50826,"line_start":438,"line_end":438,"column_start":5,"column_end":78}},{"value":"/ threads.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":50831,"byte_end":50843,"line_start":439,"line_end":439,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":50848,"byte_end":50851,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` feature of this","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":50856,"byte_end":50920,"line_start":441,"line_end":441,"column_start":5,"column_end":69}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":50925,"byte_end":50982,"line_start":442,"line_end":442,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":50987,"byte_end":50990,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":50995,"byte_end":51009,"line_start":444,"line_end":444,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":51014,"byte_end":51017,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":51022,"byte_end":51029,"line_start":446,"line_end":446,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":51034,"byte_end":51075,"line_start":447,"line_end":447,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":51080,"byte_end":51115,"line_start":448,"line_end":448,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":51120,"byte_end":51123,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ let future = async { 6 };","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":51128,"byte_end":51157,"line_start":450,"line_end":450,"column_start":5,"column_end":34}},{"value":"/ let shared1 = future.shared();","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":51162,"byte_end":51196,"line_start":451,"line_end":451,"column_start":5,"column_end":39}},{"value":"/ let shared2 = shared1.clone();","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":51201,"byte_end":51235,"line_start":452,"line_end":452,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":51240,"byte_end":51243,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(6, shared1.await);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":51248,"byte_end":51281,"line_start":454,"line_end":454,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(6, shared2.await);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":51286,"byte_end":51319,"line_start":455,"line_end":455,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":51324,"byte_end":51333,"line_start":456,"line_end":456,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":51338,"byte_end":51345,"line_start":457,"line_end":457,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":51350,"byte_end":51353,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":51358,"byte_end":51365,"line_start":459,"line_end":459,"column_start":5,"column_end":12}},{"value":"/ // Note, unlike most examples this is written in the context of a","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":51370,"byte_end":51439,"line_start":460,"line_end":460,"column_start":5,"column_end":74}},{"value":"/ // synchronous function to better illustrate the cross-thread aspect of","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":51444,"byte_end":51519,"line_start":461,"line_end":461,"column_start":5,"column_end":80}},{"value":"/ // the `shared` combinator.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":51524,"byte_end":51555,"line_start":462,"line_end":462,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":51560,"byte_end":51563,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":51568,"byte_end":51609,"line_start":464,"line_end":464,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":51614,"byte_end":51649,"line_start":465,"line_end":465,"column_start":5,"column_end":40}},{"value":"/ use futures::executor::block_on;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":51654,"byte_end":51690,"line_start":466,"line_end":466,"column_start":5,"column_end":41}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":51695,"byte_end":51715,"line_start":467,"line_end":467,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":51720,"byte_end":51723,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/ let future = async { 6 };","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":51728,"byte_end":51757,"line_start":469,"line_end":469,"column_start":5,"column_end":34}},{"value":"/ let shared1 = future.shared();","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":51762,"byte_end":51796,"line_start":470,"line_end":470,"column_start":5,"column_end":39}},{"value":"/ let shared2 = shared1.clone();","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":51801,"byte_end":51835,"line_start":471,"line_end":471,"column_start":5,"column_end":39}},{"value":"/ let join_handle = thread::spawn(move || {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":51840,"byte_end":51885,"line_start":472,"line_end":472,"column_start":5,"column_end":50}},{"value":"/     assert_eq!(6, block_on(shared2));","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":51890,"byte_end":51931,"line_start":473,"line_end":473,"column_start":5,"column_end":46}},{"value":"/ });","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":51936,"byte_end":51943,"line_start":474,"line_end":474,"column_start":5,"column_end":12}},{"value":"/ assert_eq!(6, shared1.await);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":51948,"byte_end":51981,"line_start":475,"line_end":475,"column_start":5,"column_end":38}},{"value":"/ join_handle.join().unwrap();","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":51986,"byte_end":52018,"line_start":476,"line_end":476,"column_start":5,"column_end":37}},{"value":"/ # });","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":52023,"byte_end":52032,"line_start":477,"line_end":477,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":52037,"byte_end":52044,"line_start":478,"line_end":478,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":52049,"byte_end":52072,"line_start":479,"line_end":479,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":350},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":53084,"byte_end":53089,"line_start":510,"line_end":510,"column_start":8,"column_end":13},"name":"boxed","qualname":"::future::future::FutureExt::boxed","value":"fn <'a> (self) -> BoxFuture<'a, Self::Output>","parent":{"krate":0,"index":329},"children":[],"decl_id":null,"docs":" Wrap the future in a Box, pinning it.","sig":null,"attributes":[{"value":"/ Wrap the future in a Box, pinning it.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":52855,"byte_end":52896,"line_start":505,"line_end":505,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":52901,"byte_end":52904,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":52909,"byte_end":52984,"line_start":507,"line_end":507,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":52989,"byte_end":53046,"line_start":508,"line_end":508,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":53051,"byte_end":53076,"line_start":509,"line_end":509,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":352},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":53515,"byte_end":53526,"line_start":524,"line_end":524,"column_start":8,"column_end":19},"name":"boxed_local","qualname":"::future::future::FutureExt::boxed_local","value":"fn <'a> (self) -> LocalBoxFuture<'a, Self::Output>","parent":{"krate":0,"index":329},"children":[],"decl_id":null,"docs":" Wrap the future in a Box, pinning it.","sig":null,"attributes":[{"value":"/ Wrap the future in a Box, pinning it.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":53214,"byte_end":53255,"line_start":517,"line_end":517,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":53260,"byte_end":53263,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/ Similar to `boxed`, but without the `Send` requirement.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":53268,"byte_end":53327,"line_start":519,"line_end":519,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":53332,"byte_end":53335,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":53340,"byte_end":53415,"line_start":521,"line_end":521,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":53420,"byte_end":53477,"line_start":522,"line_end":522,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":53482,"byte_end":53507,"line_start":523,"line_end":523,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":354},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":53782,"byte_end":53792,"line_start":533,"line_end":533,"column_start":8,"column_end":18},"name":"unit_error","qualname":"::future::future::FutureExt::unit_error","value":"fn (self) -> UnitError<Self>","parent":{"krate":0,"index":329},"children":[],"decl_id":null,"docs":" Turns a [`Future<Output = T>`](Future) into a\n [`TryFuture<Ok = T, Error = ()`>](futures_core::future::TryFuture).\n","sig":null,"attributes":[{"value":"/ Turns a [`Future<Output = T>`](Future) into a","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":53649,"byte_end":53698,"line_start":531,"line_end":531,"column_start":5,"column_end":54}},{"value":"/ [`TryFuture<Ok = T, Error = ()`>](futures_core::future::TryFuture).","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":53703,"byte_end":53774,"line_start":532,"line_end":532,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":355},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":54031,"byte_end":54042,"line_start":542,"line_end":542,"column_start":8,"column_end":19},"name":"never_error","qualname":"::future::future::FutureExt::never_error","value":"fn (self) -> NeverError<Self>","parent":{"krate":0,"index":329},"children":[],"decl_id":null,"docs":" Turns a [`Future<Output = T>`](Future) into a\n [`TryFuture<Ok = T, Error = Never`>](futures_core::future::TryFuture).\n","sig":null,"attributes":[{"value":"/ Turns a [`Future<Output = T>`](Future) into a","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":53895,"byte_end":53944,"line_start":540,"line_end":540,"column_start":5,"column_end":54}},{"value":"/ [`TryFuture<Ok = T, Error = Never`>](futures_core::future::TryFuture).","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":53949,"byte_end":54023,"line_start":541,"line_end":541,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":356},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":54224,"byte_end":54234,"line_start":550,"line_end":550,"column_start":8,"column_end":18},"name":"poll_unpin","qualname":"::future::future::FutureExt::poll_unpin","value":"fn (&mut self, cx: &mut Context<'_>) -> Poll<Self::Output>","parent":{"krate":0,"index":329},"children":[],"decl_id":null,"docs":" A convenience for calling `Future::poll` on `Unpin` future types.\n","sig":null,"attributes":[{"value":"/ A convenience for calling `Future::poll` on `Unpin` future types.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":54147,"byte_end":54216,"line_start":549,"line_end":549,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":357},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":55630,"byte_end":55642,"line_start":588,"line_end":588,"column_start":8,"column_end":20},"name":"now_or_never","qualname":"::future::future::FutureExt::now_or_never","value":"fn (mut self) -> Option<Self::Output>","parent":{"krate":0,"index":329},"children":[],"decl_id":null,"docs":" Evaluates and consumes the future, returning the resulting output if\n the future is ready after the first call to `Future::poll`.","sig":null,"attributes":[{"value":"/ Evaluates and consumes the future, returning the resulting output if","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":54370,"byte_end":54442,"line_start":557,"line_end":557,"column_start":5,"column_end":77}},{"value":"/ the future is ready after the first call to `Future::poll`.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":54447,"byte_end":54510,"line_start":558,"line_end":558,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":54515,"byte_end":54518,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/ If `poll` instead returns `Poll::Pending`, `None` is returned.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":54523,"byte_end":54589,"line_start":560,"line_end":560,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":54594,"byte_end":54597,"line_start":561,"line_end":561,"column_start":5,"column_end":8}},{"value":"/ This method is useful in cases where immediacy is more important than","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":54602,"byte_end":54675,"line_start":562,"line_end":562,"column_start":5,"column_end":78}},{"value":"/ waiting for a result. It is also convenient for quickly obtaining","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":54680,"byte_end":54749,"line_start":563,"line_end":563,"column_start":5,"column_end":74}},{"value":"/ the value of a future that is known to always resolve immediately.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":54754,"byte_end":54824,"line_start":564,"line_end":564,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":54829,"byte_end":54832,"line_start":565,"line_end":565,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":54837,"byte_end":54851,"line_start":566,"line_end":566,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":54856,"byte_end":54859,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":54864,"byte_end":54871,"line_start":568,"line_end":568,"column_start":5,"column_end":12}},{"value":"/ # use futures::prelude::*;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":54876,"byte_end":54906,"line_start":569,"line_end":569,"column_start":5,"column_end":35}},{"value":"/ use futures::{future::ready, future::pending};","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":54911,"byte_end":54961,"line_start":570,"line_end":570,"column_start":5,"column_end":55}},{"value":"/ let future_ready = ready(\"foobar\");","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":54966,"byte_end":55005,"line_start":571,"line_end":571,"column_start":5,"column_end":44}},{"value":"/ let future_pending = pending::<&'static str>();","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":55010,"byte_end":55061,"line_start":572,"line_end":572,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":55066,"byte_end":55069,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future_ready.now_or_never(), Some(\"foobar\"));","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":55074,"byte_end":55134,"line_start":574,"line_end":574,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(future_pending.now_or_never(), None);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":55139,"byte_end":55191,"line_start":575,"line_end":575,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":55196,"byte_end":55203,"line_start":576,"line_end":576,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":55208,"byte_end":55211,"line_start":577,"line_end":577,"column_start":5,"column_end":8}},{"value":"/ In cases where it is absolutely known that a future should always","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":55216,"byte_end":55285,"line_start":578,"line_end":578,"column_start":5,"column_end":74}},{"value":"/ resolve immediately and never return `Poll::Pending`, this method can","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":55290,"byte_end":55363,"line_start":579,"line_end":579,"column_start":5,"column_end":78}},{"value":"/ be combined with `expect()`:","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":55368,"byte_end":55400,"line_start":580,"line_end":580,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":55405,"byte_end":55408,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":55413,"byte_end":55420,"line_start":582,"line_end":582,"column_start":5,"column_end":12}},{"value":"/ # use futures::{prelude::*, future::ready};","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":55425,"byte_end":55472,"line_start":583,"line_end":583,"column_start":5,"column_end":52}},{"value":"/ let future_ready = ready(\"foobar\");","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":55477,"byte_end":55516,"line_start":584,"line_end":584,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":55521,"byte_end":55524,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future_ready.now_or_never().expect(\"Future not ready\"), \"foobar\");","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":55529,"byte_end":55610,"line_start":586,"line_end":586,"column_start":5,"column_end":86}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":55615,"byte_end":55622,"line_start":587,"line_end":587,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":4366},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\into_future.rs","byte_start":97744,"byte_end":97754,"line_start":10,"line_end":10,"column_start":12,"column_end":22},"name":"IntoFuture","qualname":"::future::try_future::into_future::IntoFuture","value":"","parent":null,"children":[],"decl_id":null,"docs":" Future for the [`into_future`](super::TryFutureExt::into_future) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\into_future.rs","byte_start":97665,"byte_end":97732,"line_start":9,"line_end":9,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\into_future.rs","byte_start":97633,"byte_end":97647,"line_start":7,"line_end":7,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":4387},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\into_future.rs","byte_start":97744,"byte_end":97754,"line_start":10,"line_end":10,"column_start":12,"column_end":22},"name":"__IntoFuture","qualname":"::future::try_future::into_future::_::__IntoFuture","value":"__IntoFuture {  }","parent":null,"children":[{"krate":0,"index":4390},{"krate":0,"index":4391}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4413},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\try_flatten.rs","byte_start":98647,"byte_end":98652,"line_start":12,"line_end":12,"column_start":5,"column_end":10},"name":"First","qualname":"::future::try_future::try_flatten::TryFlatten::First","value":"TryFlatten::First(Fut1)","parent":{"krate":0,"index":4410},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4415},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\try_flatten.rs","byte_start":98671,"byte_end":98677,"line_start":13,"line_end":13,"column_start":5,"column_end":11},"name":"Second","qualname":"::future::try_future::try_flatten::TryFlatten::Second","value":"TryFlatten::Second(Fut2)","parent":{"krate":0,"index":4410},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4417},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\try_flatten.rs","byte_start":98696,"byte_end":98701,"line_start":14,"line_end":14,"column_start":5,"column_end":10},"name":"Empty","qualname":"::future::try_future::try_flatten::TryFlatten::Empty","value":"TryFlatten::Empty","parent":{"krate":0,"index":4410},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4410},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\try_flatten.rs","byte_start":98618,"byte_end":98628,"line_start":11,"line_end":11,"column_start":10,"column_end":20},"name":"TryFlatten","qualname":"::future::try_future::try_flatten::TryFlatten","value":"TryFlatten::{First, Second, Empty}","parent":null,"children":[{"krate":0,"index":4413},{"krate":0,"index":4415},{"krate":0,"index":4417}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"pin(__private())","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\try_flatten.rs","byte_start":98577,"byte_end":98591,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":4453},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\try_flatten.rs","byte_start":98618,"byte_end":98628,"line_start":11,"line_end":11,"column_start":10,"column_end":20},"name":"__TryFlatten","qualname":"::future::try_future::try_flatten::_::__TryFlatten","value":"__TryFlatten {  }","parent":null,"children":[{"krate":0,"index":4457},{"krate":0,"index":4458},{"krate":0,"index":4459}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4490},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\try_flatten_err.rs","byte_start":103928,"byte_end":103933,"line_start":9,"line_end":9,"column_start":5,"column_end":10},"name":"First","qualname":"::future::try_future::try_flatten_err::TryFlattenErr::First","value":"TryFlattenErr::First(Fut1)","parent":{"krate":0,"index":4487},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4492},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\try_flatten_err.rs","byte_start":103952,"byte_end":103958,"line_start":10,"line_end":10,"column_start":5,"column_end":11},"name":"Second","qualname":"::future::try_future::try_flatten_err::TryFlattenErr::Second","value":"TryFlattenErr::Second(Fut2)","parent":{"krate":0,"index":4487},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4494},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\try_flatten_err.rs","byte_start":103977,"byte_end":103982,"line_start":11,"line_end":11,"column_start":5,"column_end":10},"name":"Empty","qualname":"::future::try_future::try_flatten_err::TryFlattenErr::Empty","value":"TryFlattenErr::Empty","parent":{"krate":0,"index":4487},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4487},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\try_flatten_err.rs","byte_start":103896,"byte_end":103909,"line_start":8,"line_end":8,"column_start":10,"column_end":23},"name":"TryFlattenErr","qualname":"::future::try_future::try_flatten_err::TryFlattenErr","value":"TryFlattenErr::{First, Second, Empty}","parent":null,"children":[{"krate":0,"index":4490},{"krate":0,"index":4492},{"krate":0,"index":4494}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"pin(__private())","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\try_flatten_err.rs","byte_start":103855,"byte_end":103869,"line_start":6,"line_end":6,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":4530},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\try_flatten_err.rs","byte_start":103896,"byte_end":103909,"line_start":8,"line_end":8,"column_start":10,"column_end":23},"name":"__TryFlattenErr","qualname":"::future::try_future::try_flatten_err::_::__TryFlattenErr","value":"__TryFlattenErr {  }","parent":null,"children":[{"krate":0,"index":4534},{"krate":0,"index":4535},{"krate":0,"index":4536}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4562},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"TryFlatten","qualname":"::future::try_future::TryFlatten","value":"TryFlatten {  }","parent":null,"children":[{"krate":0,"index":4565}],"decl_id":null,"docs":" Future for the [`try_flatten`](TryFutureExt::try_flatten) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4584},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"__TryFlatten","qualname":"::future::try_future::_::__TryFlatten","value":"__TryFlatten {  }","parent":null,"children":[{"krate":0,"index":4588},{"krate":0,"index":4589}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4630},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"TryFlattenErr","qualname":"::future::try_future::TryFlattenErr","value":"TryFlattenErr {  }","parent":null,"children":[{"krate":0,"index":4633}],"decl_id":null,"docs":" Future for the [`try_flatten_err`](TryFutureExt::try_flatten_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4652},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"__TryFlattenErr","qualname":"::future::try_future::_::__TryFlattenErr","value":"__TryFlattenErr {  }","parent":null,"children":[{"krate":0,"index":4656},{"krate":0,"index":4657}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4697},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"TryFlattenStream","qualname":"::future::try_future::TryFlattenStream","value":"TryFlattenStream {  }","parent":null,"children":[{"krate":0,"index":4699}],"decl_id":null,"docs":" Future for the [`try_flatten_stream`](TryFutureExt::try_flatten_stream) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4715},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"__TryFlattenStream","qualname":"::future::try_future::_::__TryFlattenStream","value":"__TryFlattenStream {  }","parent":null,"children":[{"krate":0,"index":4718},{"krate":0,"index":4719}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4760},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"FlattenSink","qualname":"::future::try_future::FlattenSink","value":"FlattenSink {  }","parent":null,"children":[{"krate":0,"index":4763}],"decl_id":null,"docs":" Sink for the [`flatten_sink`](TryFutureExt::flatten_sink) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4782},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"__FlattenSink","qualname":"::future::try_future::_::__FlattenSink","value":"__FlattenSink {  }","parent":null,"children":[{"krate":0,"index":4786},{"krate":0,"index":4787}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4839},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"AndThen","qualname":"::future::try_future::AndThen","value":"AndThen {  }","parent":null,"children":[{"krate":0,"index":4843}],"decl_id":null,"docs":" Future for the [`and_then`](TryFutureExt::and_then) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4865},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"__AndThen","qualname":"::future::try_future::_::__AndThen","value":"__AndThen {  }","parent":null,"children":[{"krate":0,"index":4870},{"krate":0,"index":4871}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4922},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"OrElse","qualname":"::future::try_future::OrElse","value":"OrElse {  }","parent":null,"children":[{"krate":0,"index":4926}],"decl_id":null,"docs":" Future for the [`or_else`](TryFutureExt::or_else) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4948},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"__OrElse","qualname":"::future::try_future::_::__OrElse","value":"__OrElse {  }","parent":null,"children":[{"krate":0,"index":4953},{"krate":0,"index":4954}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5004},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"ErrInto","qualname":"::future::try_future::ErrInto","value":"ErrInto {  }","parent":null,"children":[{"krate":0,"index":5007}],"decl_id":null,"docs":" Future for the [`err_into`](TryFutureExt::err_into) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":5026},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"__ErrInto","qualname":"::future::try_future::_::__ErrInto","value":"__ErrInto {  }","parent":null,"children":[{"krate":0,"index":5030},{"krate":0,"index":5031}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5072},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"OkInto","qualname":"::future::try_future::OkInto","value":"OkInto {  }","parent":null,"children":[{"krate":0,"index":5075}],"decl_id":null,"docs":" Future for the [`ok_into`](TryFutureExt::ok_into) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":5094},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"__OkInto","qualname":"::future::try_future::_::__OkInto","value":"__OkInto {  }","parent":null,"children":[{"krate":0,"index":5098},{"krate":0,"index":5099}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5140},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"InspectOk","qualname":"::future::try_future::InspectOk","value":"InspectOk {  }","parent":null,"children":[{"krate":0,"index":5143}],"decl_id":null,"docs":" Future for the [`inspect_ok`](super::TryFutureExt::inspect_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":5162},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"__InspectOk","qualname":"::future::try_future::_::__InspectOk","value":"__InspectOk {  }","parent":null,"children":[{"krate":0,"index":5166},{"krate":0,"index":5167}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5208},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"InspectErr","qualname":"::future::try_future::InspectErr","value":"InspectErr {  }","parent":null,"children":[{"krate":0,"index":5211}],"decl_id":null,"docs":" Future for the [`inspect_err`](super::TryFutureExt::inspect_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":5230},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"__InspectErr","qualname":"::future::try_future::_::__InspectErr","value":"__InspectErr {  }","parent":null,"children":[{"krate":0,"index":5234},{"krate":0,"index":5235}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5276},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"MapOk","qualname":"::future::try_future::MapOk","value":"MapOk {  }","parent":null,"children":[{"krate":0,"index":5279}],"decl_id":null,"docs":" Future for the [`map_ok`](TryFutureExt::map_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":5298},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"__MapOk","qualname":"::future::try_future::_::__MapOk","value":"__MapOk {  }","parent":null,"children":[{"krate":0,"index":5302},{"krate":0,"index":5303}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5344},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"MapErr","qualname":"::future::try_future::MapErr","value":"MapErr {  }","parent":null,"children":[{"krate":0,"index":5347}],"decl_id":null,"docs":" Future for the [`map_err`](TryFutureExt::map_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":5366},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"__MapErr","qualname":"::future::try_future::_::__MapErr","value":"__MapErr {  }","parent":null,"children":[{"krate":0,"index":5370},{"krate":0,"index":5371}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5413},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"MapOkOrElse","qualname":"::future::try_future::MapOkOrElse","value":"MapOkOrElse {  }","parent":null,"children":[{"krate":0,"index":5417}],"decl_id":null,"docs":" Future for the [`map_ok_or_else`](TryFutureExt::map_ok_or_else) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":5439},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"__MapOkOrElse","qualname":"::future::try_future::_::__MapOkOrElse","value":"__MapOkOrElse {  }","parent":null,"children":[{"krate":0,"index":5444},{"krate":0,"index":5445}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5495},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"UnwrapOrElse","qualname":"::future::try_future::UnwrapOrElse","value":"UnwrapOrElse {  }","parent":null,"children":[{"krate":0,"index":5498}],"decl_id":null,"docs":" Future for the [`unwrap_or_else`](TryFutureExt::unwrap_or_else) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":5517},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"__UnwrapOrElse","qualname":"::future::try_future::_::__UnwrapOrElse","value":"__UnwrapOrElse {  }","parent":null,"children":[{"krate":0,"index":5521},{"krate":0,"index":5522}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":482},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":80825,"byte_end":80837,"line_start":136,"line_end":136,"column_start":11,"column_end":23},"name":"TryFutureExt","qualname":"::future::try_future::TryFutureExt","value":"TryFutureExt: TryFuture","parent":null,"children":[{"krate":0,"index":483},{"krate":0,"index":485},{"krate":0,"index":488},{"krate":0,"index":492},{"krate":0,"index":495},{"krate":0,"index":497},{"krate":0,"index":499},{"krate":0,"index":502},{"krate":0,"index":505},{"krate":0,"index":507},{"krate":0,"index":509},{"krate":0,"index":510},{"krate":0,"index":511},{"krate":0,"index":513},{"krate":0,"index":514}],"decl_id":null,"docs":" Adapters specific to [`Result`]-returning futures\n","sig":null,"attributes":[{"value":"/ Adapters specific to [`Result`]-returning futures","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":80761,"byte_end":80814,"line_start":135,"line_end":135,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":483},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":81937,"byte_end":81949,"line_start":169,"line_end":169,"column_start":8,"column_end":20},"name":"flatten_sink","qualname":"::future::try_future::TryFutureExt::flatten_sink","value":"fn <Item> (self) -> FlattenSink<Self, Self::Ok>","parent":{"krate":0,"index":482},"children":[],"decl_id":null,"docs":" Flattens the execution of this future when the successful result of this\n future is a [`Sink`].","sig":null,"attributes":[{"value":"/ Flattens the execution of this future when the successful result of this","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":80855,"byte_end":80931,"line_start":137,"line_end":137,"column_start":5,"column_end":81}},{"value":"/ future is a [`Sink`].","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":80936,"byte_end":80961,"line_start":138,"line_end":138,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":80966,"byte_end":80969,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ This can be useful when sink initialization is deferred, and it is","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":80974,"byte_end":81044,"line_start":140,"line_end":140,"column_start":5,"column_end":75}},{"value":"/ convenient to work with that sink as if the sink was available at the","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":81049,"byte_end":81122,"line_start":141,"line_end":141,"column_start":5,"column_end":78}},{"value":"/ call site.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":81127,"byte_end":81141,"line_start":142,"line_end":142,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":81146,"byte_end":81149,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes this future and returns a wrapped","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":81154,"byte_end":81224,"line_start":144,"line_end":144,"column_start":5,"column_end":75}},{"value":"/ version of it.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":81229,"byte_end":81247,"line_start":145,"line_end":145,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":81252,"byte_end":81255,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":81260,"byte_end":81274,"line_start":147,"line_end":147,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":81279,"byte_end":81282,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":81287,"byte_end":81294,"line_start":149,"line_end":149,"column_start":5,"column_end":12}},{"value":"/ use futures::future::{Future, TryFutureExt};","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":81299,"byte_end":81347,"line_start":150,"line_end":150,"column_start":5,"column_end":53}},{"value":"/ use futures::sink::Sink;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":81352,"byte_end":81380,"line_start":151,"line_end":151,"column_start":5,"column_end":33}},{"value":"/ # use futures::channel::mpsc::{self, SendError};","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":81385,"byte_end":81437,"line_start":152,"line_end":152,"column_start":5,"column_end":57}},{"value":"/ # type T = i32;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":81442,"byte_end":81461,"line_start":153,"line_end":153,"column_start":5,"column_end":24}},{"value":"/ # type E = SendError;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":81466,"byte_end":81491,"line_start":154,"line_end":154,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":81496,"byte_end":81499,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ fn make_sink_async() -> impl Future<Output = Result<","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":81504,"byte_end":81560,"line_start":156,"line_end":156,"column_start":5,"column_end":61}},{"value":"/     impl Sink<T, Error = E>,","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":81565,"byte_end":81597,"line_start":157,"line_end":157,"column_start":5,"column_end":37}},{"value":"/     E,","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":81602,"byte_end":81612,"line_start":158,"line_end":158,"column_start":5,"column_end":15}},{"value":"/ >> { // ... }","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":81617,"byte_end":81634,"line_start":159,"line_end":159,"column_start":5,"column_end":22}},{"value":"/ # let (tx, _rx) = mpsc::unbounded::<i32>();","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":81639,"byte_end":81686,"line_start":160,"line_end":160,"column_start":5,"column_end":52}},{"value":"/ # futures::future::ready(Ok(tx))","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":81691,"byte_end":81727,"line_start":161,"line_end":161,"column_start":5,"column_end":41}},{"value":"/ # }","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":81732,"byte_end":81739,"line_start":162,"line_end":162,"column_start":5,"column_end":12}},{"value":"/ fn take_sink(sink: impl Sink<T, Error = E>) { /* ... */ }","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":81744,"byte_end":81805,"line_start":163,"line_end":163,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":81810,"byte_end":81813,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ let fut = make_sink_async();","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":81818,"byte_end":81850,"line_start":165,"line_end":165,"column_start":5,"column_end":37}},{"value":"/ take_sink(fut.flatten_sink())","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":81855,"byte_end":81888,"line_start":166,"line_end":166,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":81893,"byte_end":81900,"line_start":167,"line_end":167,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"sink\")","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":81905,"byte_end":81929,"line_start":168,"line_end":168,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":485},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":83495,"byte_end":83501,"line_start":215,"line_end":215,"column_start":8,"column_end":14},"name":"map_ok","qualname":"::future::try_future::TryFutureExt::map_ok","value":"fn <T, F> (self, f: F) -> MapOk<Self, F>","parent":{"krate":0,"index":482},"children":[],"decl_id":null,"docs":" Maps this future's success value to a different value.","sig":null,"attributes":[{"value":"/ Maps this future's success value to a different value.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":82123,"byte_end":82181,"line_start":177,"line_end":177,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":82186,"byte_end":82189,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ This method can be used to change the [`Ok`](TryFuture::Ok) type of the","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":82194,"byte_end":82269,"line_start":179,"line_end":179,"column_start":5,"column_end":80}},{"value":"/ future into a different type. It is similar to the [`Result::map`]","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":82274,"byte_end":82344,"line_start":180,"line_end":180,"column_start":5,"column_end":75}},{"value":"/ method. You can use this method to chain along a computation once the","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":82349,"byte_end":82422,"line_start":181,"line_end":181,"column_start":5,"column_end":78}},{"value":"/ future has been resolved.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":82427,"byte_end":82456,"line_start":182,"line_end":182,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":82461,"byte_end":82464,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":82469,"byte_end":82544,"line_start":184,"line_end":184,"column_start":5,"column_end":80}},{"value":"/ to an [`Ok`]. If it resolves to an [`Err`], panics, or is dropped, then","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":82549,"byte_end":82624,"line_start":185,"line_end":185,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":82629,"byte_end":82676,"line_start":186,"line_end":186,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":82681,"byte_end":82684,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":82689,"byte_end":82764,"line_start":188,"line_end":188,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":82769,"byte_end":82795,"line_start":189,"line_end":189,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":82800,"byte_end":82803,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":82808,"byte_end":82822,"line_start":191,"line_end":191,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":82827,"byte_end":82830,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":82835,"byte_end":82842,"line_start":193,"line_end":193,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":82847,"byte_end":82885,"line_start":194,"line_end":194,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":82890,"byte_end":82893,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":82898,"byte_end":82939,"line_start":196,"line_end":196,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":82944,"byte_end":82989,"line_start":197,"line_end":197,"column_start":5,"column_end":50}},{"value":"/ let future = future.map_ok(|x| x + 3);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":82994,"byte_end":83036,"line_start":198,"line_end":198,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(future.await, Ok(4));","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":83041,"byte_end":83077,"line_start":199,"line_end":199,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":83082,"byte_end":83091,"line_start":200,"line_end":200,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":83096,"byte_end":83103,"line_start":201,"line_end":201,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":83108,"byte_end":83111,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ Calling [`map_ok`](TryFutureExt::map_ok) on an errored future has no","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":83116,"byte_end":83188,"line_start":203,"line_end":203,"column_start":5,"column_end":77}},{"value":"/ effect:","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":83193,"byte_end":83204,"line_start":204,"line_end":204,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":83209,"byte_end":83212,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":83217,"byte_end":83224,"line_start":206,"line_end":206,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":83229,"byte_end":83267,"line_start":207,"line_end":207,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":83272,"byte_end":83275,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":83280,"byte_end":83321,"line_start":209,"line_end":209,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":83326,"byte_end":83372,"line_start":210,"line_end":210,"column_start":5,"column_end":51}},{"value":"/ let future = future.map_ok(|x| x + 3);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":83377,"byte_end":83419,"line_start":211,"line_end":211,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(future.await, Err(1));","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":83424,"byte_end":83461,"line_start":212,"line_end":212,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":83466,"byte_end":83475,"line_start":213,"line_end":213,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":83480,"byte_end":83487,"line_start":214,"line_end":214,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":488},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":85063,"byte_end":85077,"line_start":255,"line_end":255,"column_start":8,"column_end":22},"name":"map_ok_or_else","qualname":"::future::try_future::TryFutureExt::map_ok_or_else","value":"fn <T, E, F> (self, e: E, f: F) -> MapOkOrElse<Self, F, E>","parent":{"krate":0,"index":482},"children":[],"decl_id":null,"docs":" Maps this future's success value to a different value, and permits for error handling resulting in the same type.","sig":null,"attributes":[{"value":"/ Maps this future's success value to a different value, and permits for error handling resulting in the same type.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":83692,"byte_end":83809,"line_start":223,"line_end":223,"column_start":5,"column_end":122}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":83814,"byte_end":83817,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ This method can be used to coalesce your [`Ok`](TryFuture::Ok) type and [`Error`](TryFuture::Error) into another type,","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":83822,"byte_end":83944,"line_start":225,"line_end":225,"column_start":5,"column_end":127}},{"value":"/ where that type is the same for both outcomes.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":83949,"byte_end":83999,"line_start":226,"line_end":226,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":84004,"byte_end":84007,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":84012,"byte_end":84087,"line_start":228,"line_end":228,"column_start":5,"column_end":80}},{"value":"/ to an [`Ok`]. If it resolves to an [`Err`], panics, or is dropped, then","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":84092,"byte_end":84167,"line_start":229,"line_end":229,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":84172,"byte_end":84219,"line_start":230,"line_end":230,"column_start":5,"column_end":52}},{"value":"/ ","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":84224,"byte_end":84228,"line_start":231,"line_end":231,"column_start":5,"column_end":9}},{"value":"/ The provided closure `e` will only be called if this future is resolved","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":84233,"byte_end":84308,"line_start":232,"line_end":232,"column_start":5,"column_end":80}},{"value":"/ to an [`Err`]. If it resolves to an [`Ok`], panics, or is dropped, then","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":84313,"byte_end":84388,"line_start":233,"line_end":233,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":84393,"byte_end":84440,"line_start":234,"line_end":234,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":84445,"byte_end":84448,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":84453,"byte_end":84528,"line_start":236,"line_end":236,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":84533,"byte_end":84559,"line_start":237,"line_end":237,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":84564,"byte_end":84567,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":84572,"byte_end":84586,"line_start":239,"line_end":239,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":84591,"byte_end":84594,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":84599,"byte_end":84606,"line_start":241,"line_end":241,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":84611,"byte_end":84649,"line_start":242,"line_end":242,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":84654,"byte_end":84657,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":84662,"byte_end":84703,"line_start":244,"line_end":244,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(5) };","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":84708,"byte_end":84753,"line_start":245,"line_end":245,"column_start":5,"column_end":50}},{"value":"/ let future = future.map_ok_or_else(|x| x * 2, |x| x + 3);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":84758,"byte_end":84819,"line_start":246,"line_end":246,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(future.await, 8);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":84824,"byte_end":84856,"line_start":247,"line_end":247,"column_start":5,"column_end":37}},{"value":"/ ","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":84861,"byte_end":84865,"line_start":248,"line_end":248,"column_start":5,"column_end":9}},{"value":"/ let future = async { Err::<i32, i32>(5) };","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":84870,"byte_end":84916,"line_start":249,"line_end":249,"column_start":5,"column_end":51}},{"value":"/ let future = future.map_ok_or_else(|x| x * 2, |x| x + 3);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":84921,"byte_end":84982,"line_start":250,"line_end":250,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(future.await, 10);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":84987,"byte_end":85020,"line_start":251,"line_end":251,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":85025,"byte_end":85034,"line_start":252,"line_end":252,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":85039,"byte_end":85046,"line_start":253,"line_end":253,"column_start":5,"column_end":12}},{"value":"/ ","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":85051,"byte_end":85055,"line_start":254,"line_end":254,"column_start":5,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":492},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":86760,"byte_end":86767,"line_start":303,"line_end":303,"column_start":8,"column_end":15},"name":"map_err","qualname":"::future::try_future::TryFutureExt::map_err","value":"fn <E, F> (self, f: F) -> MapErr<Self, F>","parent":{"krate":0,"index":482},"children":[],"decl_id":null,"docs":" Maps this future's error value to a different value.","sig":null,"attributes":[{"value":"/ Maps this future's error value to a different value.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":85311,"byte_end":85367,"line_start":264,"line_end":264,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":85372,"byte_end":85375,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ This method can be used to change the [`Error`](TryFuture::Error) type","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":85380,"byte_end":85454,"line_start":266,"line_end":266,"column_start":5,"column_end":79}},{"value":"/ of the future into a different type. It is similar to the","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":85459,"byte_end":85520,"line_start":267,"line_end":267,"column_start":5,"column_end":66}},{"value":"/ [`Result::map_err`] method. You can use this method for example to","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":85525,"byte_end":85595,"line_start":268,"line_end":268,"column_start":5,"column_end":75}},{"value":"/ ensure that futures have the same [`Error`](TryFuture::Error) type when","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":85600,"byte_end":85675,"line_start":269,"line_end":269,"column_start":5,"column_end":80}},{"value":"/ using [`select!`] or [`join!`].","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":85680,"byte_end":85715,"line_start":270,"line_end":270,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":85720,"byte_end":85723,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":85728,"byte_end":85803,"line_start":272,"line_end":272,"column_start":5,"column_end":80}},{"value":"/ to an [`Err`]. If it resolves to an [`Ok`], panics, or is dropped, then","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":85808,"byte_end":85883,"line_start":273,"line_end":273,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":85888,"byte_end":85935,"line_start":274,"line_end":274,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":85940,"byte_end":85943,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":85948,"byte_end":86023,"line_start":276,"line_end":276,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":86028,"byte_end":86054,"line_start":277,"line_end":277,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":86059,"byte_end":86062,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":86067,"byte_end":86081,"line_start":279,"line_end":279,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":86086,"byte_end":86089,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":86094,"byte_end":86101,"line_start":281,"line_end":281,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":86106,"byte_end":86144,"line_start":282,"line_end":282,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":86149,"byte_end":86152,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":86157,"byte_end":86198,"line_start":284,"line_end":284,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":86203,"byte_end":86249,"line_start":285,"line_end":285,"column_start":5,"column_end":51}},{"value":"/ let future = future.map_err(|x| x + 3);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":86254,"byte_end":86297,"line_start":286,"line_end":286,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(future.await, Err(4));","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":86302,"byte_end":86339,"line_start":287,"line_end":287,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":86344,"byte_end":86353,"line_start":288,"line_end":288,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":86358,"byte_end":86365,"line_start":289,"line_end":289,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":86370,"byte_end":86373,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ Calling [`map_err`](TryFutureExt::map_err) on a successful future has","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":86378,"byte_end":86451,"line_start":291,"line_end":291,"column_start":5,"column_end":78}},{"value":"/ no effect:","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":86456,"byte_end":86470,"line_start":292,"line_end":292,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":86475,"byte_end":86478,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":86483,"byte_end":86490,"line_start":294,"line_end":294,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":86495,"byte_end":86533,"line_start":295,"line_end":295,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":86538,"byte_end":86541,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":86546,"byte_end":86587,"line_start":297,"line_end":297,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":86592,"byte_end":86637,"line_start":298,"line_end":298,"column_start":5,"column_end":50}},{"value":"/ let future = future.map_err(|x| x + 3);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":86642,"byte_end":86685,"line_start":299,"line_end":299,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(future.await, Ok(1));","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":86690,"byte_end":86726,"line_start":300,"line_end":300,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":86731,"byte_end":86740,"line_start":301,"line_end":301,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":86745,"byte_end":86752,"line_start":302,"line_end":302,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":495},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":87857,"byte_end":87865,"line_start":333,"line_end":333,"column_start":8,"column_end":16},"name":"err_into","qualname":"::future::try_future::TryFutureExt::err_into","value":"fn <E> (self) -> ErrInto<Self, E>","parent":{"krate":0,"index":482},"children":[],"decl_id":null,"docs":" Maps this future's [`Error`](TryFuture::Error) to a new error type\n using the [`Into`](std::convert::Into) trait.","sig":null,"attributes":[{"value":"/ Maps this future's [`Error`](TryFuture::Error) to a new error type","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":86960,"byte_end":87030,"line_start":311,"line_end":311,"column_start":5,"column_end":75}},{"value":"/ using the [`Into`](std::convert::Into) trait.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":87035,"byte_end":87084,"line_start":312,"line_end":312,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":87089,"byte_end":87092,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ This method does for futures what the `?`-operator does for","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":87097,"byte_end":87160,"line_start":314,"line_end":314,"column_start":5,"column_end":68}},{"value":"/ [`Result`]: It lets the compiler infer the type of the resulting","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":87165,"byte_end":87233,"line_start":315,"line_end":315,"column_start":5,"column_end":73}},{"value":"/ error. Just as [`map_err`](TryFutureExt::map_err), this is useful for","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":87238,"byte_end":87311,"line_start":316,"line_end":316,"column_start":5,"column_end":78}},{"value":"/ example to ensure that futures have the same [`Error`](TryFuture::Error)","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":87316,"byte_end":87392,"line_start":317,"line_end":317,"column_start":5,"column_end":81}},{"value":"/ type when using [`select!`] or [`join!`].","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":87397,"byte_end":87442,"line_start":318,"line_end":318,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":87447,"byte_end":87450,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":87455,"byte_end":87530,"line_start":320,"line_end":320,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":87535,"byte_end":87561,"line_start":321,"line_end":321,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":87566,"byte_end":87569,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":87574,"byte_end":87588,"line_start":323,"line_end":323,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":87593,"byte_end":87596,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":87601,"byte_end":87608,"line_start":325,"line_end":325,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":87613,"byte_end":87651,"line_start":326,"line_end":326,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":87656,"byte_end":87659,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":87664,"byte_end":87705,"line_start":328,"line_end":328,"column_start":5,"column_end":46}},{"value":"/ let future_err_u8 = async { Err::<(), u8>(1) };","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":87710,"byte_end":87761,"line_start":329,"line_end":329,"column_start":5,"column_end":56}},{"value":"/ let future_err_i32 = future_err_u8.err_into::<i32>();","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":87766,"byte_end":87823,"line_start":330,"line_end":330,"column_start":5,"column_end":62}},{"value":"/ # });","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":87828,"byte_end":87837,"line_start":331,"line_end":331,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":87842,"byte_end":87849,"line_start":332,"line_end":332,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":497},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":88161,"byte_end":88168,"line_start":343,"line_end":343,"column_start":8,"column_end":15},"name":"ok_into","qualname":"::future::try_future::TryFutureExt::ok_into","value":"fn <U> (self) -> OkInto<Self, U>","parent":{"krate":0,"index":482},"children":[],"decl_id":null,"docs":" Maps this future's [`Ok`](TryFuture::Ok) to a new type\n using the [`Into`](std::convert::Into) trait.\n","sig":null,"attributes":[{"value":"/ Maps this future's [`Ok`](TryFuture::Ok) to a new type","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":88041,"byte_end":88099,"line_start":341,"line_end":341,"column_start":5,"column_end":63}},{"value":"/ using the [`Into`](std::convert::Into) trait.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":88104,"byte_end":88153,"line_start":342,"line_end":342,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":499},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":89723,"byte_end":89731,"line_start":387,"line_end":387,"column_start":8,"column_end":16},"name":"and_then","qualname":"::future::try_future::TryFutureExt::and_then","value":"fn <Fut, F> (self, f: F) -> AndThen<Self, Fut, F>","parent":{"krate":0,"index":482},"children":[],"decl_id":null,"docs":" Executes another future after this one resolves successfully. The\n success value is passed to a closure to create this subsequent future.","sig":null,"attributes":[{"value":"/ Executes another future after this one resolves successfully. The","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":88342,"byte_end":88411,"line_start":351,"line_end":351,"column_start":5,"column_end":74}},{"value":"/ success value is passed to a closure to create this subsequent future.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":88416,"byte_end":88490,"line_start":352,"line_end":352,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":88495,"byte_end":88498,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":88503,"byte_end":88578,"line_start":354,"line_end":354,"column_start":5,"column_end":80}},{"value":"/ to an [`Ok`]. If this future resolves to an [`Err`], panics, or is","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":88583,"byte_end":88653,"line_start":355,"line_end":355,"column_start":5,"column_end":75}},{"value":"/ dropped, then the provided closure will never be invoked. The","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":88658,"byte_end":88723,"line_start":356,"line_end":356,"column_start":5,"column_end":70}},{"value":"/ [`Error`](TryFuture::Error) type of this future and the future","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":88728,"byte_end":88794,"line_start":357,"line_end":357,"column_start":5,"column_end":71}},{"value":"/ returned by `f` have to match.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":88799,"byte_end":88833,"line_start":358,"line_end":358,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":88838,"byte_end":88841,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":88846,"byte_end":88921,"line_start":360,"line_end":360,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":88926,"byte_end":88952,"line_start":361,"line_end":361,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":88957,"byte_end":88960,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":88965,"byte_end":88979,"line_start":363,"line_end":363,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":88984,"byte_end":88987,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":88992,"byte_end":88999,"line_start":365,"line_end":365,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":89004,"byte_end":89042,"line_start":366,"line_end":366,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":89047,"byte_end":89050,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":89055,"byte_end":89096,"line_start":368,"line_end":368,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":89101,"byte_end":89146,"line_start":369,"line_end":369,"column_start":5,"column_end":50}},{"value":"/ let future = future.and_then(|x| async move { Ok::<i32, i32>(x + 3) });","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":89151,"byte_end":89226,"line_start":370,"line_end":370,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(future.await, Ok(4));","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":89231,"byte_end":89267,"line_start":371,"line_end":371,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":89272,"byte_end":89281,"line_start":372,"line_end":372,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":89286,"byte_end":89293,"line_start":373,"line_end":373,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":89298,"byte_end":89301,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ Calling [`and_then`](TryFutureExt::and_then) on an errored future has no","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":89306,"byte_end":89382,"line_start":375,"line_end":375,"column_start":5,"column_end":81}},{"value":"/ effect:","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":89387,"byte_end":89398,"line_start":376,"line_end":376,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":89403,"byte_end":89406,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":89411,"byte_end":89418,"line_start":378,"line_end":378,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":89423,"byte_end":89461,"line_start":379,"line_end":379,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":89466,"byte_end":89469,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":89474,"byte_end":89515,"line_start":381,"line_end":381,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":89520,"byte_end":89566,"line_start":382,"line_end":382,"column_start":5,"column_end":51}},{"value":"/ let future = future.and_then(|x| async move { Err::<i32, i32>(x + 3) });","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":89571,"byte_end":89647,"line_start":383,"line_end":383,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(future.await, Err(1));","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":89652,"byte_end":89689,"line_start":384,"line_end":384,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":89694,"byte_end":89703,"line_start":385,"line_end":385,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":89708,"byte_end":89715,"line_start":386,"line_end":386,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":502},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":91352,"byte_end":91359,"line_start":432,"line_end":432,"column_start":8,"column_end":15},"name":"or_else","qualname":"::future::try_future::TryFutureExt::or_else","value":"fn <Fut, F> (self, f: F) -> OrElse<Self, Fut, F>","parent":{"krate":0,"index":482},"children":[],"decl_id":null,"docs":" Executes another future if this one resolves to an error. The\n error value is passed to a closure to create this subsequent future.","sig":null,"attributes":[{"value":"/ Executes another future if this one resolves to an error. The","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":89985,"byte_end":90050,"line_start":396,"line_end":396,"column_start":5,"column_end":70}},{"value":"/ error value is passed to a closure to create this subsequent future.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":90055,"byte_end":90127,"line_start":397,"line_end":397,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":90132,"byte_end":90135,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":90140,"byte_end":90215,"line_start":399,"line_end":399,"column_start":5,"column_end":80}},{"value":"/ to an [`Err`]. If this future resolves to an [`Ok`], panics, or is","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":90220,"byte_end":90290,"line_start":400,"line_end":400,"column_start":5,"column_end":75}},{"value":"/ dropped, then the provided closure will never be invoked. The","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":90295,"byte_end":90360,"line_start":401,"line_end":401,"column_start":5,"column_end":70}},{"value":"/ [`Ok`](TryFuture::Ok) type of this future and the future returned by `f`","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":90365,"byte_end":90441,"line_start":402,"line_end":402,"column_start":5,"column_end":81}},{"value":"/ have to match.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":90446,"byte_end":90464,"line_start":403,"line_end":403,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":90469,"byte_end":90472,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":90477,"byte_end":90552,"line_start":405,"line_end":405,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":90557,"byte_end":90583,"line_start":406,"line_end":406,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":90588,"byte_end":90591,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":90596,"byte_end":90610,"line_start":408,"line_end":408,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":90615,"byte_end":90618,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":90623,"byte_end":90630,"line_start":410,"line_end":410,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":90635,"byte_end":90673,"line_start":411,"line_end":411,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":90678,"byte_end":90681,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":90686,"byte_end":90727,"line_start":413,"line_end":413,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":90732,"byte_end":90778,"line_start":414,"line_end":414,"column_start":5,"column_end":51}},{"value":"/ let future = future.or_else(|x| async move { Err::<i32, i32>(x + 3) });","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":90783,"byte_end":90858,"line_start":415,"line_end":415,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(future.await, Err(4));","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":90863,"byte_end":90900,"line_start":416,"line_end":416,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":90905,"byte_end":90914,"line_start":417,"line_end":417,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":90919,"byte_end":90926,"line_start":418,"line_end":418,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":90931,"byte_end":90934,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ Calling [`or_else`](TryFutureExt::or_else) on a successful future has","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":90939,"byte_end":91012,"line_start":420,"line_end":420,"column_start":5,"column_end":78}},{"value":"/ no effect:","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":91017,"byte_end":91031,"line_start":421,"line_end":421,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":91036,"byte_end":91039,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":91044,"byte_end":91051,"line_start":423,"line_end":423,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":91056,"byte_end":91094,"line_start":424,"line_end":424,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":91099,"byte_end":91102,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":91107,"byte_end":91148,"line_start":426,"line_end":426,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":91153,"byte_end":91198,"line_start":427,"line_end":427,"column_start":5,"column_end":50}},{"value":"/ let future = future.or_else(|x| async move { Ok::<i32, i32>(x + 3) });","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":91203,"byte_end":91277,"line_start":428,"line_end":428,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(future.await, Ok(1));","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":91282,"byte_end":91318,"line_start":429,"line_end":429,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":91323,"byte_end":91332,"line_start":430,"line_end":430,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":91337,"byte_end":91344,"line_start":431,"line_end":431,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":505},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":92335,"byte_end":92345,"line_start":459,"line_end":459,"column_start":8,"column_end":18},"name":"inspect_ok","qualname":"::future::try_future::TryFutureExt::inspect_ok","value":"fn <F> (self, f: F) -> InspectOk<Self, F>","parent":{"krate":0,"index":482},"children":[],"decl_id":null,"docs":" Do something with the success value of a future before passing it on.","sig":null,"attributes":[{"value":"/ Do something with the success value of a future before passing it on.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":91608,"byte_end":91681,"line_start":441,"line_end":441,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":91686,"byte_end":91689,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ When using futures, you'll often chain several of them together.  While","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":91694,"byte_end":91769,"line_start":443,"line_end":443,"column_start":5,"column_end":80}},{"value":"/ working on such code, you might want to check out what's happening at","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":91774,"byte_end":91847,"line_start":444,"line_end":444,"column_start":5,"column_end":78}},{"value":"/ various parts in the pipeline, without consuming the intermediate","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":91852,"byte_end":91921,"line_start":445,"line_end":445,"column_start":5,"column_end":74}},{"value":"/ value. To do that, insert a call to `inspect_ok`.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":91926,"byte_end":91979,"line_start":446,"line_end":446,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":91984,"byte_end":91987,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":91992,"byte_end":92006,"line_start":448,"line_end":448,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":92011,"byte_end":92014,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":92019,"byte_end":92026,"line_start":450,"line_end":450,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":92031,"byte_end":92072,"line_start":451,"line_end":451,"column_start":5,"column_end":46}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":92077,"byte_end":92115,"line_start":452,"line_end":452,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":92120,"byte_end":92123,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ let future = async { Ok::<_, ()>(1) };","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":92128,"byte_end":92170,"line_start":454,"line_end":454,"column_start":5,"column_end":47}},{"value":"/ let new_future = future.inspect_ok(|&x| println!(\"about to resolve: {}\", x));","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":92175,"byte_end":92256,"line_start":455,"line_end":455,"column_start":5,"column_end":86}},{"value":"/ assert_eq!(new_future.await, Ok(1));","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":92261,"byte_end":92301,"line_start":456,"line_end":456,"column_start":5,"column_end":45}},{"value":"/ # });","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":92306,"byte_end":92315,"line_start":457,"line_end":457,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":92320,"byte_end":92327,"line_start":458,"line_end":458,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":507},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":93271,"byte_end":93282,"line_start":485,"line_end":485,"column_start":8,"column_end":19},"name":"inspect_err","qualname":"::future::try_future::TryFutureExt::inspect_err","value":"fn <F> (self, f: F) -> InspectErr<Self, F>","parent":{"krate":0,"index":482},"children":[],"decl_id":null,"docs":" Do something with the error value of a future before passing it on.","sig":null,"attributes":[{"value":"/ Do something with the error value of a future before passing it on.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":92544,"byte_end":92615,"line_start":467,"line_end":467,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":92620,"byte_end":92623,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/ When using futures, you'll often chain several of them together.  While","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":92628,"byte_end":92703,"line_start":469,"line_end":469,"column_start":5,"column_end":80}},{"value":"/ working on such code, you might want to check out what's happening at","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":92708,"byte_end":92781,"line_start":470,"line_end":470,"column_start":5,"column_end":78}},{"value":"/ various parts in the pipeline, without consuming the intermediate","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":92786,"byte_end":92855,"line_start":471,"line_end":471,"column_start":5,"column_end":74}},{"value":"/ value. To do that, insert a call to `inspect_err`.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":92860,"byte_end":92914,"line_start":472,"line_end":472,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":92919,"byte_end":92922,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":92927,"byte_end":92941,"line_start":474,"line_end":474,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":92946,"byte_end":92949,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":92954,"byte_end":92961,"line_start":476,"line_end":476,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":92966,"byte_end":93007,"line_start":477,"line_end":477,"column_start":5,"column_end":46}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":93012,"byte_end":93050,"line_start":478,"line_end":478,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":93055,"byte_end":93058,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ let future = async { Err::<(), _>(1) };","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":93063,"byte_end":93106,"line_start":480,"line_end":480,"column_start":5,"column_end":48}},{"value":"/ let new_future = future.inspect_err(|&x| println!(\"about to error: {}\", x));","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":93111,"byte_end":93191,"line_start":481,"line_end":481,"column_start":5,"column_end":85}},{"value":"/ assert_eq!(new_future.await, Err(1));","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":93196,"byte_end":93237,"line_start":482,"line_end":482,"column_start":5,"column_end":46}},{"value":"/ # });","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":93242,"byte_end":93251,"line_start":483,"line_end":483,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":93256,"byte_end":93263,"line_start":484,"line_end":484,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":509},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":93667,"byte_end":93678,"line_start":497,"line_end":497,"column_start":8,"column_end":19},"name":"try_flatten","qualname":"::future::try_future::TryFutureExt::try_flatten","value":"fn (self) -> TryFlatten<Self, Self::Ok>","parent":{"krate":0,"index":482},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the successful result of this\n future is another future.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the successful result of this","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":93486,"byte_end":93561,"line_start":493,"line_end":493,"column_start":5,"column_end":80}},{"value":"/ future is another future.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":93566,"byte_end":93595,"line_start":494,"line_end":494,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":93600,"byte_end":93603,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to `future.and_then(|x| x)`.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":93608,"byte_end":93659,"line_start":496,"line_end":496,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":510},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":94787,"byte_end":94805,"line_start":530,"line_end":530,"column_start":8,"column_end":26},"name":"try_flatten_stream","qualname":"::future::try_future::TryFutureExt::try_flatten_stream","value":"fn (self) -> TryFlattenStream<Self>","parent":{"krate":0,"index":482},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the successful result of this\n future is a stream.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the successful result of this","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":93843,"byte_end":93918,"line_start":505,"line_end":505,"column_start":5,"column_end":80}},{"value":"/ future is a stream.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":93923,"byte_end":93946,"line_start":506,"line_end":506,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":93951,"byte_end":93954,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ This can be useful when stream initialization is deferred, and it is","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":93959,"byte_end":94031,"line_start":508,"line_end":508,"column_start":5,"column_end":77}},{"value":"/ convenient to work with that stream as if stream was available at the","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":94036,"byte_end":94109,"line_start":509,"line_end":509,"column_start":5,"column_end":78}},{"value":"/ call site.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":94114,"byte_end":94128,"line_start":510,"line_end":510,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":94133,"byte_end":94136,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes this future and returns a wrapped","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":94141,"byte_end":94211,"line_start":512,"line_end":512,"column_start":5,"column_end":75}},{"value":"/ version of it.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":94216,"byte_end":94234,"line_start":513,"line_end":513,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":94239,"byte_end":94242,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":94247,"byte_end":94261,"line_start":515,"line_end":515,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":94266,"byte_end":94269,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":94274,"byte_end":94281,"line_start":517,"line_end":517,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":94286,"byte_end":94327,"line_start":518,"line_end":518,"column_start":5,"column_end":46}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":94332,"byte_end":94370,"line_start":519,"line_end":519,"column_start":5,"column_end":43}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":94375,"byte_end":94421,"line_start":520,"line_end":520,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":94426,"byte_end":94429,"line_start":521,"line_end":521,"column_start":5,"column_end":8}},{"value":"/ let stream_items = vec![17, 18, 19].into_iter().map(Ok);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":94434,"byte_end":94494,"line_start":522,"line_end":522,"column_start":5,"column_end":65}},{"value":"/ let future_of_a_stream = async { Ok::<_, ()>(stream::iter(stream_items)) };","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":94499,"byte_end":94578,"line_start":523,"line_end":523,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":94583,"byte_end":94586,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/ let stream = future_of_a_stream.try_flatten_stream();","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":94591,"byte_end":94648,"line_start":525,"line_end":525,"column_start":5,"column_end":62}},{"value":"/ let list = stream.try_collect::<Vec<_>>().await;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":94653,"byte_end":94705,"line_start":526,"line_end":526,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(list, Ok(vec![17, 18, 19]));","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":94710,"byte_end":94753,"line_start":527,"line_end":527,"column_start":5,"column_end":48}},{"value":"/ # });","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":94758,"byte_end":94767,"line_start":528,"line_end":528,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":94772,"byte_end":94779,"line_start":529,"line_end":529,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":511},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":95802,"byte_end":95816,"line_start":560,"line_end":560,"column_start":8,"column_end":22},"name":"unwrap_or_else","qualname":"::future::try_future::TryFutureExt::unwrap_or_else","value":"fn <F> (self, f: F) -> UnwrapOrElse<Self, F>","parent":{"krate":0,"index":482},"children":[],"decl_id":null,"docs":" Unwraps this future's ouput, producing a future with this future's\n [`Ok`](TryFuture::Ok) type as its\n [`Output`](std::future::Future::Output) type.","sig":null,"attributes":[{"value":"/ Unwraps this future's ouput, producing a future with this future's","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":94972,"byte_end":95042,"line_start":538,"line_end":538,"column_start":5,"column_end":75}},{"value":"/ [`Ok`](TryFuture::Ok) type as its","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":95047,"byte_end":95084,"line_start":539,"line_end":539,"column_start":5,"column_end":42}},{"value":"/ [`Output`](std::future::Future::Output) type.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":95089,"byte_end":95138,"line_start":540,"line_end":540,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":95143,"byte_end":95146,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/ If this future is resolved successfully, the returned future will","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":95151,"byte_end":95220,"line_start":542,"line_end":542,"column_start":5,"column_end":74}},{"value":"/ contain the original future's success value as output. Otherwise, the","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":95225,"byte_end":95298,"line_start":543,"line_end":543,"column_start":5,"column_end":78}},{"value":"/ closure `f` is called with the error value to produce an alternate","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":95303,"byte_end":95373,"line_start":544,"line_end":544,"column_start":5,"column_end":75}},{"value":"/ success value.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":95378,"byte_end":95396,"line_start":545,"line_end":545,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":95401,"byte_end":95404,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ This method is similar to the [`Result::unwrap_or_else`] method.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":95409,"byte_end":95477,"line_start":547,"line_end":547,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":95482,"byte_end":95485,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":95490,"byte_end":95504,"line_start":549,"line_end":549,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":95509,"byte_end":95512,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":95517,"byte_end":95524,"line_start":551,"line_end":551,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":95529,"byte_end":95567,"line_start":552,"line_end":552,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":95572,"byte_end":95575,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":95580,"byte_end":95621,"line_start":554,"line_end":554,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<(), &str>(\"Boom!\") };","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":95626,"byte_end":95678,"line_start":555,"line_end":555,"column_start":5,"column_end":57}},{"value":"/ let future = future.unwrap_or_else(|_| ());","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":95683,"byte_end":95730,"line_start":556,"line_end":556,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(future.await, ());","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":95735,"byte_end":95768,"line_start":557,"line_end":557,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":95773,"byte_end":95782,"line_start":558,"line_end":558,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":95787,"byte_end":95794,"line_start":559,"line_end":559,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":513},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":97016,"byte_end":97027,"line_start":599,"line_end":599,"column_start":8,"column_end":19},"name":"into_future","qualname":"::future::try_future::TryFutureExt::into_future","value":"fn (self) -> IntoFuture<Self>","parent":{"krate":0,"index":482},"children":[],"decl_id":null,"docs":" Wraps a [`TryFuture`] into a type that implements\n [`Future`](std::future::Future).","sig":null,"attributes":[{"value":"/ Wraps a [`TryFuture`] into a type that implements","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":96315,"byte_end":96368,"line_start":578,"line_end":578,"column_start":5,"column_end":58}},{"value":"/ [`Future`](std::future::Future).","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":96373,"byte_end":96409,"line_start":579,"line_end":579,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":96414,"byte_end":96417,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ [`TryFuture`]s currently do not implement the","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":96422,"byte_end":96471,"line_start":581,"line_end":581,"column_start":5,"column_end":54}},{"value":"/ [`Future`](std::future::Future) trait due to limitations of the","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":96476,"byte_end":96543,"line_start":582,"line_end":582,"column_start":5,"column_end":72}},{"value":"/ compiler.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":96548,"byte_end":96561,"line_start":583,"line_end":583,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":96566,"byte_end":96569,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":96574,"byte_end":96588,"line_start":585,"line_end":585,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":96593,"byte_end":96596,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":96601,"byte_end":96608,"line_start":587,"line_end":587,"column_start":5,"column_end":12}},{"value":"/ use futures::future::{Future, TryFuture, TryFutureExt};","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":96613,"byte_end":96672,"line_start":588,"line_end":588,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":96677,"byte_end":96680,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ # type T = i32;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":96685,"byte_end":96704,"line_start":590,"line_end":590,"column_start":5,"column_end":24}},{"value":"/ # type E = ();","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":96709,"byte_end":96727,"line_start":591,"line_end":591,"column_start":5,"column_end":23}},{"value":"/ fn make_try_future() -> impl TryFuture<Ok = T, Error = E> { // ... }","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":96732,"byte_end":96804,"line_start":592,"line_end":592,"column_start":5,"column_end":77}},{"value":"/ # async { Ok::<i32, ()>(1) }","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":96809,"byte_end":96841,"line_start":593,"line_end":593,"column_start":5,"column_end":37}},{"value":"/ # }","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":96846,"byte_end":96853,"line_start":594,"line_end":594,"column_start":5,"column_end":12}},{"value":"/ fn take_future(future: impl Future<Output = Result<T, E>>) { /* ... */ }","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":96858,"byte_end":96934,"line_start":595,"line_end":595,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":96939,"byte_end":96942,"line_start":596,"line_end":596,"column_start":5,"column_end":8}},{"value":"/ take_future(make_try_future().into_future());","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":96947,"byte_end":96996,"line_start":597,"line_end":597,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":97001,"byte_end":97008,"line_start":598,"line_end":598,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":514},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":97235,"byte_end":97249,"line_start":608,"line_end":608,"column_start":8,"column_end":22},"name":"try_poll_unpin","qualname":"::future::try_future::TryFutureExt::try_poll_unpin","value":"fn (&mut self, cx: &mut Context<'_>) -> Poll<Result<Self::Ok, Self::Error>>","parent":{"krate":0,"index":482},"children":[],"decl_id":null,"docs":" A convenience method for calling [`TryFuture::try_poll`] on [`Unpin`]\n future types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`TryFuture::try_poll`] on [`Unpin`]","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":97132,"byte_end":97205,"line_start":606,"line_end":606,"column_start":5,"column_end":78}},{"value":"/ future types.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":97210,"byte_end":97227,"line_start":607,"line_end":607,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":5560},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\lazy.rs","byte_start":105731,"byte_end":105735,"line_start":8,"line_end":8,"column_start":12,"column_end":16},"name":"Lazy","qualname":"::future::lazy::Lazy","value":"Lazy {  }","parent":null,"children":[{"krate":0,"index":5562}],"decl_id":null,"docs":" Future for the [`lazy`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`lazy`] function.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\lazy.rs","byte_start":105597,"byte_end":105634,"line_start":5,"line_end":5,"column_start":1,"column_end":38}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\lazy.rs","byte_start":105652,"byte_end":105719,"line_start":7,"line_end":7,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":541},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\lazy.rs","byte_start":106276,"byte_end":106280,"line_start":34,"line_end":34,"column_start":8,"column_end":12},"name":"lazy","qualname":"::future::lazy::lazy","value":"fn <F, R> (f: F) -> Lazy<F>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future that allows delayed execution of a closure.","sig":null,"attributes":[{"value":"/ Creates a new future that allows delayed execution of a closure.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\lazy.rs","byte_start":105839,"byte_end":105907,"line_start":15,"line_end":15,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\lazy.rs","byte_start":105908,"byte_end":105911,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ The provided closure is only run once the future is polled.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\lazy.rs","byte_start":105912,"byte_end":105975,"line_start":17,"line_end":17,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\lazy.rs","byte_start":105976,"byte_end":105979,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\lazy.rs","byte_start":105980,"byte_end":105994,"line_start":19,"line_end":19,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\lazy.rs","byte_start":105995,"byte_end":105998,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\lazy.rs","byte_start":105999,"byte_end":106006,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\lazy.rs","byte_start":106007,"byte_end":106048,"line_start":22,"line_end":22,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\lazy.rs","byte_start":106049,"byte_end":106073,"line_start":23,"line_end":23,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\lazy.rs","byte_start":106074,"byte_end":106077,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ let a = future::lazy(|_| 1);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\lazy.rs","byte_start":106078,"byte_end":106110,"line_start":25,"line_end":25,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(a.await, 1);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\lazy.rs","byte_start":106111,"byte_end":106138,"line_start":26,"line_end":26,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\lazy.rs","byte_start":106139,"byte_end":106142,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ let b = future::lazy(|_| -> i32 {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\lazy.rs","byte_start":106143,"byte_end":106180,"line_start":28,"line_end":28,"column_start":1,"column_end":38}},{"value":"/     panic!(\"oh no!\")","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\lazy.rs","byte_start":106181,"byte_end":106205,"line_start":29,"line_end":29,"column_start":1,"column_end":25}},{"value":"/ });","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\lazy.rs","byte_start":106206,"byte_end":106213,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ drop(b); // closure is never run","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\lazy.rs","byte_start":106214,"byte_end":106250,"line_start":31,"line_end":31,"column_start":1,"column_end":37}},{"value":"/ # });","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\lazy.rs","byte_start":106251,"byte_end":106260,"line_start":32,"line_end":32,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\lazy.rs","byte_start":106261,"byte_end":106268,"line_start":33,"line_end":33,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":5566},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\pending.rs","byte_start":107046,"byte_end":107053,"line_start":9,"line_end":9,"column_start":12,"column_end":19},"name":"Pending","qualname":"::future::pending::Pending","value":"Pending {  }","parent":null,"children":[{"krate":0,"index":5568}],"decl_id":null,"docs":" Future for the [`pending()`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`pending()`] function.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\pending.rs","byte_start":106907,"byte_end":106949,"line_start":6,"line_end":6,"column_start":1,"column_end":43}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\pending.rs","byte_start":106967,"byte_end":107034,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":568},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\pending.rs","byte_start":107572,"byte_end":107579,"line_start":35,"line_end":35,"column_start":8,"column_end":15},"name":"pending","qualname":"::future::pending::pending","value":"fn <T> () -> Pending<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which never resolves, representing a computation that never\n finishes.","sig":null,"attributes":[{"value":"/ Creates a future which never resolves, representing a computation that never","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\pending.rs","byte_start":107194,"byte_end":107274,"line_start":19,"line_end":19,"column_start":1,"column_end":81}},{"value":"/ finishes.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\pending.rs","byte_start":107275,"byte_end":107288,"line_start":20,"line_end":20,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\pending.rs","byte_start":107289,"byte_end":107292,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ The returned future will forever return [`Poll::Pending`].","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\pending.rs","byte_start":107293,"byte_end":107355,"line_start":22,"line_end":22,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\pending.rs","byte_start":107356,"byte_end":107359,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\pending.rs","byte_start":107360,"byte_end":107374,"line_start":24,"line_end":24,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\pending.rs","byte_start":107375,"byte_end":107378,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\pending.rs","byte_start":107379,"byte_end":107392,"line_start":26,"line_end":26,"column_start":1,"column_end":14}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\pending.rs","byte_start":107393,"byte_end":107434,"line_start":27,"line_end":27,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\pending.rs","byte_start":107435,"byte_end":107459,"line_start":28,"line_end":28,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\pending.rs","byte_start":107460,"byte_end":107463,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ let future = future::pending();","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\pending.rs","byte_start":107464,"byte_end":107499,"line_start":30,"line_end":30,"column_start":1,"column_end":36}},{"value":"/ let () = future.await;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\pending.rs","byte_start":107500,"byte_end":107526,"line_start":31,"line_end":31,"column_start":1,"column_end":27}},{"value":"/ unreachable!();","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\pending.rs","byte_start":107527,"byte_end":107546,"line_start":32,"line_end":32,"column_start":1,"column_end":20}},{"value":"/ # });","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\pending.rs","byte_start":107547,"byte_end":107556,"line_start":33,"line_end":33,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\pending.rs","byte_start":107557,"byte_end":107564,"line_start":34,"line_end":34,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5574},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\maybe_done.rs","byte_start":108347,"byte_end":108353,"line_start":16,"line_end":16,"column_start":5,"column_end":11},"name":"Future","qualname":"::future::maybe_done::MaybeDone::Future","value":"MaybeDone::Future(Fut)","parent":{"krate":0,"index":5572},"children":[],"decl_id":null,"docs":" A not-yet-completed future\n","sig":null,"attributes":[{"value":"/ A not-yet-completed future","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\maybe_done.rs","byte_start":108312,"byte_end":108342,"line_start":15,"line_end":15,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5576},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\maybe_done.rs","byte_start":108414,"byte_end":108418,"line_start":18,"line_end":18,"column_start":5,"column_end":9},"name":"Done","qualname":"::future::maybe_done::MaybeDone::Done","value":"MaybeDone::Done(Fut::Output)","parent":{"krate":0,"index":5572},"children":[],"decl_id":null,"docs":" The output of the completed future\n","sig":null,"attributes":[{"value":"/ The output of the completed future","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\maybe_done.rs","byte_start":108371,"byte_end":108409,"line_start":17,"line_end":17,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5579},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\maybe_done.rs","byte_start":108580,"byte_end":108584,"line_start":21,"line_end":21,"column_start":5,"column_end":9},"name":"Gone","qualname":"::future::maybe_done::MaybeDone::Gone","value":"MaybeDone::Gone","parent":{"krate":0,"index":5572},"children":[],"decl_id":null,"docs":" The empty variant after the result of a [`MaybeDone`] has been\n taken using the [`take_output`](MaybeDone::take_output) method.\n","sig":null,"attributes":[{"value":"/ The empty variant after the result of a [`MaybeDone`] has been","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\maybe_done.rs","byte_start":108437,"byte_end":108503,"line_start":19,"line_end":19,"column_start":5,"column_end":71}},{"value":"/ taken using the [`take_output`](MaybeDone::take_output) method.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\maybe_done.rs","byte_start":108508,"byte_end":108575,"line_start":20,"line_end":20,"column_start":5,"column_end":72}}]},{"kind":"Enum","id":{"krate":0,"index":5572},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\maybe_done.rs","byte_start":108283,"byte_end":108292,"line_start":14,"line_end":14,"column_start":10,"column_end":19},"name":"MaybeDone","qualname":"::future::maybe_done::MaybeDone","value":"MaybeDone::{Future, Done, Gone}","parent":null,"children":[{"krate":0,"index":5574},{"krate":0,"index":5576},{"krate":0,"index":5579}],"decl_id":null,"docs":" A future that may have completed.","sig":null,"attributes":[{"value":"pin(__private())","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\maybe_done.rs","byte_start":108242,"byte_end":108256,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":5611},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\maybe_done.rs","byte_start":108283,"byte_end":108292,"line_start":14,"line_end":14,"column_start":10,"column_end":19},"name":"__MaybeDone","qualname":"::future::maybe_done::_::__MaybeDone","value":"__MaybeDone {  }","parent":null,"children":[{"krate":0,"index":5614},{"krate":0,"index":5615}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":594},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\maybe_done.rs","byte_start":109050,"byte_end":109060,"line_start":41,"line_end":41,"column_start":8,"column_end":18},"name":"maybe_done","qualname":"::future::maybe_done::maybe_done","value":"fn <Fut> (future: Fut) -> MaybeDone<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a future into a `MaybeDone`","sig":null,"attributes":[{"value":"/ Wraps a future into a `MaybeDone`","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\maybe_done.rs","byte_start":108589,"byte_end":108626,"line_start":24,"line_end":24,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\maybe_done.rs","byte_start":108627,"byte_end":108630,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\maybe_done.rs","byte_start":108631,"byte_end":108645,"line_start":26,"line_end":26,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\maybe_done.rs","byte_start":108646,"byte_end":108649,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\maybe_done.rs","byte_start":108650,"byte_end":108657,"line_start":28,"line_end":28,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\maybe_done.rs","byte_start":108658,"byte_end":108699,"line_start":29,"line_end":29,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\maybe_done.rs","byte_start":108700,"byte_end":108724,"line_start":30,"line_end":30,"column_start":1,"column_end":25}},{"value":"/ use futures::pin_mut;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\maybe_done.rs","byte_start":108725,"byte_end":108750,"line_start":31,"line_end":31,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\maybe_done.rs","byte_start":108751,"byte_end":108754,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ let future = future::maybe_done(async { 5 });","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\maybe_done.rs","byte_start":108755,"byte_end":108804,"line_start":33,"line_end":33,"column_start":1,"column_end":50}},{"value":"/ pin_mut!(future);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\maybe_done.rs","byte_start":108805,"byte_end":108826,"line_start":34,"line_end":34,"column_start":1,"column_end":22}},{"value":"/ assert_eq!(future.as_mut().take_output(), None);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\maybe_done.rs","byte_start":108827,"byte_end":108879,"line_start":35,"line_end":35,"column_start":1,"column_end":53}},{"value":"/ let () = future.as_mut().await;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\maybe_done.rs","byte_start":108880,"byte_end":108915,"line_start":36,"line_end":36,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(future.as_mut().take_output(), Some(5));","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\maybe_done.rs","byte_start":108916,"byte_end":108971,"line_start":37,"line_end":37,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(future.as_mut().take_output(), None);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\maybe_done.rs","byte_start":108972,"byte_end":109024,"line_start":38,"line_end":38,"column_start":1,"column_end":53}},{"value":"/ # });","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\maybe_done.rs","byte_start":109025,"byte_end":109034,"line_start":39,"line_end":39,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\maybe_done.rs","byte_start":109035,"byte_end":109042,"line_start":40,"line_end":40,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":5632},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\maybe_done.rs","byte_start":109492,"byte_end":109502,"line_start":52,"line_end":52,"column_start":12,"column_end":22},"name":"output_mut","qualname":"<MaybeDone<Fut>>::output_mut","value":"fn (self: Pin<&mut Self>) -> Option<&mut Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Returns an [`Option`] containing a mutable reference to the output of the future.\n The output of this method will be [`Some`] if and only if the inner\n future has been completed and [`take_output`](MaybeDone::take_output)\n has not yet been called.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\maybe_done.rs","byte_start":109471,"byte_end":109480,"line_start":51,"line_end":51,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":598},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\maybe_done.rs","byte_start":109816,"byte_end":109827,"line_start":63,"line_end":63,"column_start":12,"column_end":23},"name":"take_output","qualname":"<MaybeDone<Fut>>::take_output","value":"fn (self: Pin<&mut Self>) -> Option<Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to take the output of a `MaybeDone` without driving it\n towards completion.\n","sig":null,"attributes":[{"value":"/ Attempt to take the output of a `MaybeDone` without driving it","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\maybe_done.rs","byte_start":109696,"byte_end":109762,"line_start":60,"line_end":60,"column_start":5,"column_end":71}},{"value":"/ towards completion.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\maybe_done.rs","byte_start":109767,"byte_end":109790,"line_start":61,"line_end":61,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\maybe_done.rs","byte_start":109795,"byte_end":109804,"line_start":62,"line_end":62,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5636},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_maybe_done.rs","byte_start":111782,"byte_end":111788,"line_start":16,"line_end":16,"column_start":5,"column_end":11},"name":"Future","qualname":"::future::try_maybe_done::TryMaybeDone::Future","value":"TryMaybeDone::Future(Fut)","parent":{"krate":0,"index":5634},"children":[],"decl_id":null,"docs":" A not-yet-completed future\n","sig":null,"attributes":[{"value":"/ A not-yet-completed future","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_maybe_done.rs","byte_start":111747,"byte_end":111777,"line_start":15,"line_end":15,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5638},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_maybe_done.rs","byte_start":111849,"byte_end":111853,"line_start":18,"line_end":18,"column_start":5,"column_end":9},"name":"Done","qualname":"::future::try_maybe_done::TryMaybeDone::Done","value":"TryMaybeDone::Done(Fut::Ok)","parent":{"krate":0,"index":5634},"children":[],"decl_id":null,"docs":" The output of the completed future\n","sig":null,"attributes":[{"value":"/ The output of the completed future","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_maybe_done.rs","byte_start":111806,"byte_end":111844,"line_start":17,"line_end":17,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5641},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_maybe_done.rs","byte_start":112061,"byte_end":112065,"line_start":22,"line_end":22,"column_start":5,"column_end":9},"name":"Gone","qualname":"::future::try_maybe_done::TryMaybeDone::Gone","value":"TryMaybeDone::Gone","parent":{"krate":0,"index":5634},"children":[],"decl_id":null,"docs":" The empty variant after the result of a [`TryMaybeDone`] has been\n taken using the [`take_output`](TryMaybeDone::take_output) method,\n or if the future returned an error.\n","sig":null,"attributes":[{"value":"/ The empty variant after the result of a [`TryMaybeDone`] has been","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_maybe_done.rs","byte_start":111868,"byte_end":111937,"line_start":19,"line_end":19,"column_start":5,"column_end":74}},{"value":"/ taken using the [`take_output`](TryMaybeDone::take_output) method,","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_maybe_done.rs","byte_start":111942,"byte_end":112012,"line_start":20,"line_end":20,"column_start":5,"column_end":75}},{"value":"/ or if the future returned an error.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_maybe_done.rs","byte_start":112017,"byte_end":112056,"line_start":21,"line_end":21,"column_start":5,"column_end":44}}]},{"kind":"Enum","id":{"krate":0,"index":5634},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_maybe_done.rs","byte_start":111712,"byte_end":111724,"line_start":14,"line_end":14,"column_start":10,"column_end":22},"name":"TryMaybeDone","qualname":"::future::try_maybe_done::TryMaybeDone","value":"TryMaybeDone::{Future, Done, Gone}","parent":null,"children":[{"krate":0,"index":5636},{"krate":0,"index":5638},{"krate":0,"index":5641}],"decl_id":null,"docs":" A future that may have completed with an error.","sig":null,"attributes":[{"value":"pin(__private())","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_maybe_done.rs","byte_start":111671,"byte_end":111685,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":5673},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_maybe_done.rs","byte_start":111712,"byte_end":111724,"line_start":14,"line_end":14,"column_start":10,"column_end":22},"name":"__TryMaybeDone","qualname":"::future::try_maybe_done::_::__TryMaybeDone","value":"__TryMaybeDone {  }","parent":null,"children":[{"krate":0,"index":5676},{"krate":0,"index":5677}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":621},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_maybe_done.rs","byte_start":112118,"byte_end":112132,"line_start":26,"line_end":26,"column_start":8,"column_end":22},"name":"try_maybe_done","qualname":"::future::try_maybe_done::try_maybe_done","value":"fn <Fut> (future: Fut) -> TryMaybeDone<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a future into a `TryMaybeDone`\n","sig":null,"attributes":[{"value":"/ Wraps a future into a `TryMaybeDone`","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_maybe_done.rs","byte_start":112070,"byte_end":112110,"line_start":25,"line_end":25,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":5694},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_maybe_done.rs","byte_start":112590,"byte_end":112600,"line_start":37,"line_end":37,"column_start":12,"column_end":22},"name":"output_mut","qualname":"<TryMaybeDone<Fut>>::output_mut","value":"fn (self: Pin<&mut Self>) -> Option<&mut Fut::Ok>","parent":null,"children":[],"decl_id":null,"docs":" Returns an [`Option`] containing a mutable reference to the output of the future.\n The output of this method will be [`Some`] if and only if the inner\n future has completed successfully and [`take_output`](TryMaybeDone::take_output)\n has not yet been called.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_maybe_done.rs","byte_start":112569,"byte_end":112578,"line_start":36,"line_end":36,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":625},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_maybe_done.rs","byte_start":112916,"byte_end":112927,"line_start":48,"line_end":48,"column_start":12,"column_end":23},"name":"take_output","qualname":"<TryMaybeDone<Fut>>::take_output","value":"fn (self: Pin<&mut Self>) -> Option<Fut::Ok>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to take the output of a `TryMaybeDone` without driving it\n towards completion.\n","sig":null,"attributes":[{"value":"/ Attempt to take the output of a `TryMaybeDone` without driving it","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_maybe_done.rs","byte_start":112793,"byte_end":112862,"line_start":45,"line_end":45,"column_start":5,"column_end":74}},{"value":"/ towards completion.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_maybe_done.rs","byte_start":112867,"byte_end":112890,"line_start":46,"line_end":46,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_maybe_done.rs","byte_start":112895,"byte_end":112904,"line_start":47,"line_end":47,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":5696},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\option.rs","byte_start":115453,"byte_end":115465,"line_start":28,"line_end":28,"column_start":12,"column_end":24},"name":"OptionFuture","qualname":"::future::option::OptionFuture","value":"","parent":null,"children":[],"decl_id":null,"docs":" A future representing a value which may or may not be present.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\option.rs","byte_start":115374,"byte_end":115441,"line_start":27,"line_end":27,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\option.rs","byte_start":115335,"byte_end":115349,"line_start":25,"line_end":25,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":5717},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\option.rs","byte_start":115453,"byte_end":115465,"line_start":28,"line_end":28,"column_start":12,"column_end":24},"name":"__OptionFuture","qualname":"::future::option::_::__OptionFuture","value":"__OptionFuture {  }","parent":null,"children":[{"krate":0,"index":5720},{"krate":0,"index":5721}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":662},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\poll_fn.rs","byte_start":116435,"byte_end":116441,"line_start":10,"line_end":10,"column_start":12,"column_end":18},"name":"PollFn","qualname":"::future::poll_fn::PollFn","value":"PollFn {  }","parent":null,"children":[{"krate":0,"index":664}],"decl_id":null,"docs":" Future for the [`poll_fn`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`poll_fn`] function.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\poll_fn.rs","byte_start":116315,"byte_end":116355,"line_start":8,"line_end":8,"column_start":1,"column_end":41}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\poll_fn.rs","byte_start":116356,"byte_end":116423,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":667},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\poll_fn.rs","byte_start":117028,"byte_end":117035,"line_start":35,"line_end":35,"column_start":8,"column_end":15},"name":"poll_fn","qualname":"::future::poll_fn::poll_fn","value":"fn <T, F> (f: F) -> PollFn<F>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future wrapping around a function returning [`Poll`].","sig":null,"attributes":[{"value":"/ Creates a new future wrapping around a function returning [`Poll`].","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\poll_fn.rs","byte_start":116492,"byte_end":116563,"line_start":16,"line_end":16,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\poll_fn.rs","byte_start":116564,"byte_end":116567,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Polling the returned future delegates to the wrapped function.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\poll_fn.rs","byte_start":116568,"byte_end":116634,"line_start":18,"line_end":18,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\poll_fn.rs","byte_start":116635,"byte_end":116638,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\poll_fn.rs","byte_start":116639,"byte_end":116653,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\poll_fn.rs","byte_start":116654,"byte_end":116657,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\poll_fn.rs","byte_start":116658,"byte_end":116665,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\poll_fn.rs","byte_start":116666,"byte_end":116707,"line_start":23,"line_end":23,"column_start":1,"column_end":42}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\poll_fn.rs","byte_start":116708,"byte_end":116741,"line_start":24,"line_end":24,"column_start":1,"column_end":34}},{"value":"/ use futures::task::{Context, Poll};","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\poll_fn.rs","byte_start":116742,"byte_end":116781,"line_start":25,"line_end":25,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\poll_fn.rs","byte_start":116782,"byte_end":116785,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ fn read_line(_cx: &mut Context<'_>) -> Poll<String> {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\poll_fn.rs","byte_start":116786,"byte_end":116843,"line_start":27,"line_end":27,"column_start":1,"column_end":58}},{"value":"/     Poll::Ready(\"Hello, World!\".into())","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\poll_fn.rs","byte_start":116844,"byte_end":116887,"line_start":28,"line_end":28,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\poll_fn.rs","byte_start":116888,"byte_end":116893,"line_start":29,"line_end":29,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\poll_fn.rs","byte_start":116894,"byte_end":116897,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ let read_future = poll_fn(read_line);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\poll_fn.rs","byte_start":116898,"byte_end":116939,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(read_future.await, \"Hello, World!\".to_owned());","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\poll_fn.rs","byte_start":116940,"byte_end":117002,"line_start":32,"line_end":32,"column_start":1,"column_end":63}},{"value":"/ # });","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\poll_fn.rs","byte_start":117003,"byte_end":117012,"line_start":33,"line_end":33,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\poll_fn.rs","byte_start":117013,"byte_end":117020,"line_start":34,"line_end":34,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":5743},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\ready.rs","byte_start":117755,"byte_end":117760,"line_start":8,"line_end":8,"column_start":12,"column_end":17},"name":"Ready","qualname":"::future::ready::Ready","value":"","parent":null,"children":[],"decl_id":null,"docs":" Future for the [`ready`](ready()) function.\n","sig":null,"attributes":[{"value":"/ Future for the [`ready`](ready()) function.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\ready.rs","byte_start":117604,"byte_end":117651,"line_start":5,"line_end":5,"column_start":1,"column_end":48}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\ready.rs","byte_start":117676,"byte_end":117743,"line_start":7,"line_end":7,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":691},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\ready.rs","byte_start":117883,"byte_end":117893,"line_start":13,"line_end":13,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Ready<T>>::into_inner","value":"fn (mut self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Unwraps the value from this immediately ready future.\n","sig":null,"attributes":[{"value":"/ Unwraps the value from this immediately ready future.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\ready.rs","byte_start":117800,"byte_end":117857,"line_start":11,"line_end":11,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\ready.rs","byte_start":117862,"byte_end":117871,"line_start":12,"line_end":12,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":701},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\ready.rs","byte_start":118559,"byte_end":118564,"line_start":47,"line_end":47,"column_start":8,"column_end":13},"name":"ready","qualname":"::future::ready::ready","value":"fn <T> (t: T) -> Ready<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future that is immediately ready with a value.","sig":null,"attributes":[{"value":"/ Creates a future that is immediately ready with a value.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\ready.rs","byte_start":118313,"byte_end":118373,"line_start":35,"line_end":35,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\ready.rs","byte_start":118374,"byte_end":118377,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\ready.rs","byte_start":118378,"byte_end":118392,"line_start":37,"line_end":37,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\ready.rs","byte_start":118393,"byte_end":118396,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\ready.rs","byte_start":118397,"byte_end":118404,"line_start":39,"line_end":39,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\ready.rs","byte_start":118405,"byte_end":118446,"line_start":40,"line_end":40,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\ready.rs","byte_start":118447,"byte_end":118471,"line_start":41,"line_end":41,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\ready.rs","byte_start":118472,"byte_end":118475,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(1);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\ready.rs","byte_start":118476,"byte_end":118505,"line_start":43,"line_end":43,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(a.await, 1);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\ready.rs","byte_start":118506,"byte_end":118533,"line_start":44,"line_end":44,"column_start":1,"column_end":28}},{"value":"/ # });","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\ready.rs","byte_start":118534,"byte_end":118543,"line_start":45,"line_end":45,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\ready.rs","byte_start":118544,"byte_end":118551,"line_start":46,"line_end":46,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":703},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\ready.rs","byte_start":118876,"byte_end":118878,"line_start":63,"line_end":63,"column_start":8,"column_end":10},"name":"ok","qualname":"::future::ready::ok","value":"fn <T, E> (t: T) -> Ready<Result<T, E>>","parent":null,"children":[],"decl_id":null,"docs":" Create a future that is immediately ready with a success value.","sig":null,"attributes":[{"value":"/ Create a future that is immediately ready with a success value.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\ready.rs","byte_start":118610,"byte_end":118677,"line_start":51,"line_end":51,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\ready.rs","byte_start":118678,"byte_end":118681,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\ready.rs","byte_start":118682,"byte_end":118696,"line_start":53,"line_end":53,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\ready.rs","byte_start":118697,"byte_end":118700,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\ready.rs","byte_start":118701,"byte_end":118708,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\ready.rs","byte_start":118709,"byte_end":118750,"line_start":56,"line_end":56,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\ready.rs","byte_start":118751,"byte_end":118775,"line_start":57,"line_end":57,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\ready.rs","byte_start":118776,"byte_end":118779,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ let a = future::ok::<i32, i32>(1);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\ready.rs","byte_start":118780,"byte_end":118818,"line_start":59,"line_end":59,"column_start":1,"column_end":39}},{"value":"/ assert_eq!(a.await, Ok(1));","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\ready.rs","byte_start":118819,"byte_end":118850,"line_start":60,"line_end":60,"column_start":1,"column_end":32}},{"value":"/ # });","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\ready.rs","byte_start":118851,"byte_end":118860,"line_start":61,"line_end":61,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\ready.rs","byte_start":118861,"byte_end":118868,"line_start":62,"line_end":62,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":706},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\ready.rs","byte_start":119209,"byte_end":119212,"line_start":79,"line_end":79,"column_start":8,"column_end":11},"name":"err","qualname":"::future::ready::err","value":"fn <T, E> (err: E) -> Ready<Result<T, E>>","parent":null,"children":[],"decl_id":null,"docs":" Create a future that is immediately ready with an error value.","sig":null,"attributes":[{"value":"/ Create a future that is immediately ready with an error value.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\ready.rs","byte_start":118942,"byte_end":119008,"line_start":67,"line_end":67,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\ready.rs","byte_start":119009,"byte_end":119012,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\ready.rs","byte_start":119013,"byte_end":119027,"line_start":69,"line_end":69,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\ready.rs","byte_start":119028,"byte_end":119031,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\ready.rs","byte_start":119032,"byte_end":119039,"line_start":71,"line_end":71,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\ready.rs","byte_start":119040,"byte_end":119081,"line_start":72,"line_end":72,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\ready.rs","byte_start":119082,"byte_end":119106,"line_start":73,"line_end":73,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\ready.rs","byte_start":119107,"byte_end":119110,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ let a = future::err::<i32, i32>(1);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\ready.rs","byte_start":119111,"byte_end":119150,"line_start":75,"line_end":75,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(a.await, Err(1));","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\ready.rs","byte_start":119151,"byte_end":119183,"line_start":76,"line_end":76,"column_start":1,"column_end":33}},{"value":"/ # });","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\ready.rs","byte_start":119184,"byte_end":119193,"line_start":77,"line_end":77,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\ready.rs","byte_start":119194,"byte_end":119201,"line_start":78,"line_end":78,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":5845},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join.rs","byte_start":119677,"byte_end":119691,"line_start":18,"line_end":18,"column_start":9,"column_end":23},"name":"Join","qualname":"::future::join::Join","value":"Join {  }","parent":null,"children":[{"krate":0,"index":5848},{"krate":0,"index":5849}],"decl_id":null,"docs":" Future for the [`join`](join()) function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join.rs","byte_start":119677,"byte_end":119691,"line_start":18,"line_end":18,"column_start":9,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":5870},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join.rs","byte_start":119677,"byte_end":119691,"line_start":18,"line_end":18,"column_start":9,"column_end":23},"name":"__Join","qualname":"::future::join::_::__Join","value":"__Join {  }","parent":null,"children":[{"krate":0,"index":5874},{"krate":0,"index":5875},{"krate":0,"index":5876}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5897},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join.rs","byte_start":119677,"byte_end":119691,"line_start":18,"line_end":18,"column_start":9,"column_end":23},"name":"Join3","qualname":"::future::join::Join3","value":"Join3 {  }","parent":null,"children":[{"krate":0,"index":5901},{"krate":0,"index":5902},{"krate":0,"index":5903}],"decl_id":null,"docs":" Future for the [`join3`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join.rs","byte_start":119677,"byte_end":119691,"line_start":18,"line_end":18,"column_start":9,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":5929},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join.rs","byte_start":119677,"byte_end":119691,"line_start":18,"line_end":18,"column_start":9,"column_end":23},"name":"__Join3","qualname":"::future::join::_::__Join3","value":"__Join3 {  }","parent":null,"children":[{"krate":0,"index":5934},{"krate":0,"index":5935},{"krate":0,"index":5936},{"krate":0,"index":5937}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5963},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join.rs","byte_start":119677,"byte_end":119691,"line_start":18,"line_end":18,"column_start":9,"column_end":23},"name":"Join4","qualname":"::future::join::Join4","value":"Join4 {  }","parent":null,"children":[{"krate":0,"index":5968},{"krate":0,"index":5969},{"krate":0,"index":5970},{"krate":0,"index":5971}],"decl_id":null,"docs":" Future for the [`join4`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join.rs","byte_start":119677,"byte_end":119691,"line_start":18,"line_end":18,"column_start":9,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":6002},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join.rs","byte_start":119677,"byte_end":119691,"line_start":18,"line_end":18,"column_start":9,"column_end":23},"name":"__Join4","qualname":"::future::join::_::__Join4","value":"__Join4 {  }","parent":null,"children":[{"krate":0,"index":6008},{"krate":0,"index":6009},{"krate":0,"index":6010},{"krate":0,"index":6011},{"krate":0,"index":6012}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6043},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join.rs","byte_start":119677,"byte_end":119691,"line_start":18,"line_end":18,"column_start":9,"column_end":23},"name":"Join5","qualname":"::future::join::Join5","value":"Join5 {  }","parent":null,"children":[{"krate":0,"index":6049},{"krate":0,"index":6050},{"krate":0,"index":6051},{"krate":0,"index":6052},{"krate":0,"index":6053}],"decl_id":null,"docs":" Future for the [`join5`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join.rs","byte_start":119677,"byte_end":119691,"line_start":18,"line_end":18,"column_start":9,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":6089},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join.rs","byte_start":119677,"byte_end":119691,"line_start":18,"line_end":18,"column_start":9,"column_end":23},"name":"__Join5","qualname":"::future::join::_::__Join5","value":"__Join5 {  }","parent":null,"children":[{"krate":0,"index":6096},{"krate":0,"index":6097},{"krate":0,"index":6098},{"krate":0,"index":6099},{"krate":0,"index":6100},{"krate":0,"index":6101}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":729},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join.rs","byte_start":122327,"byte_end":122331,"line_start":111,"line_end":111,"column_start":8,"column_end":12},"name":"join","qualname":"::future::join::join","value":"fn <Fut1, Fut2> (future1: Fut1, future2: Fut2) -> Join<Fut1, Fut2>","parent":null,"children":[],"decl_id":null,"docs":" Joins the result of two futures, waiting for them both to complete.","sig":null,"attributes":[{"value":"/ Joins the result of two futures, waiting for them both to complete.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join.rs","byte_start":121750,"byte_end":121821,"line_start":90,"line_end":90,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join.rs","byte_start":121822,"byte_end":121825,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits both futures to","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join.rs","byte_start":121826,"byte_end":121897,"line_start":92,"line_end":92,"column_start":1,"column_end":72}},{"value":"/ complete. The returned future will finish with a tuple of both results.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join.rs","byte_start":121898,"byte_end":121973,"line_start":93,"line_end":93,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join.rs","byte_start":121974,"byte_end":121977,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the passed futures and returns a","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join.rs","byte_start":121978,"byte_end":122047,"line_start":95,"line_end":95,"column_start":1,"column_end":70}},{"value":"/ wrapped version of it.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join.rs","byte_start":122048,"byte_end":122074,"line_start":96,"line_end":96,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join.rs","byte_start":122075,"byte_end":122078,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join.rs","byte_start":122079,"byte_end":122093,"line_start":98,"line_end":98,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join.rs","byte_start":122094,"byte_end":122097,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join.rs","byte_start":122098,"byte_end":122105,"line_start":100,"line_end":100,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join.rs","byte_start":122106,"byte_end":122147,"line_start":101,"line_end":101,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join.rs","byte_start":122148,"byte_end":122172,"line_start":102,"line_end":102,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join.rs","byte_start":122173,"byte_end":122176,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join.rs","byte_start":122177,"byte_end":122201,"line_start":104,"line_end":104,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join.rs","byte_start":122202,"byte_end":122226,"line_start":105,"line_end":105,"column_start":1,"column_end":25}},{"value":"/ let pair = future::join(a, b);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join.rs","byte_start":122227,"byte_end":122261,"line_start":106,"line_end":106,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join.rs","byte_start":122262,"byte_end":122265,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pair.await, (1, 2));","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join.rs","byte_start":122266,"byte_end":122301,"line_start":108,"line_end":108,"column_start":1,"column_end":36}},{"value":"/ # });","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join.rs","byte_start":122302,"byte_end":122311,"line_start":109,"line_end":109,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join.rs","byte_start":122312,"byte_end":122319,"line_start":110,"line_end":110,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":732},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join.rs","byte_start":122877,"byte_end":122882,"line_start":136,"line_end":136,"column_start":8,"column_end":13},"name":"join3","qualname":"::future::join::join3","value":"fn <Fut1, Fut2, Fut3> (future1: Fut1, future2: Fut2, future3: Fut3) -> Join3<Fut1, Fut2, Fut3>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`join`](join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`join`](join()), but with more futures.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join.rs","byte_start":122538,"byte_end":122590,"line_start":120,"line_end":120,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join.rs","byte_start":122591,"byte_end":122594,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join.rs","byte_start":122595,"byte_end":122609,"line_start":122,"line_end":122,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join.rs","byte_start":122610,"byte_end":122613,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join.rs","byte_start":122614,"byte_end":122621,"line_start":124,"line_end":124,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join.rs","byte_start":122622,"byte_end":122663,"line_start":125,"line_end":125,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join.rs","byte_start":122664,"byte_end":122688,"line_start":126,"line_end":126,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join.rs","byte_start":122689,"byte_end":122692,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join.rs","byte_start":122693,"byte_end":122717,"line_start":128,"line_end":128,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join.rs","byte_start":122718,"byte_end":122742,"line_start":129,"line_end":129,"column_start":1,"column_end":25}},{"value":"/ let c = async { 3 };","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join.rs","byte_start":122743,"byte_end":122767,"line_start":130,"line_end":130,"column_start":1,"column_end":25}},{"value":"/ let tuple = future::join3(a, b, c);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join.rs","byte_start":122768,"byte_end":122807,"line_start":131,"line_end":131,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join.rs","byte_start":122808,"byte_end":122811,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, (1, 2, 3));","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join.rs","byte_start":122812,"byte_end":122851,"line_start":133,"line_end":133,"column_start":1,"column_end":40}},{"value":"/ # });","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join.rs","byte_start":122852,"byte_end":122861,"line_start":134,"line_end":134,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join.rs","byte_start":122862,"byte_end":122869,"line_start":135,"line_end":135,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":736},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join.rs","byte_start":123465,"byte_end":123470,"line_start":166,"line_end":166,"column_start":8,"column_end":13},"name":"join4","qualname":"::future::join::join4","value":"fn <Fut1, Fut2, Fut3, Fut4> (future1: Fut1, future2: Fut2, future3: Fut3, future4: Fut4) -> Join4<Fut1, Fut2, Fut3, Fut4>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`join`](join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`join`](join()), but with more futures.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join.rs","byte_start":123095,"byte_end":123147,"line_start":149,"line_end":149,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join.rs","byte_start":123148,"byte_end":123151,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join.rs","byte_start":123152,"byte_end":123166,"line_start":151,"line_end":151,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join.rs","byte_start":123167,"byte_end":123170,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join.rs","byte_start":123171,"byte_end":123178,"line_start":153,"line_end":153,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join.rs","byte_start":123179,"byte_end":123220,"line_start":154,"line_end":154,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join.rs","byte_start":123221,"byte_end":123245,"line_start":155,"line_end":155,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join.rs","byte_start":123246,"byte_end":123249,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join.rs","byte_start":123250,"byte_end":123274,"line_start":157,"line_end":157,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join.rs","byte_start":123275,"byte_end":123299,"line_start":158,"line_end":158,"column_start":1,"column_end":25}},{"value":"/ let c = async { 3 };","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join.rs","byte_start":123300,"byte_end":123324,"line_start":159,"line_end":159,"column_start":1,"column_end":25}},{"value":"/ let d = async { 4 };","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join.rs","byte_start":123325,"byte_end":123349,"line_start":160,"line_end":160,"column_start":1,"column_end":25}},{"value":"/ let tuple = future::join4(a, b, c, d);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join.rs","byte_start":123350,"byte_end":123392,"line_start":161,"line_end":161,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join.rs","byte_start":123393,"byte_end":123396,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, (1, 2, 3, 4));","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join.rs","byte_start":123397,"byte_end":123439,"line_start":163,"line_end":163,"column_start":1,"column_end":43}},{"value":"/ # });","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join.rs","byte_start":123440,"byte_end":123449,"line_start":164,"line_end":164,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join.rs","byte_start":123450,"byte_end":123457,"line_start":165,"line_end":165,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":741},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join.rs","byte_start":124142,"byte_end":124147,"line_start":199,"line_end":199,"column_start":8,"column_end":13},"name":"join5","qualname":"::future::join::join5","value":"fn <Fut1, Fut2, Fut3, Fut4, Fut5> (future1: Fut1, future2: Fut2, future3: Fut3, future4: Fut4, future5: Fut5) -> Join5<Fut1, Fut2, Fut3, Fut4, Fut5>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`join`](join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`join`](join()), but with more futures.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join.rs","byte_start":123741,"byte_end":123793,"line_start":181,"line_end":181,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join.rs","byte_start":123794,"byte_end":123797,"line_start":182,"line_end":182,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join.rs","byte_start":123798,"byte_end":123812,"line_start":183,"line_end":183,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join.rs","byte_start":123813,"byte_end":123816,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join.rs","byte_start":123817,"byte_end":123824,"line_start":185,"line_end":185,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join.rs","byte_start":123825,"byte_end":123866,"line_start":186,"line_end":186,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join.rs","byte_start":123867,"byte_end":123891,"line_start":187,"line_end":187,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join.rs","byte_start":123892,"byte_end":123895,"line_start":188,"line_end":188,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join.rs","byte_start":123896,"byte_end":123920,"line_start":189,"line_end":189,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join.rs","byte_start":123921,"byte_end":123945,"line_start":190,"line_end":190,"column_start":1,"column_end":25}},{"value":"/ let c = async { 3 };","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join.rs","byte_start":123946,"byte_end":123970,"line_start":191,"line_end":191,"column_start":1,"column_end":25}},{"value":"/ let d = async { 4 };","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join.rs","byte_start":123971,"byte_end":123995,"line_start":192,"line_end":192,"column_start":1,"column_end":25}},{"value":"/ let e = async { 5 };","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join.rs","byte_start":123996,"byte_end":124020,"line_start":193,"line_end":193,"column_start":1,"column_end":25}},{"value":"/ let tuple = future::join5(a, b, c, d, e);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join.rs","byte_start":124021,"byte_end":124066,"line_start":194,"line_end":194,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join.rs","byte_start":124067,"byte_end":124070,"line_start":195,"line_end":195,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, (1, 2, 3, 4, 5));","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join.rs","byte_start":124071,"byte_end":124116,"line_start":196,"line_end":196,"column_start":1,"column_end":46}},{"value":"/ # });","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join.rs","byte_start":124117,"byte_end":124126,"line_start":197,"line_end":197,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join.rs","byte_start":124127,"byte_end":124134,"line_start":198,"line_end":198,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":772},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join_all.rs","byte_start":125308,"byte_end":125315,"line_start":26,"line_end":26,"column_start":12,"column_end":19},"name":"JoinAll","qualname":"::future::join_all::JoinAll","value":"JoinAll {  }","parent":null,"children":[{"krate":0,"index":774}],"decl_id":null,"docs":" Future for the [`join_all`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`join_all`] function.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join_all.rs","byte_start":125187,"byte_end":125228,"line_start":24,"line_end":24,"column_start":1,"column_end":42}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join_all.rs","byte_start":125229,"byte_end":125296,"line_start":25,"line_end":25,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":778},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join_all.rs","byte_start":126857,"byte_end":126865,"line_start":80,"line_end":80,"column_start":8,"column_end":16},"name":"join_all","qualname":"::future::join_all::join_all","value":"fn <I> (i: I) -> JoinAll<I::Item>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which represents a collection of the outputs of the futures\n given.","sig":null,"attributes":[{"value":"/ Creates a future which represents a collection of the outputs of the futures","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join_all.rs","byte_start":125648,"byte_end":125728,"line_start":45,"line_end":45,"column_start":1,"column_end":81}},{"value":"/ given.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join_all.rs","byte_start":125729,"byte_end":125739,"line_start":46,"line_end":46,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join_all.rs","byte_start":125740,"byte_end":125743,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ The returned future will drive execution for all of its underlying futures,","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join_all.rs","byte_start":125744,"byte_end":125823,"line_start":48,"line_end":48,"column_start":1,"column_end":80}},{"value":"/ collecting the results into a destination `Vec<T>` in the same order as they","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join_all.rs","byte_start":125824,"byte_end":125904,"line_start":49,"line_end":49,"column_start":1,"column_end":81}},{"value":"/ were provided.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join_all.rs","byte_start":125905,"byte_end":125923,"line_start":50,"line_end":50,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join_all.rs","byte_start":125924,"byte_end":125927,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join_all.rs","byte_start":125928,"byte_end":126005,"line_start":52,"line_end":52,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join_all.rs","byte_start":126006,"byte_end":126063,"line_start":53,"line_end":53,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join_all.rs","byte_start":126064,"byte_end":126067,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ # See Also","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join_all.rs","byte_start":126068,"byte_end":126082,"line_start":55,"line_end":55,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join_all.rs","byte_start":126083,"byte_end":126086,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ This is purposefully a very simple API for basic use-cases. In a lot of","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join_all.rs","byte_start":126087,"byte_end":126162,"line_start":57,"line_end":57,"column_start":1,"column_end":76}},{"value":"/ cases you will want to use the more powerful","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join_all.rs","byte_start":126163,"byte_end":126211,"line_start":58,"line_end":58,"column_start":1,"column_end":49}},{"value":"/ [`FuturesUnordered`][crate::stream::FuturesUnordered] APIs, some","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join_all.rs","byte_start":126212,"byte_end":126280,"line_start":59,"line_end":59,"column_start":1,"column_end":69}},{"value":"/ examples of additional functionality that provides:","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join_all.rs","byte_start":126281,"byte_end":126336,"line_start":60,"line_end":60,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join_all.rs","byte_start":126337,"byte_end":126340,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/  * Adding new futures to the set even after it has been started.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join_all.rs","byte_start":126341,"byte_end":126409,"line_start":62,"line_end":62,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join_all.rs","byte_start":126410,"byte_end":126413,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/  * Only polling the specific futures that have been woken. In cases where","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join_all.rs","byte_start":126414,"byte_end":126491,"line_start":64,"line_end":64,"column_start":1,"column_end":78}},{"value":"/    you have a lot of futures this will result in much more efficient polling.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join_all.rs","byte_start":126492,"byte_end":126573,"line_start":65,"line_end":65,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join_all.rs","byte_start":126574,"byte_end":126577,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join_all.rs","byte_start":126578,"byte_end":126592,"line_start":67,"line_end":67,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join_all.rs","byte_start":126593,"byte_end":126596,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join_all.rs","byte_start":126597,"byte_end":126604,"line_start":69,"line_end":69,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join_all.rs","byte_start":126605,"byte_end":126646,"line_start":70,"line_end":70,"column_start":1,"column_end":42}},{"value":"/ use futures::future::join_all;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join_all.rs","byte_start":126647,"byte_end":126681,"line_start":71,"line_end":71,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join_all.rs","byte_start":126682,"byte_end":126685,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ async fn foo(i: u32) -> u32 { i }","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join_all.rs","byte_start":126686,"byte_end":126723,"line_start":73,"line_end":73,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join_all.rs","byte_start":126724,"byte_end":126727,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ let futures = vec![foo(1), foo(2), foo(3)];","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join_all.rs","byte_start":126728,"byte_end":126775,"line_start":75,"line_end":75,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join_all.rs","byte_start":126776,"byte_end":126779,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(join_all(futures).await, [1, 2, 3]);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join_all.rs","byte_start":126780,"byte_end":126831,"line_start":77,"line_end":77,"column_start":1,"column_end":52}},{"value":"/ # });","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join_all.rs","byte_start":126832,"byte_end":126841,"line_start":78,"line_end":78,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join_all.rs","byte_start":126842,"byte_end":126849,"line_start":79,"line_end":79,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":6137},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\select.rs","byte_start":128178,"byte_end":128184,"line_start":9,"line_end":9,"column_start":12,"column_end":18},"name":"Select","qualname":"::future::select::Select","value":"Select {  }","parent":null,"children":[{"krate":0,"index":6140}],"decl_id":null,"docs":" Future for the [`select()`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`select()`] function.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\select.rs","byte_start":128040,"byte_end":128081,"line_start":6,"line_end":6,"column_start":1,"column_end":42}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\select.rs","byte_start":128082,"byte_end":128149,"line_start":7,"line_end":7,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":806},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\select.rs","byte_start":129450,"byte_end":129456,"line_start":47,"line_end":47,"column_start":8,"column_end":14},"name":"select","qualname":"::future::select::select","value":"fn <A, B> (future1: A, future2: B) -> Select<A, B>","parent":null,"children":[],"decl_id":null,"docs":" Waits for either one of two differently-typed futures to complete.","sig":null,"attributes":[{"value":"/ Waits for either one of two differently-typed futures to complete.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\select.rs","byte_start":128275,"byte_end":128345,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\select.rs","byte_start":128346,"byte_end":128349,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits for either one of both","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\select.rs","byte_start":128350,"byte_end":128428,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"/ futures to complete. The returned future will finish with both the value","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\select.rs","byte_start":128429,"byte_end":128505,"line_start":18,"line_end":18,"column_start":1,"column_end":77}},{"value":"/ resolved and a future representing the completion of the other work.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\select.rs","byte_start":128506,"byte_end":128578,"line_start":19,"line_end":19,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\select.rs","byte_start":128579,"byte_end":128582,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the receiving futures and returns a","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\select.rs","byte_start":128583,"byte_end":128655,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/ wrapped version of them.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\select.rs","byte_start":128656,"byte_end":128684,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\select.rs","byte_start":128685,"byte_end":128688,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Also note that if both this and the second future have the same","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\select.rs","byte_start":128689,"byte_end":128756,"line_start":24,"line_end":24,"column_start":1,"column_end":68}},{"value":"/ output type you can use the `Either::factor_first` method to","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\select.rs","byte_start":128757,"byte_end":128821,"line_start":25,"line_end":25,"column_start":1,"column_end":65}},{"value":"/ conveniently extract out the value at the end.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\select.rs","byte_start":128822,"byte_end":128872,"line_start":26,"line_end":26,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\select.rs","byte_start":128873,"byte_end":128876,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\select.rs","byte_start":128877,"byte_end":128891,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\select.rs","byte_start":128892,"byte_end":128895,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\select.rs","byte_start":128896,"byte_end":128903,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ use futures::future::{self, Either, Future, FutureExt};","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\select.rs","byte_start":128904,"byte_end":128963,"line_start":31,"line_end":31,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\select.rs","byte_start":128964,"byte_end":128967,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ // A poor-man's join implemented on top of select","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\select.rs","byte_start":128968,"byte_end":129021,"line_start":33,"line_end":33,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\select.rs","byte_start":129022,"byte_end":129025,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ fn join<A, B>(a: A, b: B) -> impl Future<Output=(A::Output, B::Output)>","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\select.rs","byte_start":129026,"byte_end":129101,"line_start":35,"line_end":35,"column_start":1,"column_end":76}},{"value":"/     where A: Future + Unpin,","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\select.rs","byte_start":129102,"byte_end":129134,"line_start":36,"line_end":36,"column_start":1,"column_end":33}},{"value":"/           B: Future + Unpin,","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\select.rs","byte_start":129135,"byte_end":129167,"line_start":37,"line_end":37,"column_start":1,"column_end":33}},{"value":"/ {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\select.rs","byte_start":129168,"byte_end":129173,"line_start":38,"line_end":38,"column_start":1,"column_end":6}},{"value":"/     future::select(a, b).then(|either| {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\select.rs","byte_start":129174,"byte_end":129218,"line_start":39,"line_end":39,"column_start":1,"column_end":45}},{"value":"/         match either {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\select.rs","byte_start":129219,"byte_end":129245,"line_start":40,"line_end":40,"column_start":1,"column_end":27}},{"value":"/             Either::Left((x, b)) => b.map(move |y| (x, y)).left_future(),","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\select.rs","byte_start":129246,"byte_end":129323,"line_start":41,"line_end":41,"column_start":1,"column_end":78}},{"value":"/             Either::Right((y, a)) => a.map(move |x| (x, y)).right_future(),","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\select.rs","byte_start":129324,"byte_end":129403,"line_start":42,"line_end":42,"column_start":1,"column_end":80}},{"value":"/         }","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\select.rs","byte_start":129404,"byte_end":129417,"line_start":43,"line_end":43,"column_start":1,"column_end":14}},{"value":"/     })","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\select.rs","byte_start":129418,"byte_end":129428,"line_start":44,"line_end":44,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\select.rs","byte_start":129429,"byte_end":129434,"line_start":45,"line_end":45,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\select.rs","byte_start":129435,"byte_end":129442,"line_start":46,"line_end":46,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":6145},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\select_all.rs","byte_start":130808,"byte_end":130817,"line_start":12,"line_end":12,"column_start":12,"column_end":21},"name":"SelectAll","qualname":"::future::select_all::SelectAll","value":"SelectAll {  }","parent":null,"children":[{"krate":0,"index":6147}],"decl_id":null,"docs":" Future for the [`select_all`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`select_all`] function.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\select_all.rs","byte_start":130668,"byte_end":130711,"line_start":9,"line_end":9,"column_start":1,"column_end":44}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\select_all.rs","byte_start":130729,"byte_end":130796,"line_start":11,"line_end":11,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":833},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\select_all.rs","byte_start":131597,"byte_end":131607,"line_start":33,"line_end":33,"column_start":8,"column_end":18},"name":"select_all","qualname":"::future::select_all::select_all","value":"fn <I> (iter: I) -> SelectAll<I::Item>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future which will select over a list of futures.","sig":null,"attributes":[{"value":"/ Creates a new future which will select over a list of futures.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\select_all.rs","byte_start":130895,"byte_end":130961,"line_start":18,"line_end":18,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\select_all.rs","byte_start":130962,"byte_end":130965,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ The returned future will wait for any future within `iter` to be ready. Upon","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\select_all.rs","byte_start":130966,"byte_end":131046,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ completion the item resolved will be returned, along with the index of the","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\select_all.rs","byte_start":131047,"byte_end":131125,"line_start":21,"line_end":21,"column_start":1,"column_end":79}},{"value":"/ future that was ready and the list of all the remaining futures.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\select_all.rs","byte_start":131126,"byte_end":131194,"line_start":22,"line_end":22,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\select_all.rs","byte_start":131195,"byte_end":131198,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ There are no guarantees provided on the order of the list with the remaining","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\select_all.rs","byte_start":131199,"byte_end":131279,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/ futures. They might be swapped around, reversed, or completely random.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\select_all.rs","byte_start":131280,"byte_end":131354,"line_start":25,"line_end":25,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\select_all.rs","byte_start":131355,"byte_end":131358,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\select_all.rs","byte_start":131359,"byte_end":131436,"line_start":27,"line_end":27,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\select_all.rs","byte_start":131437,"byte_end":131494,"line_start":28,"line_end":28,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\select_all.rs","byte_start":131495,"byte_end":131498,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\select_all.rs","byte_start":131499,"byte_end":131511,"line_start":30,"line_end":30,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\select_all.rs","byte_start":131512,"byte_end":131515,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ This function will panic if the iterator specified contains no items.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\select_all.rs","byte_start":131516,"byte_end":131589,"line_start":32,"line_end":32,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":6221},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join.rs","byte_start":133076,"byte_end":133090,"line_start":16,"line_end":16,"column_start":9,"column_end":23},"name":"TryJoin","qualname":"::future::try_join::TryJoin","value":"TryJoin {  }","parent":null,"children":[{"krate":0,"index":6224},{"krate":0,"index":6225}],"decl_id":null,"docs":" Future for the [`try_join`](try_join()) function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join.rs","byte_start":133076,"byte_end":133090,"line_start":16,"line_end":16,"column_start":9,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":6246},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join.rs","byte_start":133076,"byte_end":133090,"line_start":16,"line_end":16,"column_start":9,"column_end":23},"name":"__TryJoin","qualname":"::future::try_join::_::__TryJoin","value":"__TryJoin {  }","parent":null,"children":[{"krate":0,"index":6250},{"krate":0,"index":6251},{"krate":0,"index":6252}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6273},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join.rs","byte_start":133076,"byte_end":133090,"line_start":16,"line_end":16,"column_start":9,"column_end":23},"name":"TryJoin3","qualname":"::future::try_join::TryJoin3","value":"TryJoin3 {  }","parent":null,"children":[{"krate":0,"index":6277},{"krate":0,"index":6278},{"krate":0,"index":6279}],"decl_id":null,"docs":" Future for the [`try_join3`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join.rs","byte_start":133076,"byte_end":133090,"line_start":16,"line_end":16,"column_start":9,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":6305},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join.rs","byte_start":133076,"byte_end":133090,"line_start":16,"line_end":16,"column_start":9,"column_end":23},"name":"__TryJoin3","qualname":"::future::try_join::_::__TryJoin3","value":"__TryJoin3 {  }","parent":null,"children":[{"krate":0,"index":6310},{"krate":0,"index":6311},{"krate":0,"index":6312},{"krate":0,"index":6313}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6339},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join.rs","byte_start":133076,"byte_end":133090,"line_start":16,"line_end":16,"column_start":9,"column_end":23},"name":"TryJoin4","qualname":"::future::try_join::TryJoin4","value":"TryJoin4 {  }","parent":null,"children":[{"krate":0,"index":6344},{"krate":0,"index":6345},{"krate":0,"index":6346},{"krate":0,"index":6347}],"decl_id":null,"docs":" Future for the [`try_join4`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join.rs","byte_start":133076,"byte_end":133090,"line_start":16,"line_end":16,"column_start":9,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":6378},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join.rs","byte_start":133076,"byte_end":133090,"line_start":16,"line_end":16,"column_start":9,"column_end":23},"name":"__TryJoin4","qualname":"::future::try_join::_::__TryJoin4","value":"__TryJoin4 {  }","parent":null,"children":[{"krate":0,"index":6384},{"krate":0,"index":6385},{"krate":0,"index":6386},{"krate":0,"index":6387},{"krate":0,"index":6388}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6419},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join.rs","byte_start":133076,"byte_end":133090,"line_start":16,"line_end":16,"column_start":9,"column_end":23},"name":"TryJoin5","qualname":"::future::try_join::TryJoin5","value":"TryJoin5 {  }","parent":null,"children":[{"krate":0,"index":6425},{"krate":0,"index":6426},{"krate":0,"index":6427},{"krate":0,"index":6428},{"krate":0,"index":6429}],"decl_id":null,"docs":" Future for the [`try_join5`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join.rs","byte_start":133076,"byte_end":133090,"line_start":16,"line_end":16,"column_start":9,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":6465},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join.rs","byte_start":133076,"byte_end":133090,"line_start":16,"line_end":16,"column_start":9,"column_end":23},"name":"__TryJoin5","qualname":"::future::try_join::_::__TryJoin5","value":"__TryJoin5 {  }","parent":null,"children":[{"krate":0,"index":6472},{"krate":0,"index":6473},{"krate":0,"index":6474},{"krate":0,"index":6475},{"krate":0,"index":6476},{"krate":0,"index":6477}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":861},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join.rs","byte_start":137072,"byte_end":137080,"line_start":147,"line_end":147,"column_start":8,"column_end":16},"name":"try_join","qualname":"::future::try_join::try_join","value":"fn <Fut1, Fut2> (future1: Fut1, future2: Fut2) -> TryJoin<Fut1, Fut2>","parent":null,"children":[],"decl_id":null,"docs":" Joins the result of two futures, waiting for them both to complete or\n for one to produce an error.","sig":null,"attributes":[{"value":"/ Joins the result of two futures, waiting for them both to complete or","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join.rs","byte_start":135838,"byte_end":135911,"line_start":105,"line_end":105,"column_start":1,"column_end":74}},{"value":"/ for one to produce an error.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join.rs","byte_start":135912,"byte_end":135944,"line_start":106,"line_end":106,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join.rs","byte_start":135945,"byte_end":135948,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits both futures to","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join.rs","byte_start":135949,"byte_end":136020,"line_start":108,"line_end":108,"column_start":1,"column_end":72}},{"value":"/ complete. If successful, the returned future will finish with a tuple of","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join.rs","byte_start":136021,"byte_end":136097,"line_start":109,"line_end":109,"column_start":1,"column_end":77}},{"value":"/ both results. If unsuccesful, it will complete with the first error","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join.rs","byte_start":136098,"byte_end":136169,"line_start":110,"line_end":110,"column_start":1,"column_end":72}},{"value":"/ encountered.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join.rs","byte_start":136170,"byte_end":136186,"line_start":111,"line_end":111,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join.rs","byte_start":136187,"byte_end":136190,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the passed futures and returns a","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join.rs","byte_start":136191,"byte_end":136260,"line_start":113,"line_end":113,"column_start":1,"column_end":70}},{"value":"/ wrapped version of it.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join.rs","byte_start":136261,"byte_end":136287,"line_start":114,"line_end":114,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join.rs","byte_start":136288,"byte_end":136291,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join.rs","byte_start":136292,"byte_end":136306,"line_start":116,"line_end":116,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join.rs","byte_start":136307,"byte_end":136310,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ When used on multiple futures that return [`Ok`], `try_join` will return","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join.rs","byte_start":136311,"byte_end":136387,"line_start":118,"line_end":118,"column_start":1,"column_end":77}},{"value":"/ [`Ok`] of a tuple of the values:","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join.rs","byte_start":136388,"byte_end":136424,"line_start":119,"line_end":119,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join.rs","byte_start":136425,"byte_end":136428,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join.rs","byte_start":136429,"byte_end":136436,"line_start":121,"line_end":121,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join.rs","byte_start":136437,"byte_end":136478,"line_start":122,"line_end":122,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join.rs","byte_start":136479,"byte_end":136503,"line_start":123,"line_end":123,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join.rs","byte_start":136504,"byte_end":136507,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join.rs","byte_start":136508,"byte_end":136553,"line_start":125,"line_end":125,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join.rs","byte_start":136554,"byte_end":136599,"line_start":126,"line_end":126,"column_start":1,"column_end":46}},{"value":"/ let pair = future::try_join(a, b);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join.rs","byte_start":136600,"byte_end":136638,"line_start":127,"line_end":127,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join.rs","byte_start":136639,"byte_end":136642,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pair.await, Ok((1, 2)));","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join.rs","byte_start":136643,"byte_end":136682,"line_start":129,"line_end":129,"column_start":1,"column_end":40}},{"value":"/ # });","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join.rs","byte_start":136683,"byte_end":136692,"line_start":130,"line_end":130,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join.rs","byte_start":136693,"byte_end":136700,"line_start":131,"line_end":131,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join.rs","byte_start":136701,"byte_end":136704,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ If one of the futures resolves to an error, `try_join` will return","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join.rs","byte_start":136705,"byte_end":136775,"line_start":133,"line_end":133,"column_start":1,"column_end":71}},{"value":"/ that error:","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join.rs","byte_start":136776,"byte_end":136791,"line_start":134,"line_end":134,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join.rs","byte_start":136792,"byte_end":136795,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join.rs","byte_start":136796,"byte_end":136803,"line_start":136,"line_end":136,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join.rs","byte_start":136804,"byte_end":136845,"line_start":137,"line_end":137,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join.rs","byte_start":136846,"byte_end":136870,"line_start":138,"line_end":138,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join.rs","byte_start":136871,"byte_end":136874,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join.rs","byte_start":136875,"byte_end":136920,"line_start":140,"line_end":140,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Err::<i32, i32>(2));","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join.rs","byte_start":136921,"byte_end":136967,"line_start":141,"line_end":141,"column_start":1,"column_end":47}},{"value":"/ let pair = future::try_join(a, b);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join.rs","byte_start":136968,"byte_end":137006,"line_start":142,"line_end":142,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join.rs","byte_start":137007,"byte_end":137010,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pair.await, Err(2));","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join.rs","byte_start":137011,"byte_end":137046,"line_start":144,"line_end":144,"column_start":1,"column_end":36}},{"value":"/ # });","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join.rs","byte_start":137047,"byte_end":137056,"line_start":145,"line_end":145,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join.rs","byte_start":137057,"byte_end":137064,"line_start":146,"line_end":146,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":864},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join.rs","byte_start":137673,"byte_end":137682,"line_start":171,"line_end":171,"column_start":8,"column_end":17},"name":"try_join3","qualname":"::future::try_join::try_join3","value":"fn <Fut1, Fut2, Fut3> (future1: Fut1, future2: Fut2, future3: Fut3) -> TryJoin3<Fut1, Fut2, Fut3>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`try_join`](try_join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`try_join`](try_join()), but with more futures.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join.rs","byte_start":137255,"byte_end":137315,"line_start":155,"line_end":155,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join.rs","byte_start":137316,"byte_end":137319,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join.rs","byte_start":137320,"byte_end":137334,"line_start":157,"line_end":157,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join.rs","byte_start":137335,"byte_end":137338,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join.rs","byte_start":137339,"byte_end":137346,"line_start":159,"line_end":159,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join.rs","byte_start":137347,"byte_end":137388,"line_start":160,"line_end":160,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join.rs","byte_start":137389,"byte_end":137413,"line_start":161,"line_end":161,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join.rs","byte_start":137414,"byte_end":137417,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join.rs","byte_start":137418,"byte_end":137463,"line_start":163,"line_end":163,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join.rs","byte_start":137464,"byte_end":137509,"line_start":164,"line_end":164,"column_start":1,"column_end":46}},{"value":"/ let c = future::ready(Ok::<i32, i32>(3));","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join.rs","byte_start":137510,"byte_end":137555,"line_start":165,"line_end":165,"column_start":1,"column_end":46}},{"value":"/ let tuple = future::try_join3(a, b, c);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join.rs","byte_start":137556,"byte_end":137599,"line_start":166,"line_end":166,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join.rs","byte_start":137600,"byte_end":137603,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, Ok((1, 2, 3)));","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join.rs","byte_start":137604,"byte_end":137647,"line_start":168,"line_end":168,"column_start":1,"column_end":44}},{"value":"/ # });","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join.rs","byte_start":137648,"byte_end":137657,"line_start":169,"line_end":169,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join.rs","byte_start":137658,"byte_end":137665,"line_start":170,"line_end":170,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":868},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join.rs","byte_start":138422,"byte_end":138431,"line_start":201,"line_end":201,"column_start":8,"column_end":17},"name":"try_join4","qualname":"::future::try_join::try_join4","value":"fn <Fut1, Fut2, Fut3, Fut4> (future1: Fut1, future2: Fut2, future3: Fut3, future4: Fut4) -> TryJoin4<Fut1, Fut2, Fut3, Fut4>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`try_join`](try_join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`try_join`](try_join()), but with more futures.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join.rs","byte_start":137952,"byte_end":138012,"line_start":184,"line_end":184,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join.rs","byte_start":138013,"byte_end":138016,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join.rs","byte_start":138017,"byte_end":138031,"line_start":186,"line_end":186,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join.rs","byte_start":138032,"byte_end":138035,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join.rs","byte_start":138036,"byte_end":138043,"line_start":188,"line_end":188,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join.rs","byte_start":138044,"byte_end":138085,"line_start":189,"line_end":189,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join.rs","byte_start":138086,"byte_end":138110,"line_start":190,"line_end":190,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join.rs","byte_start":138111,"byte_end":138114,"line_start":191,"line_end":191,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join.rs","byte_start":138115,"byte_end":138160,"line_start":192,"line_end":192,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join.rs","byte_start":138161,"byte_end":138206,"line_start":193,"line_end":193,"column_start":1,"column_end":46}},{"value":"/ let c = future::ready(Ok::<i32, i32>(3));","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join.rs","byte_start":138207,"byte_end":138252,"line_start":194,"line_end":194,"column_start":1,"column_end":46}},{"value":"/ let d = future::ready(Ok::<i32, i32>(4));","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join.rs","byte_start":138253,"byte_end":138298,"line_start":195,"line_end":195,"column_start":1,"column_end":46}},{"value":"/ let tuple = future::try_join4(a, b, c, d);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join.rs","byte_start":138299,"byte_end":138345,"line_start":196,"line_end":196,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join.rs","byte_start":138346,"byte_end":138349,"line_start":197,"line_end":197,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, Ok((1, 2, 3, 4)));","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join.rs","byte_start":138350,"byte_end":138396,"line_start":198,"line_end":198,"column_start":1,"column_end":47}},{"value":"/ # });","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join.rs","byte_start":138397,"byte_end":138406,"line_start":199,"line_end":199,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join.rs","byte_start":138407,"byte_end":138414,"line_start":200,"line_end":200,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":873},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join.rs","byte_start":139305,"byte_end":139314,"line_start":234,"line_end":234,"column_start":8,"column_end":17},"name":"try_join5","qualname":"::future::try_join::try_join5","value":"fn <Fut1, Fut2, Fut3, Fut4, Fut5> (future1: Fut1, future2: Fut2, future3: Fut3, future4: Fut4, future5: Fut5) -> TryJoin5<Fut1, Fut2, Fut3, Fut4, Fut5>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`try_join`](try_join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`try_join`](try_join()), but with more futures.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join.rs","byte_start":138783,"byte_end":138843,"line_start":216,"line_end":216,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join.rs","byte_start":138844,"byte_end":138847,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join.rs","byte_start":138848,"byte_end":138862,"line_start":218,"line_end":218,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join.rs","byte_start":138863,"byte_end":138866,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join.rs","byte_start":138867,"byte_end":138874,"line_start":220,"line_end":220,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join.rs","byte_start":138875,"byte_end":138916,"line_start":221,"line_end":221,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join.rs","byte_start":138917,"byte_end":138941,"line_start":222,"line_end":222,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join.rs","byte_start":138942,"byte_end":138945,"line_start":223,"line_end":223,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join.rs","byte_start":138946,"byte_end":138991,"line_start":224,"line_end":224,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join.rs","byte_start":138992,"byte_end":139037,"line_start":225,"line_end":225,"column_start":1,"column_end":46}},{"value":"/ let c = future::ready(Ok::<i32, i32>(3));","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join.rs","byte_start":139038,"byte_end":139083,"line_start":226,"line_end":226,"column_start":1,"column_end":46}},{"value":"/ let d = future::ready(Ok::<i32, i32>(4));","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join.rs","byte_start":139084,"byte_end":139129,"line_start":227,"line_end":227,"column_start":1,"column_end":46}},{"value":"/ let e = future::ready(Ok::<i32, i32>(5));","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join.rs","byte_start":139130,"byte_end":139175,"line_start":228,"line_end":228,"column_start":1,"column_end":46}},{"value":"/ let tuple = future::try_join5(a, b, c, d, e);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join.rs","byte_start":139176,"byte_end":139225,"line_start":229,"line_end":229,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join.rs","byte_start":139226,"byte_end":139229,"line_start":230,"line_end":230,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, Ok((1, 2, 3, 4, 5)));","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join.rs","byte_start":139230,"byte_end":139279,"line_start":231,"line_end":231,"column_start":1,"column_end":50}},{"value":"/ # });","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join.rs","byte_start":139280,"byte_end":139289,"line_start":232,"line_end":232,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join.rs","byte_start":139290,"byte_end":139297,"line_start":233,"line_end":233,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":915},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join_all.rs","byte_start":140700,"byte_end":140710,"line_start":32,"line_end":32,"column_start":12,"column_end":22},"name":"TryJoinAll","qualname":"::future::try_join_all::TryJoinAll","value":"TryJoinAll {  }","parent":null,"children":[{"krate":0,"index":917}],"decl_id":null,"docs":" Future for the [`try_join_all`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_join_all`] function.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join_all.rs","byte_start":140575,"byte_end":140620,"line_start":30,"line_end":30,"column_start":1,"column_end":46}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join_all.rs","byte_start":140621,"byte_end":140688,"line_start":31,"line_end":31,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":921},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join_all.rs","byte_start":142329,"byte_end":142341,"line_start":90,"line_end":90,"column_start":8,"column_end":20},"name":"try_join_all","qualname":"::future::try_join_all::try_join_all","value":"fn <I> (i: I) -> TryJoinAll<I::Item>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which represents either a collection of the results of the\n futures given or an error.","sig":null,"attributes":[{"value":"/ Creates a future which represents either a collection of the results of the","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join_all.rs","byte_start":141080,"byte_end":141159,"line_start":52,"line_end":52,"column_start":1,"column_end":80}},{"value":"/ futures given or an error.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join_all.rs","byte_start":141160,"byte_end":141190,"line_start":53,"line_end":53,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join_all.rs","byte_start":141191,"byte_end":141194,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ The returned future will drive execution for all of its underlying futures,","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join_all.rs","byte_start":141195,"byte_end":141274,"line_start":55,"line_end":55,"column_start":1,"column_end":80}},{"value":"/ collecting the results into a destination `Vec<T>` in the same order as they","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join_all.rs","byte_start":141275,"byte_end":141355,"line_start":56,"line_end":56,"column_start":1,"column_end":81}},{"value":"/ were provided.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join_all.rs","byte_start":141356,"byte_end":141374,"line_start":57,"line_end":57,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join_all.rs","byte_start":141375,"byte_end":141378,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ If any future returns an error then all other futures will be canceled and","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join_all.rs","byte_start":141379,"byte_end":141457,"line_start":59,"line_end":59,"column_start":1,"column_end":79}},{"value":"/ an error will be returned immediately. If all futures complete successfully,","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join_all.rs","byte_start":141458,"byte_end":141538,"line_start":60,"line_end":60,"column_start":1,"column_end":81}},{"value":"/ however, then the returned future will succeed with a `Vec` of all the","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join_all.rs","byte_start":141539,"byte_end":141613,"line_start":61,"line_end":61,"column_start":1,"column_end":75}},{"value":"/ successful results.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join_all.rs","byte_start":141614,"byte_end":141637,"line_start":62,"line_end":62,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join_all.rs","byte_start":141638,"byte_end":141641,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join_all.rs","byte_start":141642,"byte_end":141719,"line_start":64,"line_end":64,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join_all.rs","byte_start":141720,"byte_end":141777,"line_start":65,"line_end":65,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join_all.rs","byte_start":141778,"byte_end":141781,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join_all.rs","byte_start":141782,"byte_end":141796,"line_start":67,"line_end":67,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join_all.rs","byte_start":141797,"byte_end":141800,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join_all.rs","byte_start":141801,"byte_end":141808,"line_start":69,"line_end":69,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join_all.rs","byte_start":141809,"byte_end":141850,"line_start":70,"line_end":70,"column_start":1,"column_end":42}},{"value":"/ use futures::future::{self, try_join_all};","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join_all.rs","byte_start":141851,"byte_end":141897,"line_start":71,"line_end":71,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join_all.rs","byte_start":141898,"byte_end":141901,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ let futures = vec![","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join_all.rs","byte_start":141902,"byte_end":141925,"line_start":73,"line_end":73,"column_start":1,"column_end":24}},{"value":"/     future::ok::<u32, u32>(1),","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join_all.rs","byte_start":141926,"byte_end":141960,"line_start":74,"line_end":74,"column_start":1,"column_end":35}},{"value":"/     future::ok::<u32, u32>(2),","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join_all.rs","byte_start":141961,"byte_end":141995,"line_start":75,"line_end":75,"column_start":1,"column_end":35}},{"value":"/     future::ok::<u32, u32>(3),","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join_all.rs","byte_start":141996,"byte_end":142030,"line_start":76,"line_end":76,"column_start":1,"column_end":35}},{"value":"/ ];","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join_all.rs","byte_start":142031,"byte_end":142037,"line_start":77,"line_end":77,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join_all.rs","byte_start":142038,"byte_end":142041,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(try_join_all(futures).await, Ok(vec![1, 2, 3]));","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join_all.rs","byte_start":142042,"byte_end":142105,"line_start":79,"line_end":79,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join_all.rs","byte_start":142106,"byte_end":142109,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ let futures = vec![","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join_all.rs","byte_start":142110,"byte_end":142133,"line_start":81,"line_end":81,"column_start":1,"column_end":24}},{"value":"/     future::ok::<u32, u32>(1),","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join_all.rs","byte_start":142134,"byte_end":142168,"line_start":82,"line_end":82,"column_start":1,"column_end":35}},{"value":"/     future::err::<u32, u32>(2),","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join_all.rs","byte_start":142169,"byte_end":142204,"line_start":83,"line_end":83,"column_start":1,"column_end":36}},{"value":"/     future::ok::<u32, u32>(3),","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join_all.rs","byte_start":142205,"byte_end":142239,"line_start":84,"line_end":84,"column_start":1,"column_end":35}},{"value":"/ ];","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join_all.rs","byte_start":142240,"byte_end":142246,"line_start":85,"line_end":85,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join_all.rs","byte_start":142247,"byte_end":142250,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(try_join_all(futures).await, Err(2));","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join_all.rs","byte_start":142251,"byte_end":142303,"line_start":87,"line_end":87,"column_start":1,"column_end":53}},{"value":"/ # });","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join_all.rs","byte_start":142304,"byte_end":142313,"line_start":88,"line_end":88,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join_all.rs","byte_start":142314,"byte_end":142321,"line_start":89,"line_end":89,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":6513},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_select.rs","byte_start":144170,"byte_end":144179,"line_start":9,"line_end":9,"column_start":12,"column_end":21},"name":"TrySelect","qualname":"::future::try_select::TrySelect","value":"TrySelect {  }","parent":null,"children":[{"krate":0,"index":6516}],"decl_id":null,"docs":" Future for the [`try_select()`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_select()`] function.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_select.rs","byte_start":144028,"byte_end":144073,"line_start":6,"line_end":6,"column_start":1,"column_end":46}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_select.rs","byte_start":144074,"byte_end":144141,"line_start":7,"line_end":7,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":949},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_select.rs","byte_start":145764,"byte_end":145774,"line_start":50,"line_end":50,"column_start":8,"column_end":18},"name":"try_select","qualname":"::future::try_select::try_select","value":"fn <A, B> (future1: A, future2: B) -> TrySelect<A, B>","parent":null,"children":[],"decl_id":null,"docs":" Waits for either one of two differently-typed futures to complete.","sig":null,"attributes":[{"value":"/ Waits for either one of two differently-typed futures to complete.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_select.rs","byte_start":144273,"byte_end":144343,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_select.rs","byte_start":144344,"byte_end":144347,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits for either one of both","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_select.rs","byte_start":144348,"byte_end":144426,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"/ futures to complete. The returned future will finish with both the value","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_select.rs","byte_start":144427,"byte_end":144503,"line_start":18,"line_end":18,"column_start":1,"column_end":77}},{"value":"/ resolved and a future representing the completion of the other work.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_select.rs","byte_start":144504,"byte_end":144576,"line_start":19,"line_end":19,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_select.rs","byte_start":144577,"byte_end":144580,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the receiving futures and returns a","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_select.rs","byte_start":144581,"byte_end":144653,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/ wrapped version of them.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_select.rs","byte_start":144654,"byte_end":144682,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_select.rs","byte_start":144683,"byte_end":144686,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Also note that if both this and the second future have the same","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_select.rs","byte_start":144687,"byte_end":144754,"line_start":24,"line_end":24,"column_start":1,"column_end":68}},{"value":"/ success/error type you can use the `Either::factor_first` method to","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_select.rs","byte_start":144755,"byte_end":144826,"line_start":25,"line_end":25,"column_start":1,"column_end":72}},{"value":"/ conveniently extract out the value at the end.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_select.rs","byte_start":144827,"byte_end":144877,"line_start":26,"line_end":26,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_select.rs","byte_start":144878,"byte_end":144881,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_select.rs","byte_start":144882,"byte_end":144896,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_select.rs","byte_start":144897,"byte_end":144900,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_select.rs","byte_start":144901,"byte_end":144908,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ use futures::future::{self, Either, Future, FutureExt, TryFuture, TryFutureExt};","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_select.rs","byte_start":144909,"byte_end":144993,"line_start":31,"line_end":31,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_select.rs","byte_start":144994,"byte_end":144997,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ // A poor-man's try_join implemented on top of select","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_select.rs","byte_start":144998,"byte_end":145055,"line_start":33,"line_end":33,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_select.rs","byte_start":145056,"byte_end":145059,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ fn try_join<A, B, E>(a: A, b: B) -> impl TryFuture<Ok=(A::Ok, B::Ok), Error=E>","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_select.rs","byte_start":145060,"byte_end":145142,"line_start":35,"line_end":35,"column_start":1,"column_end":83}},{"value":"/      where A: TryFuture<Error = E> + Unpin + 'static,","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_select.rs","byte_start":145143,"byte_end":145200,"line_start":36,"line_end":36,"column_start":1,"column_end":58}},{"value":"/            B: TryFuture<Error = E> + Unpin + 'static,","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_select.rs","byte_start":145201,"byte_end":145258,"line_start":37,"line_end":37,"column_start":1,"column_end":58}},{"value":"/            E: 'static,","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_select.rs","byte_start":145259,"byte_end":145285,"line_start":38,"line_end":38,"column_start":1,"column_end":27}},{"value":"/ {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_select.rs","byte_start":145286,"byte_end":145291,"line_start":39,"line_end":39,"column_start":1,"column_end":6}},{"value":"/     future::try_select(a, b).then(|res| -> Box<dyn Future<Output = Result<_, _>> + Unpin> {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_select.rs","byte_start":145292,"byte_end":145387,"line_start":40,"line_end":40,"column_start":1,"column_end":96}},{"value":"/         match res {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_select.rs","byte_start":145388,"byte_end":145411,"line_start":41,"line_end":41,"column_start":1,"column_end":24}},{"value":"/             Ok(Either::Left((x, b))) => Box::new(b.map_ok(move |y| (x, y))),","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_select.rs","byte_start":145412,"byte_end":145492,"line_start":42,"line_end":42,"column_start":1,"column_end":81}},{"value":"/             Ok(Either::Right((y, a))) => Box::new(a.map_ok(move |x| (x, y))),","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_select.rs","byte_start":145493,"byte_end":145574,"line_start":43,"line_end":43,"column_start":1,"column_end":82}},{"value":"/             Err(Either::Left((e, _))) => Box::new(future::err(e)),","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_select.rs","byte_start":145575,"byte_end":145645,"line_start":44,"line_end":44,"column_start":1,"column_end":71}},{"value":"/             Err(Either::Right((e, _))) => Box::new(future::err(e)),","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_select.rs","byte_start":145646,"byte_end":145717,"line_start":45,"line_end":45,"column_start":1,"column_end":72}},{"value":"/         }","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_select.rs","byte_start":145718,"byte_end":145731,"line_start":46,"line_end":46,"column_start":1,"column_end":14}},{"value":"/     })","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_select.rs","byte_start":145732,"byte_end":145742,"line_start":47,"line_end":47,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_select.rs","byte_start":145743,"byte_end":145748,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_select.rs","byte_start":145749,"byte_end":145756,"line_start":49,"line_end":49,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":6521},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\select_ok.rs","byte_start":147263,"byte_end":147271,"line_start":12,"line_end":12,"column_start":12,"column_end":20},"name":"SelectOk","qualname":"::future::select_ok::SelectOk","value":"SelectOk {  }","parent":null,"children":[{"krate":0,"index":6523}],"decl_id":null,"docs":" Future for the [`select_ok`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`select_ok`] function.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\select_ok.rs","byte_start":147124,"byte_end":147166,"line_start":9,"line_end":9,"column_start":1,"column_end":43}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\select_ok.rs","byte_start":147184,"byte_end":147251,"line_start":11,"line_end":11,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":974},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\select_ok.rs","byte_start":147993,"byte_end":148002,"line_start":31,"line_end":31,"column_start":8,"column_end":17},"name":"select_ok","qualname":"::future::select_ok::select_ok","value":"fn <I> (iter: I) -> SelectOk<I::Item>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future which will select the first successful future over a list of futures.","sig":null,"attributes":[{"value":"/ Creates a new future which will select the first successful future over a list of futures.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\select_ok.rs","byte_start":147348,"byte_end":147442,"line_start":18,"line_end":18,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\select_ok.rs","byte_start":147443,"byte_end":147446,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ The returned future will wait for any future within `iter` to be ready and Ok. Unlike","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\select_ok.rs","byte_start":147447,"byte_end":147536,"line_start":20,"line_end":20,"column_start":1,"column_end":90}},{"value":"/ `select_all`, this will only return the first successful completion, or the last","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\select_ok.rs","byte_start":147537,"byte_end":147621,"line_start":21,"line_end":21,"column_start":1,"column_end":85}},{"value":"/ failure. This is useful in contexts where any success is desired and failures","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\select_ok.rs","byte_start":147622,"byte_end":147703,"line_start":22,"line_end":22,"column_start":1,"column_end":82}},{"value":"/ are ignored, unless all the futures fail.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\select_ok.rs","byte_start":147704,"byte_end":147749,"line_start":23,"line_end":23,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\select_ok.rs","byte_start":147750,"byte_end":147753,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/  This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\select_ok.rs","byte_start":147754,"byte_end":147832,"line_start":25,"line_end":25,"column_start":1,"column_end":79}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\select_ok.rs","byte_start":147833,"byte_end":147890,"line_start":26,"line_end":26,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\select_ok.rs","byte_start":147891,"byte_end":147894,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\select_ok.rs","byte_start":147895,"byte_end":147907,"line_start":28,"line_end":28,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\select_ok.rs","byte_start":147908,"byte_end":147911,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ This function will panic if the iterator specified contains no items.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\select_ok.rs","byte_start":147912,"byte_end":147985,"line_start":30,"line_end":30,"column_start":1,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6530},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\either.rs","byte_start":150327,"byte_end":150331,"line_start":15,"line_end":15,"column_start":5,"column_end":9},"name":"Left","qualname":"::future::either::Either::Left","value":"Either::Left(A)","parent":{"krate":0,"index":6527},"children":[],"decl_id":null,"docs":" First branch of the type\n","sig":null,"attributes":[{"value":"/ First branch of the type","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\either.rs","byte_start":150294,"byte_end":150322,"line_start":14,"line_end":14,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6532},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\either.rs","byte_start":150381,"byte_end":150386,"line_start":17,"line_end":17,"column_start":5,"column_end":10},"name":"Right","qualname":"::future::either::Either::Right","value":"Either::Right(B)","parent":{"krate":0,"index":6527},"children":[],"decl_id":null,"docs":" Second branch of the type\n","sig":null,"attributes":[{"value":"/ Second branch of the type","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\either.rs","byte_start":150347,"byte_end":150376,"line_start":16,"line_end":16,"column_start":5,"column_end":34}}]},{"kind":"Enum","id":{"krate":0,"index":6527},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\either.rs","byte_start":150275,"byte_end":150281,"line_start":13,"line_end":13,"column_start":10,"column_end":16},"name":"Either","qualname":"::future::either::Either","value":"Either::{Left, Right}","parent":null,"children":[{"krate":0,"index":6530},{"krate":0,"index":6532}],"decl_id":null,"docs":" Combines two different futures, streams, or sinks having the same associated types into a single\n type.\n","sig":null,"attributes":[{"value":"pin(__private())","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\either.rs","byte_start":150227,"byte_end":150241,"line_start":11,"line_end":11,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":6564},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\either.rs","byte_start":150275,"byte_end":150281,"line_start":13,"line_end":13,"column_start":10,"column_end":16},"name":"__Either","qualname":"::future::either::_::__Either","value":"__Either {  }","parent":null,"children":[{"krate":0,"index":6568},{"krate":0,"index":6569},{"krate":0,"index":6570}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1007},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\either.rs","byte_start":150592,"byte_end":150604,"line_start":24,"line_end":24,"column_start":12,"column_end":24},"name":"factor_first","qualname":"<Either<(T, A), (T, B)>>::factor_first","value":"fn (self) -> (T, Either<A, B>)","parent":null,"children":[],"decl_id":null,"docs":" Factor out a homogeneous type from an either of pairs.","sig":null,"attributes":[{"value":"/ Factor out a homogeneous type from an either of pairs.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\either.rs","byte_start":150444,"byte_end":150502,"line_start":21,"line_end":21,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\either.rs","byte_start":150507,"byte_end":150510,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ Here, the homogeneous type is the first element of the pairs.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\either.rs","byte_start":150515,"byte_end":150580,"line_start":23,"line_end":23,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1012},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\either.rs","byte_start":150984,"byte_end":150997,"line_start":36,"line_end":36,"column_start":12,"column_end":25},"name":"factor_second","qualname":"<Either<(A, T), (B, T)>>::factor_second","value":"fn (self) -> (Either<A, B>, T)","parent":null,"children":[],"decl_id":null,"docs":" Factor out a homogeneous type from an either of pairs.","sig":null,"attributes":[{"value":"/ Factor out a homogeneous type from an either of pairs.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\either.rs","byte_start":150835,"byte_end":150893,"line_start":33,"line_end":33,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\either.rs","byte_start":150898,"byte_end":150901,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ Here, the homogeneous type is the second element of the pairs.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\either.rs","byte_start":150906,"byte_end":150972,"line_start":35,"line_end":35,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1015},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\either.rs","byte_start":151285,"byte_end":151295,"line_start":46,"line_end":46,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Either<T, T>>::into_inner","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Extract the value of an either over two equivalent types.\n","sig":null,"attributes":[{"value":"/ Extract the value of an either over two equivalent types.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\either.rs","byte_start":151212,"byte_end":151273,"line_start":45,"line_end":45,"column_start":5,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":11889},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\abortable.rs","byte_start":8324172,"byte_end":8324181,"line_start":14,"line_end":14,"column_start":12,"column_end":21},"name":"Abortable","qualname":"::future::abortable::Abortable","value":"Abortable {  }","parent":null,"children":[{"krate":0,"index":11892},{"krate":0,"index":11891}],"decl_id":null,"docs":" A future which can be remotely short-circuited using an `AbortHandle`.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\abortable.rs","byte_start":8324093,"byte_end":8324160,"line_start":13,"line_end":13,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\abortable.rs","byte_start":8324054,"byte_end":8324068,"line_start":11,"line_end":11,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":11910},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\abortable.rs","byte_start":8324172,"byte_end":8324181,"line_start":14,"line_end":14,"column_start":12,"column_end":21},"name":"__Abortable","qualname":"::future::abortable::_::__Abortable","value":"__Abortable {  }","parent":null,"children":[{"krate":0,"index":11913},{"krate":0,"index":11914}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6617},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\abortable.rs","byte_start":8325064,"byte_end":8325067,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"new","qualname":"<Abortable<Fut>>::new","value":"fn (future: Fut, reg: AbortRegistration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Abortable` future using an existing `AbortRegistration`.\n `AbortRegistration`s can be acquired through `AbortHandle::new`.","sig":null,"attributes":[{"value":"/ Creates a new `Abortable` future using an existing `AbortRegistration`.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\abortable.rs","byte_start":8324297,"byte_end":8324372,"line_start":21,"line_end":21,"column_start":5,"column_end":80}},{"value":"/ `AbortRegistration`s can be acquired through `AbortHandle::new`.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\abortable.rs","byte_start":8324377,"byte_end":8324445,"line_start":22,"line_end":22,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\abortable.rs","byte_start":8324450,"byte_end":8324453,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ When `abort` is called on the handle tied to `reg` or if `abort` has","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\abortable.rs","byte_start":8324458,"byte_end":8324530,"line_start":24,"line_end":24,"column_start":5,"column_end":77}},{"value":"/ already been called, the future will complete immediately without making","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\abortable.rs","byte_start":8324535,"byte_end":8324611,"line_start":25,"line_end":25,"column_start":5,"column_end":81}},{"value":"/ any further progress.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\abortable.rs","byte_start":8324616,"byte_end":8324641,"line_start":26,"line_end":26,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\abortable.rs","byte_start":8324646,"byte_end":8324649,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ Example:","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\abortable.rs","byte_start":8324654,"byte_end":8324666,"line_start":28,"line_end":28,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\abortable.rs","byte_start":8324671,"byte_end":8324674,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\abortable.rs","byte_start":8324679,"byte_end":8324686,"line_start":30,"line_end":30,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\abortable.rs","byte_start":8324691,"byte_end":8324732,"line_start":31,"line_end":31,"column_start":5,"column_end":46}},{"value":"/ use futures::future::{Abortable, AbortHandle, Aborted};","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\abortable.rs","byte_start":8324737,"byte_end":8324796,"line_start":32,"line_end":32,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\abortable.rs","byte_start":8324801,"byte_end":8324804,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ let (abort_handle, abort_registration) = AbortHandle::new_pair();","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\abortable.rs","byte_start":8324809,"byte_end":8324878,"line_start":34,"line_end":34,"column_start":5,"column_end":74}},{"value":"/ let future = Abortable::new(async { 2 }, abort_registration);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\abortable.rs","byte_start":8324883,"byte_end":8324948,"line_start":35,"line_end":35,"column_start":5,"column_end":70}},{"value":"/ abort_handle.abort();","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\abortable.rs","byte_start":8324953,"byte_end":8324978,"line_start":36,"line_end":36,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(future.await, Err(Aborted));","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\abortable.rs","byte_start":8324983,"byte_end":8325026,"line_start":37,"line_end":37,"column_start":5,"column_end":48}},{"value":"/ # });","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\abortable.rs","byte_start":8325031,"byte_end":8325040,"line_start":38,"line_end":38,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\abortable.rs","byte_start":8325045,"byte_end":8325052,"line_start":39,"line_end":39,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":6637},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\abortable.rs","byte_start":8325395,"byte_end":8325412,"line_start":52,"line_end":52,"column_start":12,"column_end":29},"name":"AbortRegistration","qualname":"::future::abortable::AbortRegistration","value":"AbortRegistration {  }","parent":null,"children":[{"krate":0,"index":6638}],"decl_id":null,"docs":" A registration handle for a `Abortable` future.\n Values of this type can be acquired from `AbortHandle::new` and are used\n in calls to `Abortable::new`.\n","sig":null,"attributes":[{"value":"/ A registration handle for a `Abortable` future.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\abortable.rs","byte_start":8325204,"byte_end":8325255,"line_start":48,"line_end":48,"column_start":1,"column_end":52}},{"value":"/ Values of this type can be acquired from `AbortHandle::new` and are used","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\abortable.rs","byte_start":8325256,"byte_end":8325332,"line_start":49,"line_end":49,"column_start":1,"column_end":77}},{"value":"/ in calls to `Abortable::new`.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\abortable.rs","byte_start":8325333,"byte_end":8325366,"line_start":50,"line_end":50,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":6641},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\abortable.rs","byte_start":8325519,"byte_end":8325530,"line_start":58,"line_end":58,"column_start":12,"column_end":23},"name":"AbortHandle","qualname":"::future::abortable::AbortHandle","value":"AbortHandle {  }","parent":null,"children":[{"krate":0,"index":6642}],"decl_id":null,"docs":" A handle to a `Abortable` future.\n","sig":null,"attributes":[{"value":"/ A handle to a `Abortable` future.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\abortable.rs","byte_start":8325446,"byte_end":8325483,"line_start":56,"line_end":56,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":6619},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\abortable.rs","byte_start":8326200,"byte_end":8326208,"line_start":80,"line_end":80,"column_start":12,"column_end":20},"name":"new_pair","qualname":"<AbortHandle>::new_pair","value":"fn () -> (Self, AbortRegistration)","parent":null,"children":[],"decl_id":null,"docs":" Creates an (`AbortHandle`, `AbortRegistration`) pair which can be used\n to abort a running future.","sig":null,"attributes":[{"value":"/ Creates an (`AbortHandle`, `AbortRegistration`) pair which can be used","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\abortable.rs","byte_start":8325587,"byte_end":8325661,"line_start":63,"line_end":63,"column_start":5,"column_end":79}},{"value":"/ to abort a running future.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\abortable.rs","byte_start":8325666,"byte_end":8325696,"line_start":64,"line_end":64,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\abortable.rs","byte_start":8325701,"byte_end":8325704,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ This function is usually paired with a call to `Abortable::new`.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\abortable.rs","byte_start":8325709,"byte_end":8325777,"line_start":66,"line_end":66,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\abortable.rs","byte_start":8325782,"byte_end":8325785,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ Example:","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\abortable.rs","byte_start":8325790,"byte_end":8325802,"line_start":68,"line_end":68,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\abortable.rs","byte_start":8325807,"byte_end":8325810,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\abortable.rs","byte_start":8325815,"byte_end":8325822,"line_start":70,"line_end":70,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\abortable.rs","byte_start":8325827,"byte_end":8325868,"line_start":71,"line_end":71,"column_start":5,"column_end":46}},{"value":"/ use futures::future::{Abortable, AbortHandle, Aborted};","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\abortable.rs","byte_start":8325873,"byte_end":8325932,"line_start":72,"line_end":72,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\abortable.rs","byte_start":8325937,"byte_end":8325940,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ let (abort_handle, abort_registration) = AbortHandle::new_pair();","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\abortable.rs","byte_start":8325945,"byte_end":8326014,"line_start":74,"line_end":74,"column_start":5,"column_end":74}},{"value":"/ let future = Abortable::new(async { 2 }, abort_registration);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\abortable.rs","byte_start":8326019,"byte_end":8326084,"line_start":75,"line_end":75,"column_start":5,"column_end":70}},{"value":"/ abort_handle.abort();","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\abortable.rs","byte_start":8326089,"byte_end":8326114,"line_start":76,"line_end":76,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(future.await, Err(Aborted));","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\abortable.rs","byte_start":8326119,"byte_end":8326162,"line_start":77,"line_end":77,"column_start":5,"column_end":48}},{"value":"/ # });","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\abortable.rs","byte_start":8326167,"byte_end":8326176,"line_start":78,"line_end":78,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\abortable.rs","byte_start":8326181,"byte_end":8326188,"line_start":79,"line_end":79,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":6620},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\abortable.rs","byte_start":8327111,"byte_end":8327120,"line_start":112,"line_end":112,"column_start":8,"column_end":17},"name":"abortable","qualname":"::future::abortable::abortable","value":"fn <Fut> (future: Fut) -> (Abortable<Fut>, AbortHandle)","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Abortable` future and a `AbortHandle` which can be used to stop it.","sig":null,"attributes":[{"value":"/ Creates a new `Abortable` future and a `AbortHandle` which can be used to stop it.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\abortable.rs","byte_start":8326742,"byte_end":8326828,"line_start":105,"line_end":105,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\abortable.rs","byte_start":8326829,"byte_end":8326832,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ This function is a convenient (but less flexible) alternative to calling","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\abortable.rs","byte_start":8326833,"byte_end":8326909,"line_start":107,"line_end":107,"column_start":1,"column_end":77}},{"value":"/ `AbortHandle::new` and `Abortable::new` manually.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\abortable.rs","byte_start":8326910,"byte_end":8326963,"line_start":108,"line_end":108,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\abortable.rs","byte_start":8326964,"byte_end":8326967,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\abortable.rs","byte_start":8326968,"byte_end":8327045,"line_start":110,"line_end":110,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\abortable.rs","byte_start":8327046,"byte_end":8327103,"line_start":111,"line_end":111,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":6652},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\abortable.rs","byte_start":8327424,"byte_end":8327431,"line_start":124,"line_end":124,"column_start":12,"column_end":19},"name":"Aborted","qualname":"::future::abortable::Aborted","value":"","parent":null,"children":[],"decl_id":null,"docs":" Indicator that the `Abortable` future was aborted.\n","sig":null,"attributes":[{"value":"/ Indicator that the `Abortable` future was aborted.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\abortable.rs","byte_start":8327313,"byte_end":8327367,"line_start":122,"line_end":122,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":6630},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\abortable.rs","byte_start":8329044,"byte_end":8329049,"line_start":171,"line_end":171,"column_start":12,"column_end":17},"name":"abort","qualname":"<AbortHandle>::abort","value":"fn (&self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Abort the `Abortable` future associated with this handle.","sig":null,"attributes":[{"value":"/ Abort the `Abortable` future associated with this handle.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\abortable.rs","byte_start":8328680,"byte_end":8328741,"line_start":165,"line_end":165,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\abortable.rs","byte_start":8328746,"byte_end":8328749,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ Notifies the Abortable future associated with this handle that it","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\abortable.rs","byte_start":8328754,"byte_end":8328823,"line_start":167,"line_end":167,"column_start":5,"column_end":74}},{"value":"/ should abort. Note that if the future is currently being polled on","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\abortable.rs","byte_start":8328828,"byte_end":8328898,"line_start":168,"line_end":168,"column_start":5,"column_end":75}},{"value":"/ another thread, it will not immediately stop running. Instead, it will","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\abortable.rs","byte_start":8328903,"byte_end":8328977,"line_start":169,"line_end":169,"column_start":5,"column_end":79}},{"value":"/ continue to run until its poll method returns.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\abortable.rs","byte_start":8328982,"byte_end":8329032,"line_start":170,"line_end":170,"column_start":5,"column_end":55}}]},{"kind":"Mod","id":{"krate":0,"index":1044},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"stream","qualname":"::stream","value":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\mod.rs","parent":null,"children":[{"krate":0,"index":1045},{"krate":0,"index":1048},{"krate":0,"index":1052},{"krate":0,"index":2067},{"krate":0,"index":2095},{"krate":0,"index":2096},{"krate":0,"index":2097},{"krate":0,"index":2098},{"krate":0,"index":2099},{"krate":0,"index":2103},{"krate":0,"index":2107},{"krate":0,"index":2624},{"krate":0,"index":2645},{"krate":0,"index":2648},{"krate":0,"index":2663},{"krate":0,"index":2666},{"krate":0,"index":2686},{"krate":0,"index":2689},{"krate":0,"index":2710},{"krate":0,"index":2713},{"krate":0,"index":2737},{"krate":0,"index":2740},{"krate":0,"index":2761},{"krate":0,"index":2764},{"krate":0,"index":2787},{"krate":0,"index":2790},{"krate":0,"index":2824},{"krate":0,"index":2827},{"krate":0,"index":2862},{"krate":0,"index":10288},{"krate":0,"index":10357},{"krate":0,"index":10358},{"krate":0,"index":10589},{"krate":0,"index":10590},{"krate":0,"index":10638}],"decl_id":null,"docs":" Streams","sig":null,"attributes":[{"value":"! Streams","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\mod.rs","byte_start":158170,"byte_end":158181,"line_start":1,"line_end":1,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\mod.rs","byte_start":158182,"byte_end":158185,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This module contains a number of functions for working with `Stream`s,","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\mod.rs","byte_start":158186,"byte_end":158260,"line_start":3,"line_end":3,"column_start":1,"column_end":75}},{"value":"! including the [`StreamExt`] trait and the [`TryStreamExt`] trait which add","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\mod.rs","byte_start":158261,"byte_end":158339,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"! methods to `Stream` types","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\mod.rs","byte_start":158340,"byte_end":158369,"line_start":5,"line_end":5,"column_start":1,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":6665},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\chain.rs","byte_start":207479,"byte_end":207484,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Chain","qualname":"::stream::stream::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":6668},{"krate":0,"index":6669}],"decl_id":null,"docs":" Stream for the [`chain`](super::StreamExt::chain) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\chain.rs","byte_start":207419,"byte_end":207467,"line_start":9,"line_end":9,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\chain.rs","byte_start":207387,"byte_end":207401,"line_start":7,"line_end":7,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":6690},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\chain.rs","byte_start":207479,"byte_end":207484,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"__Chain","qualname":"::stream::stream::chain::_::__Chain","value":"__Chain {  }","parent":null,"children":[{"krate":0,"index":6694},{"krate":0,"index":6695},{"krate":0,"index":6696}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6722},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\collect.rs","byte_start":209646,"byte_end":209653,"line_start":12,"line_end":12,"column_start":12,"column_end":19},"name":"Collect","qualname":"::stream::stream::collect::Collect","value":"Collect {  }","parent":null,"children":[{"krate":0,"index":6726},{"krate":0,"index":6725}],"decl_id":null,"docs":" Future for the [`collect`](super::StreamExt::collect) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\collect.rs","byte_start":209567,"byte_end":209634,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\collect.rs","byte_start":209535,"byte_end":209549,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":6747},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\collect.rs","byte_start":209646,"byte_end":209653,"line_start":12,"line_end":12,"column_start":12,"column_end":19},"name":"__Collect","qualname":"::stream::stream::collect::_::__Collect","value":"__Collect {  }","parent":null,"children":[{"krate":0,"index":6751},{"krate":0,"index":6752}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6778},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\concat.rs","byte_start":211113,"byte_end":211119,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"Concat","qualname":"::stream::stream::concat::Concat","value":"Concat {  }","parent":null,"children":[{"krate":0,"index":6781},{"krate":0,"index":6780}],"decl_id":null,"docs":" Future for the [`concat`](super::StreamExt::concat) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\concat.rs","byte_start":211034,"byte_end":211101,"line_start":10,"line_end":10,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\concat.rs","byte_start":211002,"byte_end":211016,"line_start":8,"line_end":8,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":6799},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\concat.rs","byte_start":211113,"byte_end":211119,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"__Concat","qualname":"::stream::stream::concat::_::__Concat","value":"__Concat {  }","parent":null,"children":[{"krate":0,"index":6802},{"krate":0,"index":6803}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6823},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\enumerate.rs","byte_start":212903,"byte_end":212912,"line_start":12,"line_end":12,"column_start":12,"column_end":21},"name":"Enumerate","qualname":"::stream::stream::enumerate::Enumerate","value":"Enumerate {  }","parent":null,"children":[{"krate":0,"index":6826},{"krate":0,"index":6825}],"decl_id":null,"docs":" Stream for the [`enumerate`](super::StreamExt::enumerate) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\enumerate.rs","byte_start":212843,"byte_end":212891,"line_start":11,"line_end":11,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\enumerate.rs","byte_start":212811,"byte_end":212825,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":6844},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\enumerate.rs","byte_start":212903,"byte_end":212912,"line_start":12,"line_end":12,"column_start":12,"column_end":21},"name":"__Enumerate","qualname":"::stream::stream::enumerate::_::__Enumerate","value":"__Enumerate {  }","parent":null,"children":[{"krate":0,"index":6847},{"krate":0,"index":6848}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6876},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\filter.rs","byte_start":214607,"byte_end":214613,"line_start":14,"line_end":14,"column_start":12,"column_end":18},"name":"Filter","qualname":"::stream::stream::filter::Filter","value":"Filter {  }","parent":null,"children":[{"krate":0,"index":6882},{"krate":0,"index":6880},{"krate":0,"index":6883},{"krate":0,"index":6881}],"decl_id":null,"docs":" Stream for the [`filter`](super::StreamExt::filter) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\filter.rs","byte_start":214547,"byte_end":214595,"line_start":13,"line_end":13,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\filter.rs","byte_start":214532,"byte_end":214546,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":6911},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\filter.rs","byte_start":214607,"byte_end":214613,"line_start":14,"line_end":14,"column_start":12,"column_end":18},"name":"__Filter","qualname":"::stream::stream::filter::_::__Filter","value":"__Filter {  }","parent":null,"children":[{"krate":0,"index":6916},{"krate":0,"index":6917},{"krate":0,"index":6918}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6953},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\filter_map.rs","byte_start":217945,"byte_end":217954,"line_start":14,"line_end":14,"column_start":12,"column_end":21},"name":"FilterMap","qualname":"::stream::stream::filter_map::FilterMap","value":"FilterMap {  }","parent":null,"children":[{"krate":0,"index":6958},{"krate":0,"index":6957},{"krate":0,"index":6959}],"decl_id":null,"docs":" Stream for the [`filter_map`](super::StreamExt::filter_map) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\filter_map.rs","byte_start":217885,"byte_end":217933,"line_start":13,"line_end":13,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\filter_map.rs","byte_start":217870,"byte_end":217884,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":6985},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\filter_map.rs","byte_start":217945,"byte_end":217954,"line_start":14,"line_end":14,"column_start":12,"column_end":21},"name":"__FilterMap","qualname":"::stream::stream::filter_map::_::__FilterMap","value":"__FilterMap {  }","parent":null,"children":[{"krate":0,"index":6990},{"krate":0,"index":6991},{"krate":0,"index":6992}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7027},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\flatten.rs","byte_start":221027,"byte_end":221034,"line_start":12,"line_end":12,"column_start":12,"column_end":19},"name":"Flatten","qualname":"::stream::stream::flatten::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":7030},{"krate":0,"index":7031}],"decl_id":null,"docs":" Stream for the [`flatten`](super::StreamExt::flatten) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\flatten.rs","byte_start":220967,"byte_end":221015,"line_start":11,"line_end":11,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\flatten.rs","byte_start":220935,"byte_end":220949,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7052},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\flatten.rs","byte_start":221027,"byte_end":221034,"line_start":12,"line_end":12,"column_start":12,"column_end":19},"name":"__Flatten","qualname":"::stream::stream::flatten::_::__Flatten","value":"__Flatten {  }","parent":null,"children":[{"krate":0,"index":7056},{"krate":0,"index":7057},{"krate":0,"index":7058}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7094},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"Flatten","qualname":"::stream::stream::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":7096}],"decl_id":null,"docs":" Stream for the [`inspect`](StreamExt::inspect) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":7112},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"__Flatten","qualname":"::stream::stream::_::__Flatten","value":"__Flatten {  }","parent":null,"children":[{"krate":0,"index":7115},{"krate":0,"index":7116}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7160},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\fold.rs","byte_start":222836,"byte_end":222840,"line_start":11,"line_end":11,"column_start":12,"column_end":16},"name":"Fold","qualname":"::stream::stream::fold::Fold","value":"Fold {  }","parent":null,"children":[{"krate":0,"index":7167},{"krate":0,"index":7165},{"krate":0,"index":7166},{"krate":0,"index":7168}],"decl_id":null,"docs":" Future for the [`fold`](super::StreamExt::fold) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\fold.rs","byte_start":222757,"byte_end":222824,"line_start":10,"line_end":10,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\fold.rs","byte_start":222742,"byte_end":222756,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7199},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\fold.rs","byte_start":222836,"byte_end":222840,"line_start":11,"line_end":11,"column_start":12,"column_end":16},"name":"__Fold","qualname":"::stream::stream::fold::_::__Fold","value":"__Fold {  }","parent":null,"children":[{"krate":0,"index":7205},{"krate":0,"index":7206},{"krate":0,"index":7207}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7239},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\forward.rs","byte_start":225416,"byte_end":225423,"line_start":13,"line_end":13,"column_start":12,"column_end":19},"name":"Forward","qualname":"::stream::stream::forward::Forward","value":"Forward {  }","parent":null,"children":[{"krate":0,"index":7244},{"krate":0,"index":7245},{"krate":0,"index":7243}],"decl_id":null,"docs":" Future for the [`forward`](super::StreamExt::forward) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\forward.rs","byte_start":225337,"byte_end":225404,"line_start":12,"line_end":12,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\forward.rs","byte_start":225305,"byte_end":225319,"line_start":10,"line_end":10,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7271},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\forward.rs","byte_start":225416,"byte_end":225423,"line_start":13,"line_end":13,"column_start":12,"column_end":19},"name":"__Forward","qualname":"::stream::stream::forward::_::__Forward","value":"__Forward {  }","parent":null,"children":[{"krate":0,"index":7276},{"krate":0,"index":7277},{"krate":0,"index":7278}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7313},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"Forward","qualname":"::stream::stream::Forward","value":"Forward {  }","parent":null,"children":[{"krate":0,"index":7316}],"decl_id":null,"docs":" Future for the [`forward`](super::StreamExt::forward) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":7335},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"__Forward","qualname":"::stream::stream::_::__Forward","value":"__Forward {  }","parent":null,"children":[{"krate":0,"index":7339},{"krate":0,"index":7340}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7378},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\for_each.rs","byte_start":227705,"byte_end":227712,"line_start":11,"line_end":11,"column_start":12,"column_end":19},"name":"ForEach","qualname":"::stream::stream::for_each::ForEach","value":"ForEach {  }","parent":null,"children":[{"krate":0,"index":7383},{"krate":0,"index":7382},{"krate":0,"index":7384}],"decl_id":null,"docs":" Future for the [`for_each`](super::StreamExt::for_each) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\for_each.rs","byte_start":227626,"byte_end":227693,"line_start":10,"line_end":10,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\for_each.rs","byte_start":227611,"byte_end":227625,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7410},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\for_each.rs","byte_start":227705,"byte_end":227712,"line_start":11,"line_end":11,"column_start":12,"column_end":19},"name":"__ForEach","qualname":"::stream::stream::for_each::_::__ForEach","value":"__ForEach {  }","parent":null,"children":[{"krate":0,"index":7415},{"krate":0,"index":7416},{"krate":0,"index":7417}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7444},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\fuse.rs","byte_start":229731,"byte_end":229735,"line_start":12,"line_end":12,"column_start":12,"column_end":16},"name":"Fuse","qualname":"::stream::stream::fuse::Fuse","value":"Fuse {  }","parent":null,"children":[{"krate":0,"index":7447},{"krate":0,"index":7446}],"decl_id":null,"docs":" Stream for the [`fuse`](super::StreamExt::fuse) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\fuse.rs","byte_start":229671,"byte_end":229719,"line_start":11,"line_end":11,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\fuse.rs","byte_start":229639,"byte_end":229653,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7465},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\fuse.rs","byte_start":229731,"byte_end":229735,"line_start":12,"line_end":12,"column_start":12,"column_end":16},"name":"__Fuse","qualname":"::stream::stream::fuse::_::__Fuse","value":"__Fuse {  }","parent":null,"children":[{"krate":0,"index":7468},{"krate":0,"index":7469}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1413},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\fuse.rs","byte_start":230173,"byte_end":230180,"line_start":28,"line_end":28,"column_start":12,"column_end":19},"name":"is_done","qualname":"<Fuse<St>>::is_done","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the underlying stream has finished or not.","sig":null,"attributes":[{"value":"/ Returns whether the underlying stream has finished or not.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\fuse.rs","byte_start":229904,"byte_end":229966,"line_start":23,"line_end":23,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\fuse.rs","byte_start":229971,"byte_end":229974,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ If this method returns `true`, then all future calls to poll are","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\fuse.rs","byte_start":229979,"byte_end":230047,"line_start":25,"line_end":25,"column_start":5,"column_end":73}},{"value":"/ guaranteed to return `None`. If this returns `false`, then the","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\fuse.rs","byte_start":230052,"byte_end":230118,"line_start":26,"line_end":26,"column_start":5,"column_end":71}},{"value":"/ underlying stream is still in use.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\fuse.rs","byte_start":230123,"byte_end":230161,"line_start":27,"line_end":27,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":7497},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\into_future.rs","byte_start":231573,"byte_end":231585,"line_start":10,"line_end":10,"column_start":12,"column_end":24},"name":"StreamFuture","qualname":"::stream::stream::into_future::StreamFuture","value":"StreamFuture {  }","parent":null,"children":[{"krate":0,"index":7499}],"decl_id":null,"docs":" Future for the [`into_future`](super::StreamExt::into_future) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`into_future`](super::StreamExt::into_future) method.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\into_future.rs","byte_start":231403,"byte_end":231476,"line_start":7,"line_end":7,"column_start":1,"column_end":74}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\into_future.rs","byte_start":231494,"byte_end":231561,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1439},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\into_future.rs","byte_start":232168,"byte_end":232175,"line_start":26,"line_end":26,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<StreamFuture<St>>::get_ref","value":"fn (&self) -> Option<&St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\into_future.rs","byte_start":231776,"byte_end":231849,"line_start":19,"line_end":19,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\into_future.rs","byte_start":231854,"byte_end":231871,"line_start":20,"line_end":20,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\into_future.rs","byte_start":231876,"byte_end":231879,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\into_future.rs","byte_start":231884,"byte_end":231965,"line_start":22,"line_end":22,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\into_future.rs","byte_start":231970,"byte_end":232052,"line_start":23,"line_end":23,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\into_future.rs","byte_start":232057,"byte_end":232136,"line_start":24,"line_end":24,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\into_future.rs","byte_start":232141,"byte_end":232156,"line_start":25,"line_end":25,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1440},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\into_future.rs","byte_start":232786,"byte_end":232793,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<StreamFuture<St>>::get_mut","value":"fn (&mut self) -> Option<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\into_future.rs","byte_start":232240,"byte_end":232307,"line_start":30,"line_end":30,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\into_future.rs","byte_start":232312,"byte_end":232343,"line_start":31,"line_end":31,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\into_future.rs","byte_start":232348,"byte_end":232351,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\into_future.rs","byte_start":232356,"byte_end":232429,"line_start":33,"line_end":33,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\into_future.rs","byte_start":232434,"byte_end":232489,"line_start":34,"line_end":34,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\into_future.rs","byte_start":232494,"byte_end":232497,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\into_future.rs","byte_start":232502,"byte_end":232583,"line_start":36,"line_end":36,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\into_future.rs","byte_start":232588,"byte_end":232670,"line_start":37,"line_end":37,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\into_future.rs","byte_start":232675,"byte_end":232754,"line_start":38,"line_end":38,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\into_future.rs","byte_start":232759,"byte_end":232774,"line_start":39,"line_end":39,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1441},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\into_future.rs","byte_start":233419,"byte_end":233430,"line_start":54,"line_end":54,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<StreamFuture<St>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Option<Pin<&mut St>>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\into_future.rs","byte_start":232866,"byte_end":232940,"line_start":44,"line_end":44,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\into_future.rs","byte_start":232945,"byte_end":232976,"line_start":45,"line_end":45,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\into_future.rs","byte_start":232981,"byte_end":232984,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\into_future.rs","byte_start":232989,"byte_end":233062,"line_start":47,"line_end":47,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\into_future.rs","byte_start":233067,"byte_end":233122,"line_start":48,"line_end":48,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\into_future.rs","byte_start":233127,"byte_end":233130,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\into_future.rs","byte_start":233135,"byte_end":233216,"line_start":50,"line_end":50,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\into_future.rs","byte_start":233221,"byte_end":233303,"line_start":51,"line_end":51,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\into_future.rs","byte_start":233308,"byte_end":233387,"line_start":52,"line_end":52,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\into_future.rs","byte_start":233392,"byte_end":233407,"line_start":53,"line_end":53,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1442},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\into_future.rs","byte_start":234067,"byte_end":234077,"line_start":67,"line_end":67,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<StreamFuture<St>>::into_inner","value":"fn (self) -> Option<St>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\into_future.rs","byte_start":233547,"byte_end":233609,"line_start":58,"line_end":58,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\into_future.rs","byte_start":233614,"byte_end":233617,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\into_future.rs","byte_start":233622,"byte_end":233694,"line_start":60,"line_end":60,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\into_future.rs","byte_start":233699,"byte_end":233770,"line_start":61,"line_end":61,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\into_future.rs","byte_start":233775,"byte_end":233778,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\into_future.rs","byte_start":233783,"byte_end":233864,"line_start":63,"line_end":63,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\into_future.rs","byte_start":233869,"byte_end":233951,"line_start":64,"line_end":64,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\into_future.rs","byte_start":233956,"byte_end":234035,"line_start":65,"line_end":65,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\into_future.rs","byte_start":234040,"byte_end":234055,"line_start":66,"line_end":66,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7506},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"Inspect","qualname":"::stream::stream::Inspect","value":"Inspect {  }","parent":null,"children":[{"krate":0,"index":7509}],"decl_id":null,"docs":" Stream for the [`inspect`](StreamExt::inspect) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":7528},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"__Inspect","qualname":"::stream::stream::_::__Inspect","value":"__Inspect {  }","parent":null,"children":[{"krate":0,"index":7532},{"krate":0,"index":7533}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7588},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\map.rs","byte_start":235093,"byte_end":235096,"line_start":14,"line_end":14,"column_start":12,"column_end":15},"name":"Map","qualname":"::stream::stream::map::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":7592},{"krate":0,"index":7591}],"decl_id":null,"docs":" Stream for the [`map`](super::StreamExt::map) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\map.rs","byte_start":235033,"byte_end":235081,"line_start":13,"line_end":13,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\map.rs","byte_start":235018,"byte_end":235032,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7613},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\map.rs","byte_start":235093,"byte_end":235096,"line_start":14,"line_end":14,"column_start":12,"column_end":15},"name":"__Map","qualname":"::stream::stream::map::_::__Map","value":"__Map {  }","parent":null,"children":[{"krate":0,"index":7617},{"krate":0,"index":7618}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7653},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"FlatMap","qualname":"::stream::stream::FlatMap","value":"FlatMap {  }","parent":null,"children":[{"krate":0,"index":7657}],"decl_id":null,"docs":" Stream for the [`flat_map`](StreamExt::flat_map) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":7679},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"__FlatMap","qualname":"::stream::stream::_::__FlatMap","value":"__FlatMap {  }","parent":null,"children":[{"krate":0,"index":7684},{"krate":0,"index":7685}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7751},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\next.rs","byte_start":236834,"byte_end":236838,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Next","qualname":"::stream::stream::next::Next","value":"Next {  }","parent":null,"children":[{"krate":0,"index":7754}],"decl_id":null,"docs":" Future for the [`next`](super::StreamExt::next) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`next`](super::StreamExt::next) method.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\next.rs","byte_start":236678,"byte_end":236737,"line_start":7,"line_end":7,"column_start":1,"column_end":60}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\next.rs","byte_start":236755,"byte_end":236822,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":7759},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\select_next_some.rs","byte_start":237844,"byte_end":237858,"line_start":11,"line_end":11,"column_start":12,"column_end":26},"name":"SelectNextSome","qualname":"::stream::stream::select_next_some::SelectNextSome","value":"SelectNextSome {  }","parent":null,"children":[{"krate":0,"index":7762}],"decl_id":null,"docs":" Future for the [`select_next_some`](super::StreamExt::select_next_some)\n method.\n","sig":null,"attributes":[{"value":"/ Future for the [`select_next_some`](super::StreamExt::select_next_some)","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\select_next_some.rs","byte_start":237660,"byte_end":237735,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ method.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\select_next_some.rs","byte_start":237736,"byte_end":237747,"line_start":8,"line_end":8,"column_start":1,"column_end":12}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\select_next_some.rs","byte_start":237765,"byte_end":237832,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":7767},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\peek.rs","byte_start":239352,"byte_end":239360,"line_start":19,"line_end":19,"column_start":12,"column_end":20},"name":"Peekable","qualname":"::stream::stream::peek::Peekable","value":"Peekable {  }","parent":null,"children":[{"krate":0,"index":7770},{"krate":0,"index":7769}],"decl_id":null,"docs":" A `Stream` that implements a `peek` method.","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\peek.rs","byte_start":239292,"byte_end":239340,"line_start":18,"line_end":18,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\peek.rs","byte_start":239260,"byte_end":239274,"line_start":16,"line_end":16,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7788},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\peek.rs","byte_start":239352,"byte_end":239360,"line_start":19,"line_end":19,"column_start":12,"column_end":20},"name":"__Peekable","qualname":"::stream::stream::peek::_::__Peekable","value":"__Peekable {  }","parent":null,"children":[{"krate":0,"index":7791},{"krate":0,"index":7792}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1558},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\peek.rs","byte_start":239827,"byte_end":239831,"line_start":37,"line_end":37,"column_start":12,"column_end":16},"name":"peek","qualname":"<Peekable<St>>::peek","value":"fn (self: Pin<&mut Self>) -> Peek<'_, St>","parent":null,"children":[],"decl_id":null,"docs":" Produces a `Peek` future which retrieves a reference to the next item\n in the stream, or `None` if the underlying stream terminates.\n","sig":null,"attributes":[{"value":"/ Produces a `Peek` future which retrieves a reference to the next item","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\peek.rs","byte_start":239672,"byte_end":239745,"line_start":35,"line_end":35,"column_start":5,"column_end":78}},{"value":"/ in the stream, or `None` if the underlying stream terminates.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\peek.rs","byte_start":239750,"byte_end":239815,"line_start":36,"line_end":36,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":7815},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\peek.rs","byte_start":240171,"byte_end":240180,"line_start":46,"line_end":46,"column_start":12,"column_end":21},"name":"poll_peek","qualname":"<Peekable<St>>::poll_peek","value":"fn (self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Option<&St::Item>>","parent":null,"children":[],"decl_id":null,"docs":" Peek retrieves a reference to the next item in the stream.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7821},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\peek.rs","byte_start":241959,"byte_end":241963,"line_start":110,"line_end":110,"column_start":12,"column_end":16},"name":"Peek","qualname":"::stream::stream::peek::Peek","value":"Peek {  }","parent":null,"children":[{"krate":0,"index":7824}],"decl_id":null,"docs":" Future for the [`Peekable::peek()`](self::Peekable::peek) function from [`Peekable`]\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\peek.rs","byte_start":241899,"byte_end":241947,"line_start":109,"line_end":109,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\peek.rs","byte_start":241884,"byte_end":241898,"line_start":108,"line_end":108,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7843},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\peek.rs","byte_start":241959,"byte_end":241963,"line_start":110,"line_end":110,"column_start":12,"column_end":16},"name":"__Peek","qualname":"::stream::stream::peek::_::__Peek","value":"__Peek {  }","parent":null,"children":[{"krate":0,"index":7847},{"krate":0,"index":7848}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7869},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\skip.rs","byte_start":243226,"byte_end":243230,"line_start":12,"line_end":12,"column_start":12,"column_end":16},"name":"Skip","qualname":"::stream::stream::skip::Skip","value":"Skip {  }","parent":null,"children":[{"krate":0,"index":7872},{"krate":0,"index":7871}],"decl_id":null,"docs":" Stream for the [`skip`](super::StreamExt::skip) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\skip.rs","byte_start":243166,"byte_end":243214,"line_start":11,"line_end":11,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\skip.rs","byte_start":243134,"byte_end":243148,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7890},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\skip.rs","byte_start":243226,"byte_end":243230,"line_start":12,"line_end":12,"column_start":12,"column_end":16},"name":"__Skip","qualname":"::stream::stream::skip::_::__Skip","value":"__Skip {  }","parent":null,"children":[{"krate":0,"index":7893},{"krate":0,"index":7894}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7922},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\skip_while.rs","byte_start":245122,"byte_end":245131,"line_start":13,"line_end":13,"column_start":12,"column_end":21},"name":"SkipWhile","qualname":"::stream::stream::skip_while::SkipWhile","value":"SkipWhile {  }","parent":null,"children":[{"krate":0,"index":7929},{"krate":0,"index":7926},{"krate":0,"index":7930},{"krate":0,"index":7927},{"krate":0,"index":7928}],"decl_id":null,"docs":" Stream for the [`skip_while`](super::StreamExt::skip_while) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\skip_while.rs","byte_start":245062,"byte_end":245110,"line_start":12,"line_end":12,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\skip_while.rs","byte_start":245047,"byte_end":245061,"line_start":11,"line_end":11,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7960},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\skip_while.rs","byte_start":245122,"byte_end":245131,"line_start":13,"line_end":13,"column_start":12,"column_end":21},"name":"__SkipWhile","qualname":"::stream::stream::skip_while::_::__SkipWhile","value":"__SkipWhile {  }","parent":null,"children":[{"krate":0,"index":7965},{"krate":0,"index":7966},{"krate":0,"index":7967}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8002},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\take.rs","byte_start":248775,"byte_end":248779,"line_start":13,"line_end":13,"column_start":12,"column_end":16},"name":"Take","qualname":"::stream::stream::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":8005},{"krate":0,"index":8004}],"decl_id":null,"docs":" Stream for the [`take`](super::StreamExt::take) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\take.rs","byte_start":248715,"byte_end":248763,"line_start":12,"line_end":12,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\take.rs","byte_start":248683,"byte_end":248697,"line_start":10,"line_end":10,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":8023},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\take.rs","byte_start":248775,"byte_end":248779,"line_start":13,"line_end":13,"column_start":12,"column_end":16},"name":"__Take","qualname":"::stream::stream::take::_::__Take","value":"__Take {  }","parent":null,"children":[{"krate":0,"index":8026},{"krate":0,"index":8027}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8055},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\take_while.rs","byte_start":250870,"byte_end":250879,"line_start":13,"line_end":13,"column_start":12,"column_end":21},"name":"TakeWhile","qualname":"::stream::stream::take_while::TakeWhile","value":"TakeWhile {  }","parent":null,"children":[{"krate":0,"index":8062},{"krate":0,"index":8059},{"krate":0,"index":8063},{"krate":0,"index":8060},{"krate":0,"index":8061}],"decl_id":null,"docs":" Stream for the [`take_while`](super::StreamExt::take_while) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\take_while.rs","byte_start":250810,"byte_end":250858,"line_start":12,"line_end":12,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\take_while.rs","byte_start":250795,"byte_end":250809,"line_start":11,"line_end":11,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":8093},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\take_while.rs","byte_start":250870,"byte_end":250879,"line_start":13,"line_end":13,"column_start":12,"column_end":21},"name":"__TakeWhile","qualname":"::stream::stream::take_while::_::__TakeWhile","value":"__TakeWhile {  }","parent":null,"children":[{"krate":0,"index":8098},{"krate":0,"index":8099},{"krate":0,"index":8100}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8135},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\take_until.rs","byte_start":254499,"byte_end":254508,"line_start":15,"line_end":15,"column_start":12,"column_end":21},"name":"TakeUntil","qualname":"::stream::stream::take_until::TakeUntil","value":"TakeUntil {  }","parent":null,"children":[{"krate":0,"index":8140},{"krate":0,"index":8141},{"krate":0,"index":8138},{"krate":0,"index":8139}],"decl_id":null,"docs":" Stream for the [`take_until`](super::StreamExt::take_until) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\take_until.rs","byte_start":254439,"byte_end":254487,"line_start":14,"line_end":14,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\take_until.rs","byte_start":254424,"byte_end":254438,"line_start":13,"line_end":13,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":8166},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\take_until.rs","byte_start":254499,"byte_end":254508,"line_start":15,"line_end":15,"column_start":12,"column_end":21},"name":"__TakeUntil","qualname":"::stream::stream::take_until::_::__TakeUntil","value":"__TakeUntil {  }","parent":null,"children":[{"krate":0,"index":8170},{"krate":0,"index":8171},{"krate":0,"index":8172}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1745},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\take_until.rs","byte_start":255865,"byte_end":255876,"line_start":62,"line_end":62,"column_start":12,"column_end":23},"name":"take_future","qualname":"<TakeUntil<St, Fut>>::take_future","value":"fn (&mut self) -> Option<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Extract the stopping future out of the combinator.\n The future is returned only if it isn't resolved yet, ie. if the stream isn't stopped yet.\n Taking out the future means the combinator will be yielding\n elements from the wrapped stream without ever stopping it.\n","sig":null,"attributes":[{"value":"/ Extract the stopping future out of the combinator.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\take_until.rs","byte_start":255565,"byte_end":255619,"line_start":58,"line_end":58,"column_start":5,"column_end":59}},{"value":"/ The future is returned only if it isn't resolved yet, ie. if the stream isn't stopped yet.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\take_until.rs","byte_start":255624,"byte_end":255718,"line_start":59,"line_end":59,"column_start":5,"column_end":99}},{"value":"/ Taking out the future means the combinator will be yielding","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\take_until.rs","byte_start":255723,"byte_end":255786,"line_start":60,"line_end":60,"column_start":5,"column_end":68}},{"value":"/ elements from the wrapped stream without ever stopping it.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\take_until.rs","byte_start":255791,"byte_end":255853,"line_start":61,"line_end":61,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1746},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\take_until.rs","byte_start":257160,"byte_end":257171,"line_start":106,"line_end":106,"column_start":12,"column_end":23},"name":"take_result","qualname":"<TakeUntil<St, Fut>>::take_result","value":"fn (&mut self) -> Option<Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Once the stopping future is resolved, this method can be used\n to extract the value returned by the stopping future.","sig":null,"attributes":[{"value":"/ Once the stopping future is resolved, this method can be used","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\take_until.rs","byte_start":256013,"byte_end":256078,"line_start":70,"line_end":70,"column_start":5,"column_end":70}},{"value":"/ to extract the value returned by the stopping future.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\take_until.rs","byte_start":256083,"byte_end":256140,"line_start":71,"line_end":71,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\take_until.rs","byte_start":256145,"byte_end":256148,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ This may be used to retrieve arbitrary data from the stopping","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\take_until.rs","byte_start":256153,"byte_end":256218,"line_start":73,"line_end":73,"column_start":5,"column_end":70}},{"value":"/ future, for example a reason why the stream was stopped.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\take_until.rs","byte_start":256223,"byte_end":256283,"line_start":74,"line_end":74,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\take_until.rs","byte_start":256288,"byte_end":256291,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ This method will return `None` if the future isn't resovled yet,","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\take_until.rs","byte_start":256296,"byte_end":256364,"line_start":76,"line_end":76,"column_start":5,"column_end":73}},{"value":"/ or if the result was already taken out.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\take_until.rs","byte_start":256369,"byte_end":256412,"line_start":77,"line_end":77,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\take_until.rs","byte_start":256417,"byte_end":256420,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\take_until.rs","byte_start":256425,"byte_end":256439,"line_start":79,"line_end":79,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\take_until.rs","byte_start":256444,"byte_end":256447,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\take_until.rs","byte_start":256452,"byte_end":256459,"line_start":81,"line_end":81,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\take_until.rs","byte_start":256464,"byte_end":256505,"line_start":82,"line_end":82,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\take_until.rs","byte_start":256510,"byte_end":256534,"line_start":83,"line_end":83,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\take_until.rs","byte_start":256539,"byte_end":256582,"line_start":84,"line_end":84,"column_start":5,"column_end":48}},{"value":"/ use futures::task::Poll;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\take_until.rs","byte_start":256587,"byte_end":256615,"line_start":85,"line_end":85,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\take_until.rs","byte_start":256620,"byte_end":256623,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\take_until.rs","byte_start":256628,"byte_end":256666,"line_start":87,"line_end":87,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\take_until.rs","byte_start":256671,"byte_end":256674,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ let mut i = 0;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\take_until.rs","byte_start":256679,"byte_end":256697,"line_start":89,"line_end":89,"column_start":5,"column_end":23}},{"value":"/ let stop_fut = future::poll_fn(|_cx| {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\take_until.rs","byte_start":256702,"byte_end":256744,"line_start":90,"line_end":90,"column_start":5,"column_end":47}},{"value":"/     i += 1;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\take_until.rs","byte_start":256749,"byte_end":256764,"line_start":91,"line_end":91,"column_start":5,"column_end":20}},{"value":"/     if i <= 5 {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\take_until.rs","byte_start":256769,"byte_end":256788,"line_start":92,"line_end":92,"column_start":5,"column_end":24}},{"value":"/         Poll::Pending","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\take_until.rs","byte_start":256793,"byte_end":256818,"line_start":93,"line_end":93,"column_start":5,"column_end":30}},{"value":"/     } else {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\take_until.rs","byte_start":256823,"byte_end":256839,"line_start":94,"line_end":94,"column_start":5,"column_end":21}},{"value":"/         Poll::Ready(\"reason\")","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\take_until.rs","byte_start":256844,"byte_end":256877,"line_start":95,"line_end":95,"column_start":5,"column_end":38}},{"value":"/     }","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\take_until.rs","byte_start":256882,"byte_end":256891,"line_start":96,"line_end":96,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\take_until.rs","byte_start":256896,"byte_end":256903,"line_start":97,"line_end":97,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\take_until.rs","byte_start":256908,"byte_end":256911,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream.take_until(stop_fut);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\take_until.rs","byte_start":256916,"byte_end":256965,"line_start":99,"line_end":99,"column_start":5,"column_end":54}},{"value":"/ let _ = stream.by_ref().collect::<Vec<_>>().await;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\take_until.rs","byte_start":256970,"byte_end":257024,"line_start":100,"line_end":100,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\take_until.rs","byte_start":257029,"byte_end":257032,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ let result = stream.take_result().unwrap();","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\take_until.rs","byte_start":257037,"byte_end":257084,"line_start":102,"line_end":102,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(result, \"reason\");","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\take_until.rs","byte_start":257089,"byte_end":257122,"line_start":103,"line_end":103,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\take_until.rs","byte_start":257127,"byte_end":257136,"line_start":104,"line_end":104,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\take_until.rs","byte_start":257141,"byte_end":257148,"line_start":105,"line_end":105,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1747},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\take_until.rs","byte_start":257347,"byte_end":257357,"line_start":112,"line_end":112,"column_start":12,"column_end":22},"name":"is_stopped","qualname":"<TakeUntil<St, Fut>>::is_stopped","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether the stream was stopped yet by the stopping future\n being resolved.\n","sig":null,"attributes":[{"value":"/ Whether the stream was stopped yet by the stopping future","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\take_until.rs","byte_start":257250,"byte_end":257311,"line_start":110,"line_end":110,"column_start":5,"column_end":66}},{"value":"/ being resolved.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\take_until.rs","byte_start":257316,"byte_end":257335,"line_start":111,"line_end":111,"column_start":5,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":8202},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\then.rs","byte_start":259296,"byte_end":259300,"line_start":13,"line_end":13,"column_start":12,"column_end":16},"name":"Then","qualname":"::stream::stream::then::Then","value":"Then {  }","parent":null,"children":[{"krate":0,"index":8207},{"krate":0,"index":8208},{"krate":0,"index":8206}],"decl_id":null,"docs":" Stream for the [`then`](super::StreamExt::then) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\then.rs","byte_start":259236,"byte_end":259284,"line_start":12,"line_end":12,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\then.rs","byte_start":259221,"byte_end":259235,"line_start":11,"line_end":11,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":8234},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\then.rs","byte_start":259296,"byte_end":259300,"line_start":13,"line_end":13,"column_start":12,"column_end":16},"name":"__Then","qualname":"::stream::stream::then::_::__Then","value":"__Then {  }","parent":null,"children":[{"krate":0,"index":8239},{"krate":0,"index":8240},{"krate":0,"index":8241}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8276},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\zip.rs","byte_start":261987,"byte_end":261990,"line_start":12,"line_end":12,"column_start":12,"column_end":15},"name":"Zip","qualname":"::stream::stream::zip::Zip","value":"Zip {  }","parent":null,"children":[{"krate":0,"index":8281},{"krate":0,"index":8282},{"krate":0,"index":8279},{"krate":0,"index":8280}],"decl_id":null,"docs":" Stream for the [`zip`](super::StreamExt::zip) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\zip.rs","byte_start":261927,"byte_end":261975,"line_start":11,"line_end":11,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\zip.rs","byte_start":261895,"byte_end":261909,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":8307},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\zip.rs","byte_start":261987,"byte_end":261990,"line_start":12,"line_end":12,"column_start":12,"column_end":15},"name":"__Zip","qualname":"::stream::stream::zip::_::__Zip","value":"__Zip {  }","parent":null,"children":[{"krate":0,"index":8311},{"krate":0,"index":8312},{"krate":0,"index":8313}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1824},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\zip.rs","byte_start":262543,"byte_end":262550,"line_start":33,"line_end":33,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Zip<St1, St2>>::get_ref","value":"fn (&self) -> (&St1, &St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying streams that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying streams that this combinator is","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\zip.rs","byte_start":262435,"byte_end":262509,"line_start":31,"line_end":31,"column_start":5,"column_end":79}},{"value":"/ pulling from.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\zip.rs","byte_start":262514,"byte_end":262531,"line_start":32,"line_end":32,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1825},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\zip.rs","byte_start":262906,"byte_end":262913,"line_start":42,"line_end":42,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Zip<St1, St2>>::get_mut","value":"fn (&mut self) -> (&mut St1, &mut St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying streams that this","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\zip.rs","byte_start":262644,"byte_end":262712,"line_start":37,"line_end":37,"column_start":5,"column_end":73}},{"value":"/ combinator is pulling from.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\zip.rs","byte_start":262717,"byte_end":262748,"line_start":38,"line_end":38,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\zip.rs","byte_start":262753,"byte_end":262756,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\zip.rs","byte_start":262761,"byte_end":262834,"line_start":40,"line_end":40,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\zip.rs","byte_start":262839,"byte_end":262894,"line_start":41,"line_end":41,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1826},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\zip.rs","byte_start":263288,"byte_end":263299,"line_start":51,"line_end":51,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Zip<St1, St2>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> (Pin<&mut St1>, Pin<&mut St2>)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying streams that this","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\zip.rs","byte_start":263019,"byte_end":263094,"line_start":46,"line_end":46,"column_start":5,"column_end":80}},{"value":"/ combinator is pulling from.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\zip.rs","byte_start":263099,"byte_end":263130,"line_start":47,"line_end":47,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\zip.rs","byte_start":263135,"byte_end":263138,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\zip.rs","byte_start":263143,"byte_end":263216,"line_start":49,"line_end":49,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\zip.rs","byte_start":263221,"byte_end":263276,"line_start":50,"line_end":50,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1827},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\zip.rs","byte_start":263805,"byte_end":263815,"line_start":62,"line_end":62,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Zip<St1, St2>>::into_inner","value":"fn (self) -> (St1, St2)","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying streams.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying streams.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\zip.rs","byte_start":263569,"byte_end":263632,"line_start":58,"line_end":58,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\zip.rs","byte_start":263637,"byte_end":263640,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\zip.rs","byte_start":263645,"byte_end":263717,"line_start":60,"line_end":60,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\zip.rs","byte_start":263722,"byte_end":263793,"line_start":61,"line_end":61,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":8339},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\chunks.rs","byte_start":266638,"byte_end":266644,"line_start":15,"line_end":15,"column_start":12,"column_end":18},"name":"Chunks","qualname":"::stream::stream::chunks::Chunks","value":"Chunks {  }","parent":null,"children":[{"krate":0,"index":8343},{"krate":0,"index":8341},{"krate":0,"index":8342}],"decl_id":null,"docs":" Stream for the [`chunks`](super::StreamExt::chunks) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\chunks.rs","byte_start":266578,"byte_end":266626,"line_start":14,"line_end":14,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\chunks.rs","byte_start":266546,"byte_end":266560,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":8363},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\chunks.rs","byte_start":266638,"byte_end":266644,"line_start":15,"line_end":15,"column_start":12,"column_end":18},"name":"__Chunks","qualname":"::stream::stream::chunks::_::__Chunks","value":"__Chunks {  }","parent":null,"children":[{"krate":0,"index":8366},{"krate":0,"index":8367}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8395},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\ready_chunks.rs","byte_start":269769,"byte_end":269780,"line_start":15,"line_end":15,"column_start":12,"column_end":23},"name":"ReadyChunks","qualname":"::stream::stream::ready_chunks::ReadyChunks","value":"ReadyChunks {  }","parent":null,"children":[{"krate":0,"index":8399},{"krate":0,"index":8397},{"krate":0,"index":8398}],"decl_id":null,"docs":" Stream for the [`ready_chunks`](super::StreamExt::ready_chunks) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\ready_chunks.rs","byte_start":269709,"byte_end":269757,"line_start":14,"line_end":14,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\ready_chunks.rs","byte_start":269677,"byte_end":269691,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":8419},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\ready_chunks.rs","byte_start":269769,"byte_end":269780,"line_start":15,"line_end":15,"column_start":12,"column_end":23},"name":"__ReadyChunks","qualname":"::stream::stream::ready_chunks::_::__ReadyChunks","value":"__ReadyChunks {  }","parent":null,"children":[{"krate":0,"index":8422},{"krate":0,"index":8423}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8451},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\scan.rs","byte_start":273234,"byte_end":273238,"line_start":18,"line_end":18,"column_start":12,"column_end":16},"name":"Scan","qualname":"::stream::stream::scan::Scan","value":"Scan {  }","parent":null,"children":[{"krate":0,"index":8457},{"krate":0,"index":8456},{"krate":0,"index":8458}],"decl_id":null,"docs":" Stream for the [`scan`](super::StreamExt::scan) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\scan.rs","byte_start":273174,"byte_end":273222,"line_start":17,"line_end":17,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\scan.rs","byte_start":273159,"byte_end":273173,"line_start":16,"line_end":16,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":8487},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\scan.rs","byte_start":273234,"byte_end":273238,"line_start":18,"line_end":18,"column_start":12,"column_end":16},"name":"__Scan","qualname":"::stream::stream::scan::_::__Scan","value":"__Scan {  }","parent":null,"children":[{"krate":0,"index":8493},{"krate":0,"index":8494},{"krate":0,"index":8495}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11845},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\buffer_unordered.rs","byte_start":8361457,"byte_end":8361472,"line_start":15,"line_end":15,"column_start":12,"column_end":27},"name":"BufferUnordered","qualname":"::stream::stream::buffer_unordered::BufferUnordered","value":"BufferUnordered {  }","parent":null,"children":[{"krate":0,"index":11849},{"krate":0,"index":11847},{"krate":0,"index":11848}],"decl_id":null,"docs":" Stream for the [`buffer_unordered`](super::StreamExt::buffer_unordered)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\buffer_unordered.rs","byte_start":8361397,"byte_end":8361445,"line_start":14,"line_end":14,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\buffer_unordered.rs","byte_start":8361382,"byte_end":8361396,"line_start":13,"line_end":13,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":11869},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\buffer_unordered.rs","byte_start":8361457,"byte_end":8361472,"line_start":15,"line_end":15,"column_start":12,"column_end":27},"name":"__BufferUnordered","qualname":"::stream::stream::buffer_unordered::_::__BufferUnordered","value":"__BufferUnordered {  }","parent":null,"children":[{"krate":0,"index":11872},{"krate":0,"index":11873}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11800},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\buffered.rs","byte_start":8364817,"byte_end":8364825,"line_start":14,"line_end":14,"column_start":12,"column_end":20},"name":"Buffered","qualname":"::stream::stream::buffered::Buffered","value":"Buffered {  }","parent":null,"children":[{"krate":0,"index":11804},{"krate":0,"index":11802},{"krate":0,"index":11803}],"decl_id":null,"docs":" Stream for the [`buffered`](super::StreamExt::buffered) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\buffered.rs","byte_start":8364757,"byte_end":8364805,"line_start":13,"line_end":13,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\buffered.rs","byte_start":8364742,"byte_end":8364756,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":11824},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\buffered.rs","byte_start":8364817,"byte_end":8364825,"line_start":14,"line_end":14,"column_start":12,"column_end":20},"name":"__Buffered","qualname":"::stream::stream::buffered::_::__Buffered","value":"__Buffered {  }","parent":null,"children":[{"krate":0,"index":11827},{"krate":0,"index":11828}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11732},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\for_each_concurrent.rs","byte_start":8367894,"byte_end":8367911,"line_start":14,"line_end":14,"column_start":12,"column_end":29},"name":"ForEachConcurrent","qualname":"::stream::stream::for_each_concurrent::ForEachConcurrent","value":"ForEachConcurrent {  }","parent":null,"children":[{"krate":0,"index":11739},{"krate":0,"index":11736},{"krate":0,"index":11737},{"krate":0,"index":11738}],"decl_id":null,"docs":" Future for the [`for_each_concurrent`](super::StreamExt::for_each_concurrent)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\for_each_concurrent.rs","byte_start":8367815,"byte_end":8367882,"line_start":13,"line_end":13,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\for_each_concurrent.rs","byte_start":8367800,"byte_end":8367814,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":11767},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\for_each_concurrent.rs","byte_start":8367894,"byte_end":8367911,"line_start":14,"line_end":14,"column_start":12,"column_end":29},"name":"__ForEachConcurrent","qualname":"::stream::stream::for_each_concurrent::_::__ForEachConcurrent","value":"__ForEachConcurrent {  }","parent":null,"children":[{"krate":0,"index":11772},{"krate":0,"index":11773}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8723},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\split.rs","byte_start":8371355,"byte_end":8371366,"line_start":12,"line_end":12,"column_start":12,"column_end":23},"name":"SplitStream","qualname":"::stream::stream::split::SplitStream","value":"","parent":null,"children":[],"decl_id":null,"docs":" A `Stream` part of the split pair\n","sig":null,"attributes":[{"value":"/ A `Stream` part of the split pair","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\split.rs","byte_start":8371240,"byte_end":8371277,"line_start":9,"line_end":9,"column_start":1,"column_end":38}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\split.rs","byte_start":8371295,"byte_end":8371343,"line_start":11,"line_end":11,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":8653},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\split.rs","byte_start":8371693,"byte_end":8371700,"line_start":20,"line_end":20,"column_start":12,"column_end":19},"name":"reunite","qualname":"<SplitStream<S>>::reunite","value":"fn <Item> (self, other: SplitSink<S, Item>) -> Result<S, ReuniteError<S, Item>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two \"halves\" of a split `Stream + Sink` back\n together. Succeeds only if the `SplitStream<S>` and `SplitSink<S>` are\n a matching pair originating from the same call to `StreamExt::split`.\n","sig":null,"attributes":[{"value":"/ Attempts to put the two \"halves\" of a split `Stream + Sink` back","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\split.rs","byte_start":8371456,"byte_end":8371524,"line_start":17,"line_end":17,"column_start":5,"column_end":73}},{"value":"/ together. Succeeds only if the `SplitStream<S>` and `SplitSink<S>` are","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\split.rs","byte_start":8371529,"byte_end":8371603,"line_start":18,"line_end":18,"column_start":5,"column_end":79}},{"value":"/ a matching pair originating from the same call to `StreamExt::split`.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\split.rs","byte_start":8371608,"byte_end":8371681,"line_start":19,"line_end":19,"column_start":5,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":8730},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\split.rs","byte_start":8372344,"byte_end":8372353,"line_start":46,"line_end":46,"column_start":12,"column_end":21},"name":"SplitSink","qualname":"::stream::stream::split::SplitSink","value":"SplitSink {  }","parent":null,"children":[{"krate":0,"index":8733},{"krate":0,"index":8734}],"decl_id":null,"docs":" A `Sink` part of the split pair\n","sig":null,"attributes":[{"value":"/ A `Sink` part of the split pair","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\split.rs","byte_start":8372233,"byte_end":8372268,"line_start":43,"line_end":43,"column_start":1,"column_end":36}},{"value":"must_use = \"sinks do nothing unless polled\"","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\split.rs","byte_start":8372286,"byte_end":8372332,"line_start":45,"line_end":45,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":8668},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\split.rs","byte_start":8372756,"byte_end":8372763,"line_start":57,"line_end":57,"column_start":12,"column_end":19},"name":"reunite","qualname":"<SplitSink<S, Item>>::reunite","value":"fn (self, other: SplitStream<S>) -> Result<S, ReuniteError<S, Item>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two \"halves\" of a split `Stream + Sink` back\n together. Succeeds only if the `SplitStream<S>` and `SplitSink<S>` are\n a matching pair originating from the same call to `StreamExt::split`.\n","sig":null,"attributes":[{"value":"/ Attempts to put the two \"halves\" of a split `Stream + Sink` back","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\split.rs","byte_start":8372519,"byte_end":8372587,"line_start":54,"line_end":54,"column_start":5,"column_end":73}},{"value":"/ together. Succeeds only if the `SplitStream<S>` and `SplitSink<S>` are","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\split.rs","byte_start":8372592,"byte_end":8372666,"line_start":55,"line_end":55,"column_start":5,"column_end":79}},{"value":"/ a matching pair originating from the same call to `StreamExt::split`.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\split.rs","byte_start":8372671,"byte_end":8372744,"line_start":56,"line_end":56,"column_start":5,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":8686},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\split.rs","byte_start":8375139,"byte_end":8375151,"line_start":122,"line_end":122,"column_start":12,"column_end":24},"name":"ReuniteError","qualname":"::stream::stream::split::ReuniteError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error indicating a `SplitSink<S>` and `SplitStream<S>` were not two halves\n of a `Stream + Split`, and thus could not be `reunite`d.\n","sig":null,"attributes":[{"value":"/ Error indicating a `SplitSink<S>` and `SplitStream<S>` were not two halves","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\split.rs","byte_start":8374988,"byte_end":8375066,"line_start":120,"line_end":120,"column_start":1,"column_end":79}},{"value":"/ of a `Stream + Split`, and thus could not be `reunite`d.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\split.rs","byte_start":8375067,"byte_end":8375127,"line_start":121,"line_end":121,"column_start":1,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":8739},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\catch_unwind.rs","byte_start":276691,"byte_end":276702,"line_start":12,"line_end":12,"column_start":12,"column_end":23},"name":"CatchUnwind","qualname":"::stream::stream::catch_unwind::CatchUnwind","value":"CatchUnwind {  }","parent":null,"children":[{"krate":0,"index":8742},{"krate":0,"index":8741}],"decl_id":null,"docs":" Stream for the [`catch_unwind`](super::StreamExt::catch_unwind) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\catch_unwind.rs","byte_start":276631,"byte_end":276679,"line_start":11,"line_end":11,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\catch_unwind.rs","byte_start":276599,"byte_end":276613,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":8760},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\catch_unwind.rs","byte_start":276691,"byte_end":276702,"line_start":12,"line_end":12,"column_start":12,"column_end":23},"name":"__CatchUnwind","qualname":"::stream::stream::catch_unwind::_::__CatchUnwind","value":"__CatchUnwind {  }","parent":null,"children":[{"krate":0,"index":8763},{"krate":0,"index":8764}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1989},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":166982,"byte_end":166991,"line_start":198,"line_end":198,"column_start":11,"column_end":20},"name":"StreamExt","qualname":"::stream::stream::StreamExt","value":"StreamExt: Stream","parent":null,"children":[{"krate":0,"index":1990},{"krate":0,"index":1991},{"krate":0,"index":1992},{"krate":0,"index":1995},{"krate":0,"index":1996},{"krate":0,"index":1999},{"krate":0,"index":2003},{"krate":0,"index":2006},{"krate":0,"index":2008},{"krate":0,"index":2009},{"krate":0,"index":2013},{"krate":0,"index":2014},{"krate":0,"index":2017},{"krate":0,"index":2022},{"krate":0,"index":2025},{"krate":0,"index":2028},{"krate":0,"index":2030},{"krate":0,"index":2033},{"krate":0,"index":2037},{"krate":0,"index":2038},{"krate":0,"index":2039},{"krate":0,"index":2040},{"krate":0,"index":2041},{"krate":0,"index":2042},{"krate":0,"index":2044},{"krate":0,"index":2046},{"krate":0,"index":2047},{"krate":0,"index":2048},{"krate":0,"index":2050},{"krate":0,"index":2052},{"krate":0,"index":2053},{"krate":0,"index":2054},{"krate":0,"index":2055},{"krate":0,"index":2057},{"krate":0,"index":2059},{"krate":0,"index":2061},{"krate":0,"index":2063},{"krate":0,"index":2065},{"krate":0,"index":2066}],"decl_id":null,"docs":" An extension trait for `Stream`s that provides a variety of convenient\n combinator functions.\n","sig":null,"attributes":[{"value":"/ An extension trait for `Stream`s that provides a variety of convenient","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":166871,"byte_end":166945,"line_start":196,"line_end":196,"column_start":1,"column_end":75}},{"value":"/ combinator functions.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":166946,"byte_end":166971,"line_start":197,"line_end":197,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1990},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":167901,"byte_end":167905,"line_start":222,"line_end":222,"column_start":8,"column_end":12},"name":"next","qualname":"::stream::stream::StreamExt::next","value":"fn (&mut self) -> Next<'_, Self>","parent":{"krate":0,"index":1989},"children":[],"decl_id":null,"docs":" Creates a future that resolves to the next item in the stream.","sig":null,"attributes":[{"value":"/ Creates a future that resolves to the next item in the stream.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":167006,"byte_end":167072,"line_start":199,"line_end":199,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":167077,"byte_end":167080,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ Note that because `next` doesn't take ownership over the stream,","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":167085,"byte_end":167153,"line_start":201,"line_end":201,"column_start":5,"column_end":73}},{"value":"/ the [`Stream`] type must be [`Unpin`]. If you want to use `next` with a","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":167158,"byte_end":167233,"line_start":202,"line_end":202,"column_start":5,"column_end":80}},{"value":"/ [`!Unpin`](Unpin) stream, you'll first have to pin the stream. This can","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":167238,"byte_end":167313,"line_start":203,"line_end":203,"column_start":5,"column_end":80}},{"value":"/ be done by boxing the stream using [`Box::pin`] or","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":167318,"byte_end":167372,"line_start":204,"line_end":204,"column_start":5,"column_end":59}},{"value":"/ pinning it to the stack using the `pin_mut!` macro from the `pin_utils`","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":167377,"byte_end":167452,"line_start":205,"line_end":205,"column_start":5,"column_end":80}},{"value":"/ crate.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":167457,"byte_end":167467,"line_start":206,"line_end":206,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":167472,"byte_end":167475,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":167480,"byte_end":167494,"line_start":208,"line_end":208,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":167499,"byte_end":167502,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":167507,"byte_end":167514,"line_start":210,"line_end":210,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":167519,"byte_end":167560,"line_start":211,"line_end":211,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":167565,"byte_end":167608,"line_start":212,"line_end":212,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":167613,"byte_end":167616,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..=3);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":167621,"byte_end":167662,"line_start":214,"line_end":214,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":167667,"byte_end":167670,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.next().await, Some(1));","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":167675,"byte_end":167720,"line_start":216,"line_end":216,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(2));","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":167725,"byte_end":167770,"line_start":217,"line_end":217,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(3));","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":167775,"byte_end":167820,"line_start":218,"line_end":218,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":167825,"byte_end":167867,"line_start":219,"line_end":219,"column_start":5,"column_end":47}},{"value":"/ # });","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":167872,"byte_end":167881,"line_start":220,"line_end":220,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":167886,"byte_end":167893,"line_start":221,"line_end":221,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1991},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":169104,"byte_end":169115,"line_start":257,"line_end":257,"column_start":8,"column_end":19},"name":"into_future","qualname":"::stream::stream::StreamExt::into_future","value":"fn (self) -> StreamFuture<Self>","parent":{"krate":0,"index":1989},"children":[],"decl_id":null,"docs":" Converts this stream into a future of `(next_item, tail_of_stream)`.\n If the stream terminates, then the next item is [`None`].","sig":null,"attributes":[{"value":"/ Converts this stream into a future of `(next_item, tail_of_stream)`.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":168007,"byte_end":168079,"line_start":229,"line_end":229,"column_start":5,"column_end":77}},{"value":"/ If the stream terminates, then the next item is [`None`].","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":168084,"byte_end":168145,"line_start":230,"line_end":230,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":168150,"byte_end":168153,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ The returned future can be used to compose streams and futures together","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":168158,"byte_end":168233,"line_start":232,"line_end":232,"column_start":5,"column_end":80}},{"value":"/ by placing everything into the \"world of futures\".","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":168238,"byte_end":168292,"line_start":233,"line_end":233,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":168297,"byte_end":168300,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ Note that because `into_future` moves the stream, the [`Stream`] type","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":168305,"byte_end":168378,"line_start":235,"line_end":235,"column_start":5,"column_end":78}},{"value":"/ must be [`Unpin`]. If you want to use `into_future` with a","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":168383,"byte_end":168445,"line_start":236,"line_end":236,"column_start":5,"column_end":67}},{"value":"/ [`!Unpin`](Unpin) stream, you'll first have to pin the stream. This can","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":168450,"byte_end":168525,"line_start":237,"line_end":237,"column_start":5,"column_end":80}},{"value":"/ be done by boxing the stream using [`Box::pin`] or","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":168530,"byte_end":168584,"line_start":238,"line_end":238,"column_start":5,"column_end":59}},{"value":"/ pinning it to the stack using the `pin_mut!` macro from the `pin_utils`","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":168589,"byte_end":168664,"line_start":239,"line_end":239,"column_start":5,"column_end":80}},{"value":"/ crate.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":168669,"byte_end":168679,"line_start":240,"line_end":240,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":168684,"byte_end":168687,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":168692,"byte_end":168706,"line_start":242,"line_end":242,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":168711,"byte_end":168714,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":168719,"byte_end":168726,"line_start":244,"line_end":244,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":168731,"byte_end":168772,"line_start":245,"line_end":245,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":168777,"byte_end":168820,"line_start":246,"line_end":246,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":168825,"byte_end":168828,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":168833,"byte_end":168870,"line_start":248,"line_end":248,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":168875,"byte_end":168878,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ let (item, stream) = stream.into_future().await;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":168883,"byte_end":168935,"line_start":250,"line_end":250,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(Some(1), item);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":168940,"byte_end":168970,"line_start":251,"line_end":251,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":168975,"byte_end":168978,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ let (item, stream) = stream.into_future().await;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":168983,"byte_end":169035,"line_start":253,"line_end":253,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(Some(2), item);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":169040,"byte_end":169070,"line_start":254,"line_end":254,"column_start":5,"column_end":35}},{"value":"/ # });","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":169075,"byte_end":169084,"line_start":255,"line_end":255,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":169089,"byte_end":169096,"line_start":256,"line_end":256,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1992},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":170068,"byte_end":170071,"line_start":287,"line_end":287,"column_start":8,"column_end":11},"name":"map","qualname":"::stream::stream::StreamExt::map","value":"fn <T, F> (self, f: F) -> Map<Self, F>","parent":{"krate":0,"index":1989},"children":[],"decl_id":null,"docs":" Maps this stream's items to a different type, returning a new stream of\n the resulting type.","sig":null,"attributes":[{"value":"/ Maps this stream's items to a different type, returning a new stream of","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":169232,"byte_end":169307,"line_start":264,"line_end":264,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":169312,"byte_end":169335,"line_start":265,"line_end":265,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":169340,"byte_end":169343,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ The provided closure is executed over all elements of this stream as","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":169348,"byte_end":169420,"line_start":267,"line_end":267,"column_start":5,"column_end":77}},{"value":"/ they are made available. It is executed inline with calls to","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":169425,"byte_end":169489,"line_start":268,"line_end":268,"column_start":5,"column_end":69}},{"value":"/ [`poll_next`](Stream::poll_next).","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":169494,"byte_end":169531,"line_start":269,"line_end":269,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":169536,"byte_end":169539,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":169544,"byte_end":169620,"line_start":271,"line_end":271,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `map` methods in the","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":169625,"byte_end":169696,"line_start":272,"line_end":272,"column_start":5,"column_end":76}},{"value":"/ standard library.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":169701,"byte_end":169722,"line_start":273,"line_end":273,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":169727,"byte_end":169730,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":169735,"byte_end":169749,"line_start":275,"line_end":275,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":169754,"byte_end":169757,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":169762,"byte_end":169769,"line_start":277,"line_end":277,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":169774,"byte_end":169815,"line_start":278,"line_end":278,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":169820,"byte_end":169863,"line_start":279,"line_end":279,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":169868,"byte_end":169871,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":169876,"byte_end":169913,"line_start":281,"line_end":281,"column_start":5,"column_end":42}},{"value":"/ let stream = stream.map(|x| x + 3);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":169918,"byte_end":169957,"line_start":282,"line_end":282,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":169962,"byte_end":169965,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![4, 5, 6], stream.collect::<Vec<_>>().await);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":169970,"byte_end":170034,"line_start":284,"line_end":284,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":170039,"byte_end":170048,"line_start":285,"line_end":285,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":170053,"byte_end":170060,"line_start":286,"line_end":286,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1995},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":171603,"byte_end":171612,"line_start":333,"line_end":333,"column_start":8,"column_end":17},"name":"enumerate","qualname":"::stream::stream::StreamExt::enumerate","value":"fn (self) -> Enumerate<Self>","parent":{"krate":0,"index":1989},"children":[],"decl_id":null,"docs":" Creates a stream which gives the current iteration count as well as\n the next value.","sig":null,"attributes":[{"value":"/ Creates a stream which gives the current iteration count as well as","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":170215,"byte_end":170286,"line_start":295,"line_end":295,"column_start":5,"column_end":76}},{"value":"/ the next value.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":170291,"byte_end":170310,"line_start":296,"line_end":296,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":170315,"byte_end":170318,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ The stream returned yields pairs `(i, val)`, where `i` is the","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":170323,"byte_end":170388,"line_start":298,"line_end":298,"column_start":5,"column_end":70}},{"value":"/ current index of iteration and `val` is the value returned by the","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":170393,"byte_end":170462,"line_start":299,"line_end":299,"column_start":5,"column_end":74}},{"value":"/ stream.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":170467,"byte_end":170478,"line_start":300,"line_end":300,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":170483,"byte_end":170486,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ `enumerate()` keeps its count as a [`usize`]. If you want to count by a","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":170491,"byte_end":170566,"line_start":302,"line_end":302,"column_start":5,"column_end":80}},{"value":"/ different sized integer, the [`zip`](StreamExt::zip) function provides similar","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":170571,"byte_end":170653,"line_start":303,"line_end":303,"column_start":5,"column_end":87}},{"value":"/ functionality.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":170658,"byte_end":170676,"line_start":304,"line_end":304,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":170681,"byte_end":170684,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ # Overflow Behavior","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":170689,"byte_end":170712,"line_start":306,"line_end":306,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":170717,"byte_end":170720,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ The method does no guarding against overflows, so enumerating more than","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":170725,"byte_end":170800,"line_start":308,"line_end":308,"column_start":5,"column_end":80}},{"value":"/ [`usize::max_value()`] elements either produces the wrong result or panics. If","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":170805,"byte_end":170887,"line_start":309,"line_end":309,"column_start":5,"column_end":87}},{"value":"/ debug assertions are enabled, a panic is guaranteed.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":170892,"byte_end":170948,"line_start":310,"line_end":310,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":170953,"byte_end":170956,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":170961,"byte_end":170973,"line_start":312,"line_end":312,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":170978,"byte_end":170981,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ The returned stream might panic if the to-be-returned index would","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":170986,"byte_end":171055,"line_start":314,"line_end":314,"column_start":5,"column_end":74}},{"value":"/ overflow a [`usize`].","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":171060,"byte_end":171085,"line_start":315,"line_end":315,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":171090,"byte_end":171093,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":171098,"byte_end":171112,"line_start":317,"line_end":317,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":171117,"byte_end":171120,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":171125,"byte_end":171132,"line_start":319,"line_end":319,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":171137,"byte_end":171178,"line_start":320,"line_end":320,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":171183,"byte_end":171226,"line_start":321,"line_end":321,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":171231,"byte_end":171234,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec!['a', 'b', 'c']);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":171239,"byte_end":171290,"line_start":323,"line_end":323,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":171295,"byte_end":171298,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream.enumerate();","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":171303,"byte_end":171343,"line_start":325,"line_end":325,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":171348,"byte_end":171351,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.next().await, Some((0, 'a')));","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":171356,"byte_end":171408,"line_start":327,"line_end":327,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(stream.next().await, Some((1, 'b')));","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":171413,"byte_end":171465,"line_start":328,"line_end":328,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(stream.next().await, Some((2, 'c')));","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":171470,"byte_end":171522,"line_start":329,"line_end":329,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":171527,"byte_end":171569,"line_start":330,"line_end":330,"column_start":5,"column_end":47}},{"value":"/ # });","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":171574,"byte_end":171583,"line_start":331,"line_end":331,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":171588,"byte_end":171595,"line_start":332,"line_end":332,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1996},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":172800,"byte_end":172806,"line_start":366,"line_end":366,"column_start":8,"column_end":14},"name":"filter","qualname":"::stream::stream::StreamExt::filter","value":"fn <Fut, F> (self, f: F) -> Filter<Self, Fut, F>","parent":{"krate":0,"index":1989},"children":[],"decl_id":null,"docs":" Filters the values produced by this stream according to the provided\n asynchronous predicate.","sig":null,"attributes":[{"value":"/ Filters the values produced by this stream according to the provided","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":171715,"byte_end":171787,"line_start":340,"line_end":340,"column_start":5,"column_end":77}},{"value":"/ asynchronous predicate.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":171792,"byte_end":171819,"line_start":341,"line_end":341,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":171824,"byte_end":171827,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided predicate `f`","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":171832,"byte_end":171907,"line_start":343,"line_end":343,"column_start":5,"column_end":80}},{"value":"/ will be run against them. If the predicate returns a `Future` which","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":171912,"byte_end":171983,"line_start":344,"line_end":344,"column_start":5,"column_end":76}},{"value":"/ resolves to `true`, then the stream will yield the value, but if the","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":171988,"byte_end":172060,"line_start":345,"line_end":345,"column_start":5,"column_end":77}},{"value":"/ predicate returns a `Future` which resolves to `false`, then the value","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":172065,"byte_end":172139,"line_start":346,"line_end":346,"column_start":5,"column_end":79}},{"value":"/ will be discarded and the next value will be produced.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":172144,"byte_end":172202,"line_start":347,"line_end":347,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":172207,"byte_end":172210,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":172215,"byte_end":172291,"line_start":349,"line_end":349,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter` methods in the","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":172296,"byte_end":172370,"line_start":350,"line_end":350,"column_start":5,"column_end":79}},{"value":"/ standard library.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":172375,"byte_end":172396,"line_start":351,"line_end":351,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":172401,"byte_end":172404,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":172409,"byte_end":172423,"line_start":353,"line_end":353,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":172428,"byte_end":172431,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":172436,"byte_end":172443,"line_start":355,"line_end":355,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":172448,"byte_end":172489,"line_start":356,"line_end":356,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":172494,"byte_end":172518,"line_start":357,"line_end":357,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":172523,"byte_end":172566,"line_start":358,"line_end":358,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":172571,"byte_end":172574,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":172579,"byte_end":172617,"line_start":360,"line_end":360,"column_start":5,"column_end":43}},{"value":"/ let evens = stream.filter(|x| future::ready(x % 2 == 0));","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":172622,"byte_end":172683,"line_start":361,"line_end":361,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":172688,"byte_end":172691,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![2, 4, 6, 8, 10], evens.collect::<Vec<_>>().await);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":172696,"byte_end":172766,"line_start":363,"line_end":363,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":172771,"byte_end":172780,"line_start":364,"line_end":364,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":172785,"byte_end":172792,"line_start":365,"line_end":365,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1999},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":174099,"byte_end":174109,"line_start":400,"line_end":400,"column_start":8,"column_end":18},"name":"filter_map","qualname":"::stream::stream::StreamExt::filter_map","value":"fn <Fut, T, F> (self, f: F) -> FilterMap<Self, Fut, F>","parent":{"krate":0,"index":1989},"children":[],"decl_id":null,"docs":" Filters the values produced by this stream while simultaneously mapping\n them to a different type according to the provided asynchronous closure.","sig":null,"attributes":[{"value":"/ Filters the values produced by this stream while simultaneously mapping","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":173002,"byte_end":173077,"line_start":375,"line_end":375,"column_start":5,"column_end":80}},{"value":"/ them to a different type according to the provided asynchronous closure.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":173082,"byte_end":173158,"line_start":376,"line_end":376,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":173163,"byte_end":173166,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided function will","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":173171,"byte_end":173246,"line_start":378,"line_end":378,"column_start":5,"column_end":80}},{"value":"/ be run on them. If the future returned by the predicate `f` resolves to","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":173251,"byte_end":173326,"line_start":379,"line_end":379,"column_start":5,"column_end":80}},{"value":"/ [`Some(item)`](Some) then the stream will yield the value `item`, but if","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":173331,"byte_end":173407,"line_start":380,"line_end":380,"column_start":5,"column_end":81}},{"value":"/ it resolves to [`None`] then the next value will be produced.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":173412,"byte_end":173477,"line_start":381,"line_end":381,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":173482,"byte_end":173485,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":173490,"byte_end":173566,"line_start":383,"line_end":383,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter_map` methods in","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":173571,"byte_end":173645,"line_start":384,"line_end":384,"column_start":5,"column_end":79}},{"value":"/ the standard library.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":173650,"byte_end":173675,"line_start":385,"line_end":385,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":173680,"byte_end":173683,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":173688,"byte_end":173702,"line_start":387,"line_end":387,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":173707,"byte_end":173714,"line_start":388,"line_end":388,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":173719,"byte_end":173760,"line_start":389,"line_end":389,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":173765,"byte_end":173808,"line_start":390,"line_end":390,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":173813,"byte_end":173816,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":173821,"byte_end":173859,"line_start":392,"line_end":392,"column_start":5,"column_end":43}},{"value":"/ let evens = stream.filter_map(|x| async move {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":173864,"byte_end":173914,"line_start":393,"line_end":393,"column_start":5,"column_end":55}},{"value":"/     if x % 2 == 0 { Some(x + 1) } else { None }","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":173919,"byte_end":173970,"line_start":394,"line_end":394,"column_start":5,"column_end":56}},{"value":"/ });","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":173975,"byte_end":173982,"line_start":395,"line_end":395,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":173987,"byte_end":173990,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![3, 5, 7, 9, 11], evens.collect::<Vec<_>>().await);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":173995,"byte_end":174065,"line_start":397,"line_end":397,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":174070,"byte_end":174079,"line_start":398,"line_end":398,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":174084,"byte_end":174091,"line_start":399,"line_end":399,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2003},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":175115,"byte_end":175119,"line_start":431,"line_end":431,"column_start":8,"column_end":12},"name":"then","qualname":"::stream::stream::StreamExt::then","value":"fn <Fut, F> (self, f: F) -> Then<Self, Fut, F>","parent":{"krate":0,"index":1989},"children":[],"decl_id":null,"docs":" Computes from this stream's items new items of a different type using\n an asynchronous closure.","sig":null,"attributes":[{"value":"/ Computes from this stream's items new items of a different type using","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":174318,"byte_end":174391,"line_start":409,"line_end":409,"column_start":5,"column_end":78}},{"value":"/ an asynchronous closure.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":174396,"byte_end":174424,"line_start":410,"line_end":410,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":174429,"byte_end":174432,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will be called with an `Item` once a value is","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":174437,"byte_end":174511,"line_start":412,"line_end":412,"column_start":5,"column_end":79}},{"value":"/ ready, it returns a future which will then be run to completion","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":174516,"byte_end":174583,"line_start":413,"line_end":413,"column_start":5,"column_end":72}},{"value":"/ to produce the next value on this stream.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":174588,"byte_end":174633,"line_start":414,"line_end":414,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":174638,"byte_end":174641,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":174646,"byte_end":174722,"line_start":416,"line_end":416,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":174727,"byte_end":174753,"line_start":417,"line_end":417,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":174758,"byte_end":174761,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":174766,"byte_end":174780,"line_start":419,"line_end":419,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":174785,"byte_end":174788,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":174793,"byte_end":174800,"line_start":421,"line_end":421,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":174805,"byte_end":174846,"line_start":422,"line_end":422,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":174851,"byte_end":174894,"line_start":423,"line_end":423,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":174899,"byte_end":174902,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":174907,"byte_end":174944,"line_start":425,"line_end":425,"column_start":5,"column_end":42}},{"value":"/ let stream = stream.then(|x| async move { x + 3 });","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":174949,"byte_end":175004,"line_start":426,"line_end":426,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":175009,"byte_end":175012,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![4, 5, 6], stream.collect::<Vec<_>>().await);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":175017,"byte_end":175081,"line_start":428,"line_end":428,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":175086,"byte_end":175095,"line_start":429,"line_end":429,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":175100,"byte_end":175107,"line_start":430,"line_end":430,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2006},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":176020,"byte_end":176027,"line_start":465,"line_end":465,"column_start":8,"column_end":15},"name":"collect","qualname":"::stream::stream::StreamExt::collect","value":"fn <C> (self) -> Collect<Self, C>","parent":{"krate":0,"index":1989},"children":[],"decl_id":null,"docs":" Transforms a stream into a collection, returning a\n future representing the result of that computation.","sig":null,"attributes":[{"value":"/ Transforms a stream into a collection, returning a","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":175295,"byte_end":175349,"line_start":440,"line_end":440,"column_start":5,"column_end":59}},{"value":"/ future representing the result of that computation.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":175354,"byte_end":175409,"line_start":441,"line_end":441,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":175414,"byte_end":175417,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ The returned future will be resolved when the stream terminates.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":175422,"byte_end":175490,"line_start":443,"line_end":443,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":175495,"byte_end":175498,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":175503,"byte_end":175517,"line_start":445,"line_end":445,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":175522,"byte_end":175525,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":175530,"byte_end":175537,"line_start":447,"line_end":447,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":175542,"byte_end":175583,"line_start":448,"line_end":448,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":175588,"byte_end":175619,"line_start":449,"line_end":449,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":175624,"byte_end":175659,"line_start":450,"line_end":450,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":175664,"byte_end":175684,"line_start":451,"line_end":451,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":175689,"byte_end":175692,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":175697,"byte_end":175734,"line_start":453,"line_end":453,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":175739,"byte_end":175742,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":175747,"byte_end":175774,"line_start":455,"line_end":455,"column_start":5,"column_end":32}},{"value":"/     for i in 1..=5 {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":175779,"byte_end":175803,"line_start":456,"line_end":456,"column_start":5,"column_end":29}},{"value":"/         tx.unbounded_send(i).unwrap();","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":175808,"byte_end":175850,"line_start":457,"line_end":457,"column_start":5,"column_end":47}},{"value":"/     }","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":175855,"byte_end":175864,"line_start":458,"line_end":458,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":175869,"byte_end":175876,"line_start":459,"line_end":459,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":175881,"byte_end":175884,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ let output = rx.collect::<Vec<i32>>().await;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":175889,"byte_end":175937,"line_start":461,"line_end":461,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(output, vec![1, 2, 3, 4, 5]);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":175942,"byte_end":175986,"line_start":462,"line_end":462,"column_start":5,"column_end":49}},{"value":"/ # });","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":175991,"byte_end":176000,"line_start":463,"line_end":463,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":176005,"byte_end":176012,"line_start":464,"line_end":464,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2008},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":177197,"byte_end":177203,"line_start":504,"line_end":504,"column_start":8,"column_end":14},"name":"concat","qualname":"::stream::stream::StreamExt::concat","value":"fn (self) -> Concat<Self>","parent":{"krate":0,"index":1989},"children":[],"decl_id":null,"docs":" Concatenate all items of a stream into a single extendable\n destination, returning a future representing the end result.","sig":null,"attributes":[{"value":"/ Concatenate all items of a stream into a single extendable","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":176162,"byte_end":176224,"line_start":472,"line_end":472,"column_start":5,"column_end":67}},{"value":"/ destination, returning a future representing the end result.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":176229,"byte_end":176293,"line_start":473,"line_end":473,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":176298,"byte_end":176301,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ This combinator will extend the first item with the contents","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":176306,"byte_end":176370,"line_start":475,"line_end":475,"column_start":5,"column_end":69}},{"value":"/ of all the subsequent results of the stream. If the stream is","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":176375,"byte_end":176440,"line_start":476,"line_end":476,"column_start":5,"column_end":70}},{"value":"/ empty, the default value will be returned.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":176445,"byte_end":176491,"line_start":477,"line_end":477,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":176496,"byte_end":176499,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ Works with all collections that implement the","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":176504,"byte_end":176553,"line_start":479,"line_end":479,"column_start":5,"column_end":54}},{"value":"/ [`Extend`](std::iter::Extend) trait.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":176558,"byte_end":176598,"line_start":480,"line_end":480,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":176603,"byte_end":176606,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":176611,"byte_end":176625,"line_start":482,"line_end":482,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":176630,"byte_end":176633,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":176638,"byte_end":176645,"line_start":484,"line_end":484,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":176650,"byte_end":176691,"line_start":485,"line_end":485,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":176696,"byte_end":176727,"line_start":486,"line_end":486,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":176732,"byte_end":176767,"line_start":487,"line_end":487,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":176772,"byte_end":176792,"line_start":488,"line_end":488,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":176797,"byte_end":176800,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":176805,"byte_end":176842,"line_start":490,"line_end":490,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":176847,"byte_end":176850,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":176855,"byte_end":176882,"line_start":492,"line_end":492,"column_start":5,"column_end":32}},{"value":"/     for i in (0..3).rev() {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":176887,"byte_end":176918,"line_start":493,"line_end":493,"column_start":5,"column_end":36}},{"value":"/         let n = i * 3;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":176923,"byte_end":176949,"line_start":494,"line_end":494,"column_start":5,"column_end":31}},{"value":"/         tx.unbounded_send(vec![n + 1, n + 2, n + 3]).unwrap();","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":176954,"byte_end":177020,"line_start":495,"line_end":495,"column_start":5,"column_end":71}},{"value":"/     }","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":177025,"byte_end":177034,"line_start":496,"line_end":496,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":177039,"byte_end":177046,"line_start":497,"line_end":497,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":177051,"byte_end":177054,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ let result = rx.concat().await;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":177059,"byte_end":177094,"line_start":499,"line_end":499,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":177099,"byte_end":177102,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result, vec![7, 8, 9, 4, 5, 6, 1, 2, 3]);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":177107,"byte_end":177163,"line_start":501,"line_end":501,"column_start":5,"column_end":61}},{"value":"/ # });","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":177168,"byte_end":177177,"line_start":502,"line_end":502,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":177182,"byte_end":177189,"line_start":503,"line_end":503,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2009},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":178216,"byte_end":178220,"line_start":532,"line_end":532,"column_start":8,"column_end":12},"name":"fold","qualname":"::stream::stream::StreamExt::fold","value":"fn <T, Fut, F> (self, init: T, f: F) -> Fold<Self, Fut, T, F>","parent":{"krate":0,"index":1989},"children":[],"decl_id":null,"docs":" Execute an accumulating asynchronous computation over a stream,\n collecting all the values into one final result.","sig":null,"attributes":[{"value":"/ Execute an accumulating asynchronous computation over a stream,","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":177401,"byte_end":177468,"line_start":512,"line_end":512,"column_start":5,"column_end":72}},{"value":"/ collecting all the values into one final result.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":177473,"byte_end":177525,"line_start":513,"line_end":513,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":177530,"byte_end":177533,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ This combinator will accumulate all values returned by this stream","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":177538,"byte_end":177608,"line_start":515,"line_end":515,"column_start":5,"column_end":75}},{"value":"/ according to the closure provided. The initial state is also provided to","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":177613,"byte_end":177689,"line_start":516,"line_end":516,"column_start":5,"column_end":81}},{"value":"/ this method and then is returned again by each execution of the closure.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":177694,"byte_end":177770,"line_start":517,"line_end":517,"column_start":5,"column_end":81}},{"value":"/ Once the entire stream has been exhausted the returned future will","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":177775,"byte_end":177845,"line_start":518,"line_end":518,"column_start":5,"column_end":75}},{"value":"/ resolve to this value.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":177850,"byte_end":177876,"line_start":519,"line_end":519,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":177881,"byte_end":177884,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":177889,"byte_end":177903,"line_start":521,"line_end":521,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":177908,"byte_end":177911,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":177916,"byte_end":177923,"line_start":523,"line_end":523,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":177928,"byte_end":177969,"line_start":524,"line_end":524,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":177974,"byte_end":178017,"line_start":525,"line_end":525,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":178022,"byte_end":178025,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ let number_stream = stream::iter(0..6);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":178030,"byte_end":178073,"line_start":527,"line_end":527,"column_start":5,"column_end":48}},{"value":"/ let sum = number_stream.fold(0, |acc, x| async move { acc + x });","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":178078,"byte_end":178147,"line_start":528,"line_end":528,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(sum.await, 15);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":178152,"byte_end":178182,"line_start":529,"line_end":529,"column_start":5,"column_end":35}},{"value":"/ # });","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":178187,"byte_end":178196,"line_start":530,"line_end":530,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":178201,"byte_end":178208,"line_start":531,"line_end":531,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2013},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":179391,"byte_end":179398,"line_start":572,"line_end":572,"column_start":8,"column_end":15},"name":"flatten","qualname":"::stream::stream::StreamExt::flatten","value":"fn (self) -> Flatten<Self>","parent":{"krate":0,"index":1989},"children":[],"decl_id":null,"docs":" Flattens a stream of streams into just one continuous stream.","sig":null,"attributes":[{"value":"/ Flattens a stream of streams into just one continuous stream.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":178432,"byte_end":178497,"line_start":541,"line_end":541,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":178502,"byte_end":178505,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":178510,"byte_end":178524,"line_start":543,"line_end":543,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":178529,"byte_end":178532,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":178537,"byte_end":178544,"line_start":545,"line_end":545,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":178549,"byte_end":178590,"line_start":546,"line_end":546,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":178595,"byte_end":178626,"line_start":547,"line_end":547,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":178631,"byte_end":178666,"line_start":548,"line_end":548,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":178671,"byte_end":178691,"line_start":549,"line_end":549,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":178696,"byte_end":178699,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = mpsc::unbounded();","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":178704,"byte_end":178743,"line_start":551,"line_end":551,"column_start":5,"column_end":44}},{"value":"/ let (tx2, rx2) = mpsc::unbounded();","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":178748,"byte_end":178787,"line_start":552,"line_end":552,"column_start":5,"column_end":44}},{"value":"/ let (tx3, rx3) = mpsc::unbounded();","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":178792,"byte_end":178831,"line_start":553,"line_end":553,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":178836,"byte_end":178839,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":178844,"byte_end":178871,"line_start":555,"line_end":555,"column_start":5,"column_end":32}},{"value":"/     tx1.unbounded_send(1).unwrap();","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":178876,"byte_end":178915,"line_start":556,"line_end":556,"column_start":5,"column_end":44}},{"value":"/     tx1.unbounded_send(2).unwrap();","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":178920,"byte_end":178959,"line_start":557,"line_end":557,"column_start":5,"column_end":44}},{"value":"/ });","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":178964,"byte_end":178971,"line_start":558,"line_end":558,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":178976,"byte_end":179003,"line_start":559,"line_end":559,"column_start":5,"column_end":32}},{"value":"/     tx2.unbounded_send(3).unwrap();","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":179008,"byte_end":179047,"line_start":560,"line_end":560,"column_start":5,"column_end":44}},{"value":"/     tx2.unbounded_send(4).unwrap();","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":179052,"byte_end":179091,"line_start":561,"line_end":561,"column_start":5,"column_end":44}},{"value":"/ });","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":179096,"byte_end":179103,"line_start":562,"line_end":562,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":179108,"byte_end":179135,"line_start":563,"line_end":563,"column_start":5,"column_end":32}},{"value":"/     tx3.unbounded_send(rx1).unwrap();","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":179140,"byte_end":179181,"line_start":564,"line_end":564,"column_start":5,"column_end":46}},{"value":"/     tx3.unbounded_send(rx2).unwrap();","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":179186,"byte_end":179227,"line_start":565,"line_end":565,"column_start":5,"column_end":46}},{"value":"/ });","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":179232,"byte_end":179239,"line_start":566,"line_end":566,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":179244,"byte_end":179247,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ let output = rx3.flatten().collect::<Vec<i32>>().await;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":179252,"byte_end":179311,"line_start":568,"line_end":568,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(output, vec![1, 2, 3, 4]);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":179316,"byte_end":179357,"line_start":569,"line_end":569,"column_start":5,"column_end":46}},{"value":"/ # });","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":179362,"byte_end":179371,"line_start":570,"line_end":570,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":179376,"byte_end":179383,"line_start":571,"line_end":571,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2014},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":180610,"byte_end":180618,"line_start":605,"line_end":605,"column_start":8,"column_end":16},"name":"flat_map","qualname":"::stream::stream::StreamExt::flat_map","value":"fn <U, F> (self, f: F) -> FlatMap<Self, U, F>","parent":{"krate":0,"index":1989},"children":[],"decl_id":null,"docs":" Maps a stream like [`StreamExt::map`] but flattens nested `Stream`s.","sig":null,"attributes":[{"value":"/ Maps a stream like [`StreamExt::map`] but flattens nested `Stream`s.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":179525,"byte_end":179597,"line_start":580,"line_end":580,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":179602,"byte_end":179605,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ [`StreamExt::map`] is very useful, but if it produces a `Stream` instead,","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":179610,"byte_end":179687,"line_start":582,"line_end":582,"column_start":5,"column_end":82}},{"value":"/ you would have to chain combinators like `.map(f).flatten()` while this","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":179692,"byte_end":179767,"line_start":583,"line_end":583,"column_start":5,"column_end":80}},{"value":"/ combinator provides ability to write `.flat_map(f)` instead of chaining.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":179772,"byte_end":179848,"line_start":584,"line_end":584,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":179853,"byte_end":179856,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ The provided closure which produce inner streams is executed over all elements","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":179861,"byte_end":179943,"line_start":586,"line_end":586,"column_start":5,"column_end":87}},{"value":"/ of stream as last inner stream is terminated and next stream item is available.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":179948,"byte_end":180031,"line_start":587,"line_end":587,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":180036,"byte_end":180039,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":180044,"byte_end":180120,"line_start":589,"line_end":589,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `flat_map` methods in the","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":180125,"byte_end":180201,"line_start":590,"line_end":590,"column_start":5,"column_end":81}},{"value":"/ standard library.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":180206,"byte_end":180227,"line_start":591,"line_end":591,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":180232,"byte_end":180235,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":180240,"byte_end":180254,"line_start":593,"line_end":593,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":180259,"byte_end":180262,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":180267,"byte_end":180274,"line_start":595,"line_end":595,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":180279,"byte_end":180320,"line_start":596,"line_end":596,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":180325,"byte_end":180368,"line_start":597,"line_end":597,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":180373,"byte_end":180376,"line_start":598,"line_end":598,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":180381,"byte_end":180418,"line_start":599,"line_end":599,"column_start":5,"column_end":42}},{"value":"/ let stream = stream.flat_map(|x| stream::iter(vec![x + 3; x]));","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":180423,"byte_end":180490,"line_start":600,"line_end":600,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":180495,"byte_end":180498,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![4, 5, 5, 6, 6, 6], stream.collect::<Vec<_>>().await);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":180503,"byte_end":180576,"line_start":602,"line_end":602,"column_start":5,"column_end":78}},{"value":"/ # });","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":180581,"byte_end":180590,"line_start":603,"line_end":603,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":180595,"byte_end":180602,"line_start":604,"line_end":604,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2017},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":181602,"byte_end":181606,"line_start":638,"line_end":638,"column_start":8,"column_end":12},"name":"scan","qualname":"::stream::stream::StreamExt::scan","value":"fn <S, B, Fut, F> (self, initial_state: S, f: F) -> Scan<Self, S, Fut, F>","parent":{"krate":0,"index":1989},"children":[],"decl_id":null,"docs":" Combinator similar to [`StreamExt::fold`] that holds internal state \n and produces a new stream.","sig":null,"attributes":[{"value":"/ Combinator similar to [`StreamExt::fold`] that holds internal state ","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":180792,"byte_end":180864,"line_start":614,"line_end":614,"column_start":5,"column_end":77}},{"value":"/ and produces a new stream.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":180869,"byte_end":180899,"line_start":615,"line_end":615,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":180904,"byte_end":180907,"line_start":616,"line_end":616,"column_start":5,"column_end":8}},{"value":"/ Accepts initial state and closure which will be applied to each element","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":180912,"byte_end":180987,"line_start":617,"line_end":617,"column_start":5,"column_end":80}},{"value":"/ of the stream until provided closure returns `None`. Once `None` is","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":180992,"byte_end":181063,"line_start":618,"line_end":618,"column_start":5,"column_end":76}},{"value":"/ returned, stream will be terminated.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":181068,"byte_end":181108,"line_start":619,"line_end":619,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":181113,"byte_end":181116,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":181121,"byte_end":181135,"line_start":621,"line_end":621,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":181140,"byte_end":181143,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":181148,"byte_end":181155,"line_start":623,"line_end":623,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":181160,"byte_end":181201,"line_start":624,"line_end":624,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":181206,"byte_end":181230,"line_start":625,"line_end":625,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":181235,"byte_end":181278,"line_start":626,"line_end":626,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":181283,"byte_end":181286,"line_start":627,"line_end":627,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":181291,"byte_end":181329,"line_start":628,"line_end":628,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":181334,"byte_end":181337,"line_start":629,"line_end":629,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.scan(0, |state, x| {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":181342,"byte_end":181386,"line_start":630,"line_end":630,"column_start":5,"column_end":49}},{"value":"/     *state += x;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":181391,"byte_end":181411,"line_start":631,"line_end":631,"column_start":5,"column_end":25}},{"value":"/     future::ready(if *state < 10 { Some(x) } else { None })","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":181416,"byte_end":181479,"line_start":632,"line_end":632,"column_start":5,"column_end":68}},{"value":"/ });","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":181484,"byte_end":181491,"line_start":633,"line_end":633,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":181496,"byte_end":181499,"line_start":634,"line_end":634,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3], stream.collect::<Vec<_>>().await);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":181504,"byte_end":181568,"line_start":635,"line_end":635,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":181573,"byte_end":181582,"line_start":636,"line_end":636,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":181587,"byte_end":181594,"line_start":637,"line_end":637,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2022},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":182630,"byte_end":182640,"line_start":669,"line_end":669,"column_start":8,"column_end":18},"name":"skip_while","qualname":"::stream::stream::StreamExt::skip_while","value":"fn <Fut, F> (self, f: F) -> SkipWhile<Self, Fut, F>","parent":{"krate":0,"index":1989},"children":[],"decl_id":null,"docs":" Skip elements on this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Skip elements on this stream while the provided asynchronous predicate","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":181852,"byte_end":181926,"line_start":647,"line_end":647,"column_start":5,"column_end":79}},{"value":"/ resolves to `true`.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":181931,"byte_end":181954,"line_start":648,"line_end":648,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":181959,"byte_end":181962,"line_start":649,"line_end":649,"column_start":5,"column_end":8}},{"value":"/ This function, like `Iterator::skip_while`, will skip elements on the","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":181967,"byte_end":182040,"line_start":650,"line_end":650,"column_start":5,"column_end":78}},{"value":"/ stream until the predicate `f` resolves to `false`. Once one element","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":182045,"byte_end":182117,"line_start":651,"line_end":651,"column_start":5,"column_end":77}},{"value":"/ returns `false`, all future elements will be returned from the underlying","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":182122,"byte_end":182199,"line_start":652,"line_end":652,"column_start":5,"column_end":82}},{"value":"/ stream.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":182204,"byte_end":182215,"line_start":653,"line_end":653,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":182220,"byte_end":182223,"line_start":654,"line_end":654,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":182228,"byte_end":182242,"line_start":655,"line_end":655,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":182247,"byte_end":182250,"line_start":656,"line_end":656,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":182255,"byte_end":182262,"line_start":657,"line_end":657,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":182267,"byte_end":182308,"line_start":658,"line_end":658,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":182313,"byte_end":182337,"line_start":659,"line_end":659,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":182342,"byte_end":182385,"line_start":660,"line_end":660,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":182390,"byte_end":182393,"line_start":661,"line_end":661,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":182398,"byte_end":182436,"line_start":662,"line_end":662,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":182441,"byte_end":182444,"line_start":663,"line_end":663,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.skip_while(|x| future::ready(*x <= 5));","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":182449,"byte_end":182512,"line_start":664,"line_end":664,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":182517,"byte_end":182520,"line_start":665,"line_end":665,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![6, 7, 8, 9, 10], stream.collect::<Vec<_>>().await);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":182525,"byte_end":182596,"line_start":666,"line_end":666,"column_start":5,"column_end":76}},{"value":"/ # });","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":182601,"byte_end":182610,"line_start":667,"line_end":667,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":182615,"byte_end":182622,"line_start":668,"line_end":668,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2025},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":183597,"byte_end":183607,"line_start":699,"line_end":699,"column_start":8,"column_end":18},"name":"take_while","qualname":"::stream::stream::StreamExt::take_while","value":"fn <Fut, F> (self, f: F) -> TakeWhile<Self, Fut, F>","parent":{"krate":0,"index":1989},"children":[],"decl_id":null,"docs":" Take elements from this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Take elements from this stream while the provided asynchronous predicate","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":182842,"byte_end":182918,"line_start":678,"line_end":678,"column_start":5,"column_end":81}},{"value":"/ resolves to `true`.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":182923,"byte_end":182946,"line_start":679,"line_end":679,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":182951,"byte_end":182954,"line_start":680,"line_end":680,"column_start":5,"column_end":8}},{"value":"/ This function, like `Iterator::take_while`, will take elements from the","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":182959,"byte_end":183034,"line_start":681,"line_end":681,"column_start":5,"column_end":80}},{"value":"/ stream until the predicate `f` resolves to `false`. Once one element","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":183039,"byte_end":183111,"line_start":682,"line_end":682,"column_start":5,"column_end":77}},{"value":"/ returns `false`, it will always return that the stream is done.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":183116,"byte_end":183183,"line_start":683,"line_end":683,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":183188,"byte_end":183191,"line_start":684,"line_end":684,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":183196,"byte_end":183210,"line_start":685,"line_end":685,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":183215,"byte_end":183218,"line_start":686,"line_end":686,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":183223,"byte_end":183230,"line_start":687,"line_end":687,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":183235,"byte_end":183276,"line_start":688,"line_end":688,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":183281,"byte_end":183305,"line_start":689,"line_end":689,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":183310,"byte_end":183353,"line_start":690,"line_end":690,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":183358,"byte_end":183361,"line_start":691,"line_end":691,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":183366,"byte_end":183404,"line_start":692,"line_end":692,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":183409,"byte_end":183412,"line_start":693,"line_end":693,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.take_while(|x| future::ready(*x <= 5));","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":183417,"byte_end":183480,"line_start":694,"line_end":694,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":183485,"byte_end":183488,"line_start":695,"line_end":695,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3, 4, 5], stream.collect::<Vec<_>>().await);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":183493,"byte_end":183563,"line_start":696,"line_end":696,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":183568,"byte_end":183577,"line_start":697,"line_end":697,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":183582,"byte_end":183589,"line_start":698,"line_end":698,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2028},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":185091,"byte_end":185101,"line_start":744,"line_end":744,"column_start":8,"column_end":18},"name":"take_until","qualname":"::stream::stream::StreamExt::take_until","value":"fn <Fut> (self, fut: Fut) -> TakeUntil<Self, Fut>","parent":{"krate":0,"index":1989},"children":[],"decl_id":null,"docs":" Take elements from this stream until the provided future resolves.","sig":null,"attributes":[{"value":"/ Take elements from this stream until the provided future resolves.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":183809,"byte_end":183879,"line_start":708,"line_end":708,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":183884,"byte_end":183887,"line_start":709,"line_end":709,"column_start":5,"column_end":8}},{"value":"/ This function will take elements from the stream until the provided","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":183892,"byte_end":183963,"line_start":710,"line_end":710,"column_start":5,"column_end":76}},{"value":"/ stopping future `fut` resolves. Once the `fut` future becomes ready,","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":183968,"byte_end":184040,"line_start":711,"line_end":711,"column_start":5,"column_end":77}},{"value":"/ this stream combinator will always return that the stream is done.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":184045,"byte_end":184115,"line_start":712,"line_end":712,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":184120,"byte_end":184123,"line_start":713,"line_end":713,"column_start":5,"column_end":8}},{"value":"/ The stopping future may return any type. Once the stream is stopped","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":184128,"byte_end":184199,"line_start":714,"line_end":714,"column_start":5,"column_end":76}},{"value":"/ the result of the stopping future may be aceessed with `TakeUntil::take_result()`.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":184204,"byte_end":184290,"line_start":715,"line_end":715,"column_start":5,"column_end":91}},{"value":"/ The stream may also be resumed with `TakeUntil::take_future()`.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":184295,"byte_end":184362,"line_start":716,"line_end":716,"column_start":5,"column_end":72}},{"value":"/ See the documentation of [`TakeUntil`] for more information.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":184367,"byte_end":184431,"line_start":717,"line_end":717,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":184436,"byte_end":184439,"line_start":718,"line_end":718,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":184444,"byte_end":184458,"line_start":719,"line_end":719,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":184463,"byte_end":184466,"line_start":720,"line_end":720,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":184471,"byte_end":184478,"line_start":721,"line_end":721,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":184483,"byte_end":184524,"line_start":722,"line_end":722,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":184529,"byte_end":184553,"line_start":723,"line_end":723,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":184558,"byte_end":184601,"line_start":724,"line_end":724,"column_start":5,"column_end":48}},{"value":"/ use futures::task::Poll;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":184606,"byte_end":184634,"line_start":725,"line_end":725,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":184639,"byte_end":184642,"line_start":726,"line_end":726,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":184647,"byte_end":184685,"line_start":727,"line_end":727,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":184690,"byte_end":184693,"line_start":728,"line_end":728,"column_start":5,"column_end":8}},{"value":"/ let mut i = 0;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":184698,"byte_end":184716,"line_start":729,"line_end":729,"column_start":5,"column_end":23}},{"value":"/ let stop_fut = future::poll_fn(|_cx| {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":184721,"byte_end":184763,"line_start":730,"line_end":730,"column_start":5,"column_end":47}},{"value":"/     i += 1;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":184768,"byte_end":184783,"line_start":731,"line_end":731,"column_start":5,"column_end":20}},{"value":"/     if i <= 5 {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":184788,"byte_end":184807,"line_start":732,"line_end":732,"column_start":5,"column_end":24}},{"value":"/         Poll::Pending","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":184812,"byte_end":184837,"line_start":733,"line_end":733,"column_start":5,"column_end":30}},{"value":"/     } else {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":184842,"byte_end":184858,"line_start":734,"line_end":734,"column_start":5,"column_end":21}},{"value":"/         Poll::Ready(())","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":184863,"byte_end":184890,"line_start":735,"line_end":735,"column_start":5,"column_end":32}},{"value":"/     }","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":184895,"byte_end":184904,"line_start":736,"line_end":736,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":184909,"byte_end":184916,"line_start":737,"line_end":737,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":184921,"byte_end":184924,"line_start":738,"line_end":738,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.take_until(stop_fut);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":184929,"byte_end":184974,"line_start":739,"line_end":739,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":184979,"byte_end":184982,"line_start":740,"line_end":740,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3, 4, 5], stream.collect::<Vec<_>>().await);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":184987,"byte_end":185057,"line_start":741,"line_end":741,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":185062,"byte_end":185071,"line_start":742,"line_end":742,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":185076,"byte_end":185083,"line_start":743,"line_end":743,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2030},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":186308,"byte_end":186316,"line_start":785,"line_end":785,"column_start":8,"column_end":16},"name":"for_each","qualname":"::stream::stream::StreamExt::for_each","value":"fn <Fut, F> (self, f: F) -> ForEach<Self, Fut, F>","parent":{"krate":0,"index":1989},"children":[],"decl_id":null,"docs":" Runs this stream to completion, executing the provided asynchronous\n closure for each element on the stream.","sig":null,"attributes":[{"value":"/ Runs this stream to completion, executing the provided asynchronous","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":185250,"byte_end":185321,"line_start":752,"line_end":752,"column_start":5,"column_end":76}},{"value":"/ closure for each element on the stream.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":185326,"byte_end":185369,"line_start":753,"line_end":753,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":185374,"byte_end":185377,"line_start":754,"line_end":754,"column_start":5,"column_end":8}},{"value":"/ The closure provided will be called for each item this stream produces,","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":185382,"byte_end":185457,"line_start":755,"line_end":755,"column_start":5,"column_end":80}},{"value":"/ yielding a future. That future will then be executed to completion","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":185462,"byte_end":185532,"line_start":756,"line_end":756,"column_start":5,"column_end":75}},{"value":"/ before moving on to the next item.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":185537,"byte_end":185575,"line_start":757,"line_end":757,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":185580,"byte_end":185583,"line_start":758,"line_end":758,"column_start":5,"column_end":8}},{"value":"/ The returned value is a `Future` where the `Output` type is `()`; it is","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":185588,"byte_end":185663,"line_start":759,"line_end":759,"column_start":5,"column_end":80}},{"value":"/ executed entirely for its side effects.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":185668,"byte_end":185711,"line_start":760,"line_end":760,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":185716,"byte_end":185719,"line_start":761,"line_end":761,"column_start":5,"column_end":8}},{"value":"/ To process each item in the stream and produce another stream instead","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":185724,"byte_end":185797,"line_start":762,"line_end":762,"column_start":5,"column_end":78}},{"value":"/ of a single future, use `then` instead.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":185802,"byte_end":185845,"line_start":763,"line_end":763,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":185850,"byte_end":185853,"line_start":764,"line_end":764,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":185858,"byte_end":185872,"line_start":765,"line_end":765,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":185877,"byte_end":185880,"line_start":766,"line_end":766,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":185885,"byte_end":185892,"line_start":767,"line_end":767,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":185897,"byte_end":185938,"line_start":768,"line_end":768,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":185943,"byte_end":185967,"line_start":769,"line_end":769,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":185972,"byte_end":186015,"line_start":770,"line_end":770,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":186020,"byte_end":186023,"line_start":771,"line_end":771,"column_start":5,"column_end":8}},{"value":"/ let mut x = 0;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":186028,"byte_end":186046,"line_start":772,"line_end":772,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":186051,"byte_end":186054,"line_start":773,"line_end":773,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":186059,"byte_end":186064,"line_start":774,"line_end":774,"column_start":5,"column_end":10}},{"value":"/     let fut = stream::repeat(1).take(3).for_each(|item| {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":186069,"byte_end":186130,"line_start":775,"line_end":775,"column_start":5,"column_end":66}},{"value":"/         x += item;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":186135,"byte_end":186157,"line_start":776,"line_end":776,"column_start":5,"column_end":27}},{"value":"/         future::ready(())","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":186162,"byte_end":186191,"line_start":777,"line_end":777,"column_start":5,"column_end":34}},{"value":"/     });","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":186196,"byte_end":186207,"line_start":778,"line_end":778,"column_start":5,"column_end":16}},{"value":"/     fut.await;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":186212,"byte_end":186230,"line_start":779,"line_end":779,"column_start":5,"column_end":23}},{"value":"/ }","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":186235,"byte_end":186240,"line_start":780,"line_end":780,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":186245,"byte_end":186248,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x, 3);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":186253,"byte_end":186274,"line_start":782,"line_end":782,"column_start":5,"column_end":26}},{"value":"/ # });","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":186279,"byte_end":186288,"line_start":783,"line_end":783,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":186293,"byte_end":186300,"line_start":784,"line_end":784,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2033},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":188498,"byte_end":188517,"line_start":841,"line_end":841,"column_start":8,"column_end":27},"name":"for_each_concurrent","qualname":"::stream::stream::StreamExt::for_each_concurrent","value":"fn <Fut, F> (self, limit: impl Into<Option<usize>>, f: F) -> ForEachConcurrent<Self, Fut, F>","parent":{"krate":0,"index":1989},"children":[],"decl_id":null,"docs":" Runs this stream to completion, executing the provided asynchronous\n closure for each element on the stream concurrently as elements become\n available.","sig":null,"attributes":[{"value":"/ Runs this stream to completion, executing the provided asynchronous","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":186511,"byte_end":186582,"line_start":794,"line_end":794,"column_start":5,"column_end":76}},{"value":"/ closure for each element on the stream concurrently as elements become","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":186587,"byte_end":186661,"line_start":795,"line_end":795,"column_start":5,"column_end":79}},{"value":"/ available.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":186666,"byte_end":186680,"line_start":796,"line_end":796,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":186685,"byte_end":186688,"line_start":797,"line_end":797,"column_start":5,"column_end":8}},{"value":"/ This is similar to [`StreamExt::for_each`], but the futures","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":186693,"byte_end":186756,"line_start":798,"line_end":798,"column_start":5,"column_end":68}},{"value":"/ produced by the closure are run concurrently (but not in parallel--","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":186761,"byte_end":186832,"line_start":799,"line_end":799,"column_start":5,"column_end":76}},{"value":"/ this combinator does not introduce any threads).","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":186837,"byte_end":186889,"line_start":800,"line_end":800,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":186894,"byte_end":186897,"line_start":801,"line_end":801,"column_start":5,"column_end":8}},{"value":"/ The closure provided will be called for each item this stream produces,","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":186902,"byte_end":186977,"line_start":802,"line_end":802,"column_start":5,"column_end":80}},{"value":"/ yielding a future. That future will then be executed to completion","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":186982,"byte_end":187052,"line_start":803,"line_end":803,"column_start":5,"column_end":75}},{"value":"/ concurrently with the other futures produced by the closure.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":187057,"byte_end":187121,"line_start":804,"line_end":804,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":187126,"byte_end":187129,"line_start":805,"line_end":805,"column_start":5,"column_end":8}},{"value":"/ The first argument is an optional limit on the number of concurrent","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":187134,"byte_end":187205,"line_start":806,"line_end":806,"column_start":5,"column_end":76}},{"value":"/ futures. If this limit is not `None`, no more than `limit` futures","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":187210,"byte_end":187280,"line_start":807,"line_end":807,"column_start":5,"column_end":75}},{"value":"/ will be run concurrently. The `limit` argument is of type","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":187285,"byte_end":187346,"line_start":808,"line_end":808,"column_start":5,"column_end":66}},{"value":"/ `Into<Option<usize>>`, and so can be provided as either `None`,","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":187351,"byte_end":187418,"line_start":809,"line_end":809,"column_start":5,"column_end":72}},{"value":"/ `Some(10)`, or just `10`. Note: a limit of zero is interpreted as","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":187423,"byte_end":187492,"line_start":810,"line_end":810,"column_start":5,"column_end":74}},{"value":"/ no limit at all, and will have the same result as passing in `None`.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":187497,"byte_end":187569,"line_start":811,"line_end":811,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":187574,"byte_end":187577,"line_start":812,"line_end":812,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":187582,"byte_end":187657,"line_start":813,"line_end":813,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":187662,"byte_end":187719,"line_start":814,"line_end":814,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":187724,"byte_end":187727,"line_start":815,"line_end":815,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":187732,"byte_end":187746,"line_start":816,"line_end":816,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":187751,"byte_end":187754,"line_start":817,"line_end":817,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":187759,"byte_end":187766,"line_start":818,"line_end":818,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":187771,"byte_end":187812,"line_start":819,"line_end":819,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":187817,"byte_end":187851,"line_start":820,"line_end":820,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":187856,"byte_end":187899,"line_start":821,"line_end":821,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":187904,"byte_end":187907,"line_start":822,"line_end":822,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = oneshot::channel();","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":187912,"byte_end":187952,"line_start":823,"line_end":823,"column_start":5,"column_end":45}},{"value":"/ let (tx2, rx2) = oneshot::channel();","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":187957,"byte_end":187997,"line_start":824,"line_end":824,"column_start":5,"column_end":45}},{"value":"/ let (tx3, rx3) = oneshot::channel();","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":188002,"byte_end":188042,"line_start":825,"line_end":825,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":188047,"byte_end":188050,"line_start":826,"line_end":826,"column_start":5,"column_end":8}},{"value":"/ let fut = stream::iter(vec![rx1, rx2, rx3]).for_each_concurrent(","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":188055,"byte_end":188123,"line_start":827,"line_end":827,"column_start":5,"column_end":73}},{"value":"/     /* limit */ 2,","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":188128,"byte_end":188150,"line_start":828,"line_end":828,"column_start":5,"column_end":27}},{"value":"/     |rx| async move {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":188155,"byte_end":188180,"line_start":829,"line_end":829,"column_start":5,"column_end":30}},{"value":"/         rx.await.unwrap();","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":188185,"byte_end":188215,"line_start":830,"line_end":830,"column_start":5,"column_end":35}},{"value":"/     }","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":188220,"byte_end":188229,"line_start":831,"line_end":831,"column_start":5,"column_end":14}},{"value":"/ );","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":188234,"byte_end":188240,"line_start":832,"line_end":832,"column_start":5,"column_end":11}},{"value":"/ tx1.send(()).unwrap();","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":188245,"byte_end":188271,"line_start":833,"line_end":833,"column_start":5,"column_end":31}},{"value":"/ tx2.send(()).unwrap();","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":188276,"byte_end":188302,"line_start":834,"line_end":834,"column_start":5,"column_end":31}},{"value":"/ tx3.send(()).unwrap();","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":188307,"byte_end":188333,"line_start":835,"line_end":835,"column_start":5,"column_end":31}},{"value":"/ fut.await;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":188338,"byte_end":188352,"line_start":836,"line_end":836,"column_start":5,"column_end":19}},{"value":"/ # })","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":188357,"byte_end":188365,"line_start":837,"line_end":837,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":188370,"byte_end":188377,"line_start":838,"line_end":838,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":188465,"byte_end":188490,"line_start":840,"line_end":840,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2037},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":189318,"byte_end":189322,"line_start":870,"line_end":870,"column_start":8,"column_end":12},"name":"take","qualname":"::stream::stream::StreamExt::take","value":"fn (self, n: usize) -> Take<Self>","parent":{"krate":0,"index":1989},"children":[],"decl_id":null,"docs":" Creates a new stream of at most `n` items of the underlying stream.","sig":null,"attributes":[{"value":"/ Creates a new stream of at most `n` items of the underlying stream.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":188810,"byte_end":188881,"line_start":854,"line_end":854,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":188886,"byte_end":188889,"line_start":855,"line_end":855,"column_start":5,"column_end":8}},{"value":"/ Once `n` items have been yielded from this stream then it will always","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":188894,"byte_end":188967,"line_start":856,"line_end":856,"column_start":5,"column_end":78}},{"value":"/ return that the stream is done.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":188972,"byte_end":189007,"line_start":857,"line_end":857,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":189012,"byte_end":189015,"line_start":858,"line_end":858,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":189020,"byte_end":189034,"line_start":859,"line_end":859,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":189039,"byte_end":189042,"line_start":860,"line_end":860,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":189047,"byte_end":189054,"line_start":861,"line_end":861,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":189059,"byte_end":189100,"line_start":862,"line_end":862,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":189105,"byte_end":189148,"line_start":863,"line_end":863,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":189153,"byte_end":189156,"line_start":864,"line_end":864,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10).take(3);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":189161,"byte_end":189207,"line_start":865,"line_end":865,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":189212,"byte_end":189215,"line_start":866,"line_end":866,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3], stream.collect::<Vec<_>>().await);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":189220,"byte_end":189284,"line_start":867,"line_end":867,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":189289,"byte_end":189298,"line_start":868,"line_end":868,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":189303,"byte_end":189310,"line_start":869,"line_end":869,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2038},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":189955,"byte_end":189959,"line_start":893,"line_end":893,"column_start":8,"column_end":12},"name":"skip","qualname":"::stream::stream::StreamExt::skip","value":"fn (self, n: usize) -> Skip<Self>","parent":{"krate":0,"index":1989},"children":[],"decl_id":null,"docs":" Creates a new stream which skips `n` items of the underlying stream.","sig":null,"attributes":[{"value":"/ Creates a new stream which skips `n` items of the underlying stream.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":189428,"byte_end":189500,"line_start":877,"line_end":877,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":189505,"byte_end":189508,"line_start":878,"line_end":878,"column_start":5,"column_end":8}},{"value":"/ Once `n` items have been skipped from this stream then it will always","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":189513,"byte_end":189586,"line_start":879,"line_end":879,"column_start":5,"column_end":78}},{"value":"/ return the remaining items on this stream.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":189591,"byte_end":189637,"line_start":880,"line_end":880,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":189642,"byte_end":189645,"line_start":881,"line_end":881,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":189650,"byte_end":189664,"line_start":882,"line_end":882,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":189669,"byte_end":189672,"line_start":883,"line_end":883,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":189677,"byte_end":189684,"line_start":884,"line_end":884,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":189689,"byte_end":189730,"line_start":885,"line_end":885,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":189735,"byte_end":189778,"line_start":886,"line_end":886,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":189783,"byte_end":189786,"line_start":887,"line_end":887,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10).skip(5);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":189791,"byte_end":189837,"line_start":888,"line_end":888,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":189842,"byte_end":189845,"line_start":889,"line_end":889,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![6, 7, 8, 9, 10], stream.collect::<Vec<_>>().await);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":189850,"byte_end":189921,"line_start":890,"line_end":890,"column_start":5,"column_end":76}},{"value":"/ # });","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":189926,"byte_end":189935,"line_start":891,"line_end":891,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":189940,"byte_end":189947,"line_start":892,"line_end":892,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2039},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":191548,"byte_end":191552,"line_start":939,"line_end":939,"column_start":8,"column_end":12},"name":"fuse","qualname":"::stream::stream::StreamExt::fuse","value":"fn (self) -> Fuse<Self>","parent":{"krate":0,"index":1989},"children":[],"decl_id":null,"docs":" Fuse a stream such that [`poll_next`](Stream::poll_next) will never\n again be called once it has finished. This method can be used to turn\n any `Stream` into a `FusedStream`.","sig":null,"attributes":[{"value":"/ Fuse a stream such that [`poll_next`](Stream::poll_next) will never","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":190065,"byte_end":190136,"line_start":900,"line_end":900,"column_start":5,"column_end":76}},{"value":"/ again be called once it has finished. This method can be used to turn","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":190141,"byte_end":190214,"line_start":901,"line_end":901,"column_start":5,"column_end":78}},{"value":"/ any `Stream` into a `FusedStream`.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":190219,"byte_end":190257,"line_start":902,"line_end":902,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":190262,"byte_end":190265,"line_start":903,"line_end":903,"column_start":5,"column_end":8}},{"value":"/ Normally, once a stream has returned [`None`] from","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":190270,"byte_end":190324,"line_start":904,"line_end":904,"column_start":5,"column_end":59}},{"value":"/ [`poll_next`](Stream::poll_next) any further calls could exhibit bad","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":190329,"byte_end":190401,"line_start":905,"line_end":905,"column_start":5,"column_end":77}},{"value":"/ behavior such as block forever, panic, never return, etc. If it is known","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":190406,"byte_end":190482,"line_start":906,"line_end":906,"column_start":5,"column_end":81}},{"value":"/ that [`poll_next`](Stream::poll_next) may be called after stream","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":190487,"byte_end":190555,"line_start":907,"line_end":907,"column_start":5,"column_end":73}},{"value":"/ has already finished, then this method can be used to ensure that it has","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":190560,"byte_end":190636,"line_start":908,"line_end":908,"column_start":5,"column_end":81}},{"value":"/ defined semantics.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":190641,"byte_end":190663,"line_start":909,"line_end":909,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":190668,"byte_end":190671,"line_start":910,"line_end":910,"column_start":5,"column_end":8}},{"value":"/ The [`poll_next`](Stream::poll_next) method of a `fuse`d stream","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":190676,"byte_end":190743,"line_start":911,"line_end":911,"column_start":5,"column_end":72}},{"value":"/ is guaranteed to return [`None`] after the underlying stream has","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":190748,"byte_end":190816,"line_start":912,"line_end":912,"column_start":5,"column_end":73}},{"value":"/ finished.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":190821,"byte_end":190834,"line_start":913,"line_end":913,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":190839,"byte_end":190842,"line_start":914,"line_end":914,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":190847,"byte_end":190861,"line_start":915,"line_end":915,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":190866,"byte_end":190869,"line_start":916,"line_end":916,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":190874,"byte_end":190881,"line_start":917,"line_end":917,"column_start":5,"column_end":12}},{"value":"/ use futures::executor::block_on_stream;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":190886,"byte_end":190929,"line_start":918,"line_end":918,"column_start":5,"column_end":48}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":190934,"byte_end":190977,"line_start":919,"line_end":919,"column_start":5,"column_end":48}},{"value":"/ use futures::task::Poll;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":190982,"byte_end":191010,"line_start":920,"line_end":920,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":191015,"byte_end":191018,"line_start":921,"line_end":921,"column_start":5,"column_end":8}},{"value":"/ let mut x = 0;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":191023,"byte_end":191041,"line_start":922,"line_end":922,"column_start":5,"column_end":23}},{"value":"/ let stream = stream::poll_fn(|_| {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":191046,"byte_end":191084,"line_start":923,"line_end":923,"column_start":5,"column_end":43}},{"value":"/     x += 1;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":191089,"byte_end":191104,"line_start":924,"line_end":924,"column_start":5,"column_end":20}},{"value":"/     match x {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":191109,"byte_end":191126,"line_start":925,"line_end":925,"column_start":5,"column_end":22}},{"value":"/         0..=2 => Poll::Ready(Some(x)),","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":191131,"byte_end":191173,"line_start":926,"line_end":926,"column_start":5,"column_end":47}},{"value":"/         3 => Poll::Ready(None),","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":191178,"byte_end":191213,"line_start":927,"line_end":927,"column_start":5,"column_end":40}},{"value":"/         _ => panic!(\"should not happen\")","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":191218,"byte_end":191262,"line_start":928,"line_end":928,"column_start":5,"column_end":49}},{"value":"/     }","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":191267,"byte_end":191276,"line_start":929,"line_end":929,"column_start":5,"column_end":14}},{"value":"/ }).fuse();","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":191281,"byte_end":191295,"line_start":930,"line_end":930,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":191300,"byte_end":191303,"line_start":931,"line_end":931,"column_start":5,"column_end":8}},{"value":"/ let mut iter = block_on_stream(stream);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":191308,"byte_end":191351,"line_start":932,"line_end":932,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(Some(1), iter.next());","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":191356,"byte_end":191393,"line_start":933,"line_end":933,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(Some(2), iter.next());","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":191398,"byte_end":191435,"line_start":934,"line_end":934,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(None, iter.next());","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":191440,"byte_end":191474,"line_start":935,"line_end":935,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(None, iter.next());","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":191479,"byte_end":191513,"line_start":936,"line_end":936,"column_start":5,"column_end":39}},{"value":"/ // ...","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":191518,"byte_end":191528,"line_start":937,"line_end":937,"column_start":5,"column_end":15}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":191533,"byte_end":191540,"line_start":938,"line_end":938,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2040},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":192449,"byte_end":192455,"line_start":972,"line_end":972,"column_start":8,"column_end":14},"name":"by_ref","qualname":"::stream::stream::StreamExt::by_ref","value":"fn (&mut self) -> &mut Self","parent":{"krate":0,"index":1989},"children":[],"decl_id":null,"docs":" Borrows a stream, rather than consuming it.","sig":null,"attributes":[{"value":"/ Borrows a stream, rather than consuming it.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":191645,"byte_end":191692,"line_start":946,"line_end":946,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":191697,"byte_end":191700,"line_start":947,"line_end":947,"column_start":5,"column_end":8}},{"value":"/ This is useful to allow applying stream adaptors while still retaining","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":191705,"byte_end":191779,"line_start":948,"line_end":948,"column_start":5,"column_end":79}},{"value":"/ ownership of the original stream.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":191784,"byte_end":191821,"line_start":949,"line_end":949,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":191826,"byte_end":191829,"line_start":950,"line_end":950,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":191834,"byte_end":191848,"line_start":951,"line_end":951,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":191853,"byte_end":191856,"line_start":952,"line_end":952,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":191861,"byte_end":191868,"line_start":953,"line_end":953,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":191873,"byte_end":191914,"line_start":954,"line_end":954,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":191919,"byte_end":191962,"line_start":955,"line_end":955,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":191967,"byte_end":191970,"line_start":956,"line_end":956,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..5);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":191975,"byte_end":192015,"line_start":957,"line_end":957,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":192020,"byte_end":192023,"line_start":958,"line_end":958,"column_start":5,"column_end":8}},{"value":"/ let sum = stream.by_ref()","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":192028,"byte_end":192057,"line_start":959,"line_end":959,"column_start":5,"column_end":34}},{"value":"/                 .take(2)","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":192062,"byte_end":192090,"line_start":960,"line_end":960,"column_start":5,"column_end":33}},{"value":"/                 .fold(0, |a, b| async move { a + b })","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":192095,"byte_end":192152,"line_start":961,"line_end":961,"column_start":5,"column_end":62}},{"value":"/                 .await;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":192157,"byte_end":192184,"line_start":962,"line_end":962,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(sum, 3);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":192189,"byte_end":192212,"line_start":963,"line_end":963,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":192217,"byte_end":192220,"line_start":964,"line_end":964,"column_start":5,"column_end":8}},{"value":"/ // You can use the stream again","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":192225,"byte_end":192260,"line_start":965,"line_end":965,"column_start":5,"column_end":40}},{"value":"/ let sum = stream.take(2)","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":192265,"byte_end":192293,"line_start":966,"line_end":966,"column_start":5,"column_end":33}},{"value":"/                 .fold(0, |a, b| async move { a + b })","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":192298,"byte_end":192355,"line_start":967,"line_end":967,"column_start":5,"column_end":62}},{"value":"/                 .await;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":192360,"byte_end":192387,"line_start":968,"line_end":968,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(sum, 7);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":192392,"byte_end":192415,"line_start":969,"line_end":969,"column_start":5,"column_end":28}},{"value":"/ # });","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":192420,"byte_end":192429,"line_start":970,"line_end":970,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":192434,"byte_end":192441,"line_start":971,"line_end":971,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2041},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":194214,"byte_end":194226,"line_start":1017,"line_end":1017,"column_start":8,"column_end":20},"name":"catch_unwind","qualname":"::stream::stream::StreamExt::catch_unwind","value":"fn (self) -> CatchUnwind<Self>","parent":{"krate":0,"index":1989},"children":[],"decl_id":null,"docs":" Catches unwinding panics while polling the stream.","sig":null,"attributes":[{"value":"/ Catches unwinding panics while polling the stream.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":192506,"byte_end":192560,"line_start":976,"line_end":976,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":192565,"byte_end":192568,"line_start":977,"line_end":977,"column_start":5,"column_end":8}},{"value":"/ Caught panic (if any) will be the last element of the resulting stream.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":192573,"byte_end":192648,"line_start":978,"line_end":978,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":192653,"byte_end":192656,"line_start":979,"line_end":979,"column_start":5,"column_end":8}},{"value":"/ In general, panics within a stream can propagate all the way out to the","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":192661,"byte_end":192736,"line_start":980,"line_end":980,"column_start":5,"column_end":80}},{"value":"/ task level. This combinator makes it possible to halt unwinding within","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":192741,"byte_end":192815,"line_start":981,"line_end":981,"column_start":5,"column_end":79}},{"value":"/ the stream itself. It's most commonly used within task executors. This","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":192820,"byte_end":192894,"line_start":982,"line_end":982,"column_start":5,"column_end":79}},{"value":"/ method should not be used for error handling.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":192899,"byte_end":192948,"line_start":983,"line_end":983,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":192953,"byte_end":192956,"line_start":984,"line_end":984,"column_start":5,"column_end":8}},{"value":"/ Note that this method requires the `UnwindSafe` bound from the standard","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":192961,"byte_end":193036,"line_start":985,"line_end":985,"column_start":5,"column_end":80}},{"value":"/ library. This isn't always applied automatically, and the standard","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":193041,"byte_end":193111,"line_start":986,"line_end":986,"column_start":5,"column_end":75}},{"value":"/ library provides an `AssertUnwindSafe` wrapper type to apply it","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":193116,"byte_end":193183,"line_start":987,"line_end":987,"column_start":5,"column_end":72}},{"value":"/ after-the fact. To assist using this method, the [`Stream`] trait is","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":193188,"byte_end":193260,"line_start":988,"line_end":988,"column_start":5,"column_end":77}},{"value":"/ also implemented for `AssertUnwindSafe<St>` where `St` implements","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":193265,"byte_end":193334,"line_start":989,"line_end":989,"column_start":5,"column_end":74}},{"value":"/ [`Stream`].","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":193339,"byte_end":193354,"line_start":990,"line_end":990,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":193359,"byte_end":193362,"line_start":991,"line_end":991,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` feature of this","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":193367,"byte_end":193431,"line_start":992,"line_end":992,"column_start":5,"column_end":69}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":193436,"byte_end":193493,"line_start":993,"line_end":993,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":193498,"byte_end":193501,"line_start":994,"line_end":994,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":193506,"byte_end":193520,"line_start":995,"line_end":995,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":193525,"byte_end":193528,"line_start":996,"line_end":996,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":193533,"byte_end":193540,"line_start":997,"line_end":997,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":193545,"byte_end":193586,"line_start":998,"line_end":998,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":193591,"byte_end":193634,"line_start":999,"line_end":999,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":193639,"byte_end":193642,"line_start":1000,"line_end":1000,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Some(10), None, Some(11)]);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":193647,"byte_end":193709,"line_start":1001,"line_end":1001,"column_start":5,"column_end":67}},{"value":"/ // Panic on second element","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":193714,"byte_end":193744,"line_start":1002,"line_end":1002,"column_start":5,"column_end":35}},{"value":"/ let stream_panicking = stream.map(|o| o.unwrap());","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":193749,"byte_end":193803,"line_start":1003,"line_end":1003,"column_start":5,"column_end":59}},{"value":"/ // Collect all the results","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":193808,"byte_end":193838,"line_start":1004,"line_end":1004,"column_start":5,"column_end":35}},{"value":"/ let stream = stream_panicking.catch_unwind();","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":193843,"byte_end":193892,"line_start":1005,"line_end":1005,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":193897,"byte_end":193900,"line_start":1006,"line_end":1006,"column_start":5,"column_end":8}},{"value":"/ let results: Vec<Result<i32, _>> = stream.collect().await;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":193905,"byte_end":193967,"line_start":1007,"line_end":1007,"column_start":5,"column_end":67}},{"value":"/ match results[0] {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":193972,"byte_end":193994,"line_start":1008,"line_end":1008,"column_start":5,"column_end":27}},{"value":"/     Ok(10) => {}","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":193999,"byte_end":194019,"line_start":1009,"line_end":1009,"column_start":5,"column_end":25}},{"value":"/     _ => panic!(\"unexpected result!\"),","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":194024,"byte_end":194066,"line_start":1010,"line_end":1010,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":194071,"byte_end":194076,"line_start":1011,"line_end":1011,"column_start":5,"column_end":10}},{"value":"/ assert!(results[1].is_err());","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":194081,"byte_end":194114,"line_start":1012,"line_end":1012,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(results.len(), 2);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":194119,"byte_end":194152,"line_start":1013,"line_end":1013,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":194157,"byte_end":194166,"line_start":1014,"line_end":1014,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":194171,"byte_end":194178,"line_start":1015,"line_end":1015,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":194183,"byte_end":194206,"line_start":1016,"line_end":1016,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":2042},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":194587,"byte_end":194592,"line_start":1029,"line_end":1029,"column_start":8,"column_end":13},"name":"boxed","qualname":"::stream::stream::StreamExt::boxed","value":"fn <'a> (self) -> BoxStream<'a, Self::Item>","parent":{"krate":0,"index":1989},"children":[],"decl_id":null,"docs":" Wrap the stream in a Box, pinning it.","sig":null,"attributes":[{"value":"/ Wrap the stream in a Box, pinning it.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":194358,"byte_end":194399,"line_start":1024,"line_end":1024,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":194404,"byte_end":194407,"line_start":1025,"line_end":1025,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":194412,"byte_end":194487,"line_start":1026,"line_end":1026,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":194492,"byte_end":194549,"line_start":1027,"line_end":1027,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":194554,"byte_end":194579,"line_start":1028,"line_end":1028,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2044},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":195016,"byte_end":195027,"line_start":1043,"line_end":1043,"column_start":8,"column_end":19},"name":"boxed_local","qualname":"::stream::stream::StreamExt::boxed_local","value":"fn <'a> (self) -> LocalBoxStream<'a, Self::Item>","parent":{"krate":0,"index":1989},"children":[],"decl_id":null,"docs":" Wrap the stream in a Box, pinning it.","sig":null,"attributes":[{"value":"/ Wrap the stream in a Box, pinning it.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":194715,"byte_end":194756,"line_start":1036,"line_end":1036,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":194761,"byte_end":194764,"line_start":1037,"line_end":1037,"column_start":5,"column_end":8}},{"value":"/ Similar to `boxed`, but without the `Send` requirement.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":194769,"byte_end":194828,"line_start":1038,"line_end":1038,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":194833,"byte_end":194836,"line_start":1039,"line_end":1039,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":194841,"byte_end":194916,"line_start":1040,"line_end":1040,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":194921,"byte_end":194978,"line_start":1041,"line_end":1041,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":194983,"byte_end":195008,"line_start":1042,"line_end":1042,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2046},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":195932,"byte_end":195940,"line_start":1064,"line_end":1064,"column_start":8,"column_end":16},"name":"buffered","qualname":"::stream::stream::StreamExt::buffered","value":"fn (self, n: usize) -> Buffered<Self>","parent":{"krate":0,"index":1989},"children":[],"decl_id":null,"docs":" An adaptor for creating a buffered list of pending futures.","sig":null,"attributes":[{"value":"/ An adaptor for creating a buffered list of pending futures.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":195148,"byte_end":195211,"line_start":1050,"line_end":1050,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":195216,"byte_end":195219,"line_start":1051,"line_end":1051,"column_start":5,"column_end":8}},{"value":"/ If this stream's item can be converted into a future, then this adaptor","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":195224,"byte_end":195299,"line_start":1052,"line_end":1052,"column_start":5,"column_end":80}},{"value":"/ will buffer up to at most `n` futures and then return the outputs in the","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":195304,"byte_end":195380,"line_start":1053,"line_end":1053,"column_start":5,"column_end":81}},{"value":"/ same order as the underlying stream. No more than `n` futures will be","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":195385,"byte_end":195458,"line_start":1054,"line_end":1054,"column_start":5,"column_end":78}},{"value":"/ buffered at any point in time, and less than `n` may also be buffered","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":195463,"byte_end":195536,"line_start":1055,"line_end":1055,"column_start":5,"column_end":78}},{"value":"/ depending on the state of each future.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":195541,"byte_end":195583,"line_start":1056,"line_end":1056,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":195588,"byte_end":195591,"line_start":1057,"line_end":1057,"column_start":5,"column_end":8}},{"value":"/ The returned stream will be a stream of each future's output.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":195596,"byte_end":195661,"line_start":1058,"line_end":1058,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":195666,"byte_end":195669,"line_start":1059,"line_end":1059,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":195674,"byte_end":195749,"line_start":1060,"line_end":1060,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":195754,"byte_end":195811,"line_start":1061,"line_end":1061,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":195899,"byte_end":195924,"line_start":1063,"line_end":1063,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2047},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":197612,"byte_end":197628,"line_start":1109,"line_end":1109,"column_start":8,"column_end":24},"name":"buffer_unordered","qualname":"::stream::stream::StreamExt::buffer_unordered","value":"fn (self, n: usize) -> BufferUnordered<Self>","parent":{"krate":0,"index":1989},"children":[],"decl_id":null,"docs":" An adaptor for creating a buffered list of pending futures (unordered).","sig":null,"attributes":[{"value":"/ An adaptor for creating a buffered list of pending futures (unordered).","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":196082,"byte_end":196157,"line_start":1072,"line_end":1072,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":196162,"byte_end":196165,"line_start":1073,"line_end":1073,"column_start":5,"column_end":8}},{"value":"/ If this stream's item can be converted into a future, then this adaptor","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":196170,"byte_end":196245,"line_start":1074,"line_end":1074,"column_start":5,"column_end":80}},{"value":"/ will buffer up to `n` futures and then return the outputs in the order","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":196250,"byte_end":196324,"line_start":1075,"line_end":1075,"column_start":5,"column_end":79}},{"value":"/ in which they complete. No more than `n` futures will be buffered at","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":196329,"byte_end":196401,"line_start":1076,"line_end":1076,"column_start":5,"column_end":77}},{"value":"/ any point in time, and less than `n` may also be buffered depending on","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":196406,"byte_end":196480,"line_start":1077,"line_end":1077,"column_start":5,"column_end":79}},{"value":"/ the state of each future.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":196485,"byte_end":196514,"line_start":1078,"line_end":1078,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":196519,"byte_end":196522,"line_start":1079,"line_end":1079,"column_start":5,"column_end":8}},{"value":"/ The returned stream will be a stream of each future's output.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":196527,"byte_end":196592,"line_start":1080,"line_end":1080,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":196597,"byte_end":196600,"line_start":1081,"line_end":1081,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":196605,"byte_end":196680,"line_start":1082,"line_end":1082,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":196685,"byte_end":196742,"line_start":1083,"line_end":1083,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":196747,"byte_end":196750,"line_start":1084,"line_end":1084,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":196755,"byte_end":196769,"line_start":1085,"line_end":1085,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":196774,"byte_end":196777,"line_start":1086,"line_end":1086,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":196782,"byte_end":196789,"line_start":1087,"line_end":1087,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":196794,"byte_end":196835,"line_start":1088,"line_end":1088,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":196840,"byte_end":196874,"line_start":1089,"line_end":1089,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":196879,"byte_end":196922,"line_start":1090,"line_end":1090,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":196927,"byte_end":196930,"line_start":1091,"line_end":1091,"column_start":5,"column_end":8}},{"value":"/ let (send_one, recv_one) = oneshot::channel();","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":196935,"byte_end":196985,"line_start":1092,"line_end":1092,"column_start":5,"column_end":55}},{"value":"/ let (send_two, recv_two) = oneshot::channel();","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":196990,"byte_end":197040,"line_start":1093,"line_end":1093,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":197045,"byte_end":197048,"line_start":1094,"line_end":1094,"column_start":5,"column_end":8}},{"value":"/ let stream_of_futures = stream::iter(vec![recv_one, recv_two]);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":197053,"byte_end":197120,"line_start":1095,"line_end":1095,"column_start":5,"column_end":72}},{"value":"/ let mut buffered = stream_of_futures.buffer_unordered(10);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":197125,"byte_end":197187,"line_start":1096,"line_end":1096,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":197192,"byte_end":197195,"line_start":1097,"line_end":1097,"column_start":5,"column_end":8}},{"value":"/ send_two.send(2i32)?;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":197200,"byte_end":197225,"line_start":1098,"line_end":1098,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(2i32)));","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":197230,"byte_end":197284,"line_start":1099,"line_end":1099,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":197289,"byte_end":197292,"line_start":1100,"line_end":1100,"column_start":5,"column_end":8}},{"value":"/ send_one.send(1i32)?;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":197297,"byte_end":197322,"line_start":1101,"line_end":1101,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(1i32)));","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":197327,"byte_end":197381,"line_start":1102,"line_end":1102,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":197386,"byte_end":197389,"line_start":1103,"line_end":1103,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buffered.next().await, None);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":197394,"byte_end":197438,"line_start":1104,"line_end":1104,"column_start":5,"column_end":49}},{"value":"/ # Ok::<(), i32>(()) }).unwrap();","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":197443,"byte_end":197479,"line_start":1105,"line_end":1105,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":197484,"byte_end":197491,"line_start":1106,"line_end":1106,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":197579,"byte_end":197604,"line_start":1108,"line_end":1108,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2048},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":198472,"byte_end":198475,"line_start":1139,"line_end":1139,"column_start":8,"column_end":11},"name":"zip","qualname":"::stream::stream::StreamExt::zip","value":"fn <St> (self, other: St) -> Zip<Self, St>","parent":{"krate":0,"index":1989},"children":[],"decl_id":null,"docs":" An adapter for zipping two streams together.","sig":null,"attributes":[{"value":"/ An adapter for zipping two streams together.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":197784,"byte_end":197832,"line_start":1117,"line_end":1117,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":197837,"byte_end":197840,"line_start":1118,"line_end":1118,"column_start":5,"column_end":8}},{"value":"/ The zipped stream waits for both streams to produce an item, and then","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":197845,"byte_end":197918,"line_start":1119,"line_end":1119,"column_start":5,"column_end":78}},{"value":"/ returns that pair. If either stream ends then the zipped stream will","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":197923,"byte_end":197995,"line_start":1120,"line_end":1120,"column_start":5,"column_end":77}},{"value":"/ also end.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":198000,"byte_end":198013,"line_start":1121,"line_end":1121,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":198018,"byte_end":198021,"line_start":1122,"line_end":1122,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":198026,"byte_end":198040,"line_start":1123,"line_end":1123,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":198045,"byte_end":198048,"line_start":1124,"line_end":1124,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":198053,"byte_end":198060,"line_start":1125,"line_end":1125,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":198065,"byte_end":198106,"line_start":1126,"line_end":1126,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":198111,"byte_end":198154,"line_start":1127,"line_end":1127,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":198159,"byte_end":198162,"line_start":1128,"line_end":1128,"column_start":5,"column_end":8}},{"value":"/ let stream1 = stream::iter(1..=3);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":198167,"byte_end":198205,"line_start":1129,"line_end":1129,"column_start":5,"column_end":43}},{"value":"/ let stream2 = stream::iter(5..=10);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":198210,"byte_end":198249,"line_start":1130,"line_end":1130,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":198254,"byte_end":198257,"line_start":1131,"line_end":1131,"column_start":5,"column_end":8}},{"value":"/ let vec = stream1.zip(stream2)","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":198262,"byte_end":198296,"line_start":1132,"line_end":1132,"column_start":5,"column_end":39}},{"value":"/                  .collect::<Vec<_>>()","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":198301,"byte_end":198342,"line_start":1133,"line_end":1133,"column_start":5,"column_end":46}},{"value":"/                  .await;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":198347,"byte_end":198375,"line_start":1134,"line_end":1134,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(vec![(1, 5), (2, 6), (3, 7)], vec);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":198380,"byte_end":198430,"line_start":1135,"line_end":1135,"column_start":5,"column_end":55}},{"value":"/ # });","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":198435,"byte_end":198444,"line_start":1136,"line_end":1136,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":198449,"byte_end":198456,"line_start":1137,"line_end":1137,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":198461,"byte_end":198464,"line_start":1138,"line_end":1138,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2050},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":199339,"byte_end":199344,"line_start":1170,"line_end":1170,"column_start":8,"column_end":13},"name":"chain","qualname":"::stream::stream::StreamExt::chain","value":"fn <St> (self, other: St) -> Chain<Self, St>","parent":{"krate":0,"index":1989},"children":[],"decl_id":null,"docs":" Adapter for chaining two streams.","sig":null,"attributes":[{"value":"/ Adapter for chaining two streams.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":198612,"byte_end":198649,"line_start":1147,"line_end":1147,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":198654,"byte_end":198657,"line_start":1148,"line_end":1148,"column_start":5,"column_end":8}},{"value":"/ The resulting stream emits elements from the first stream, and when","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":198662,"byte_end":198733,"line_start":1149,"line_end":1149,"column_start":5,"column_end":76}},{"value":"/ first stream reaches the end, emits the elements from the second stream.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":198738,"byte_end":198814,"line_start":1150,"line_end":1150,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":198819,"byte_end":198822,"line_start":1151,"line_end":1151,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":198827,"byte_end":198834,"line_start":1152,"line_end":1152,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":198839,"byte_end":198880,"line_start":1153,"line_end":1153,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":198885,"byte_end":198928,"line_start":1154,"line_end":1154,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":198933,"byte_end":198936,"line_start":1155,"line_end":1155,"column_start":5,"column_end":8}},{"value":"/ let stream1 = stream::iter(vec![Ok(10), Err(false)]);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":198941,"byte_end":198998,"line_start":1156,"line_end":1156,"column_start":5,"column_end":62}},{"value":"/ let stream2 = stream::iter(vec![Err(true), Ok(20)]);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":199003,"byte_end":199059,"line_start":1157,"line_end":1157,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":199064,"byte_end":199067,"line_start":1158,"line_end":1158,"column_start":5,"column_end":8}},{"value":"/ let stream = stream1.chain(stream2);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":199072,"byte_end":199112,"line_start":1159,"line_end":1159,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":199117,"byte_end":199120,"line_start":1160,"line_end":1160,"column_start":5,"column_end":8}},{"value":"/ let result: Vec<_> = stream.collect().await;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":199125,"byte_end":199173,"line_start":1161,"line_end":1161,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(result, vec![","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":199178,"byte_end":199206,"line_start":1162,"line_end":1162,"column_start":5,"column_end":33}},{"value":"/     Ok(10),","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":199211,"byte_end":199226,"line_start":1163,"line_end":1163,"column_start":5,"column_end":20}},{"value":"/     Err(false),","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":199231,"byte_end":199250,"line_start":1164,"line_end":1164,"column_start":5,"column_end":24}},{"value":"/     Err(true),","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":199255,"byte_end":199273,"line_start":1165,"line_end":1165,"column_start":5,"column_end":23}},{"value":"/     Ok(20),","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":199278,"byte_end":199293,"line_start":1166,"line_end":1166,"column_start":5,"column_end":20}},{"value":"/ ]);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":199298,"byte_end":199305,"line_start":1167,"line_end":1167,"column_start":5,"column_end":12}},{"value":"/ # });","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":199310,"byte_end":199319,"line_start":1168,"line_end":1168,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":199324,"byte_end":199331,"line_start":1169,"line_end":1169,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2052},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":199650,"byte_end":199658,"line_start":1181,"line_end":1181,"column_start":8,"column_end":16},"name":"peekable","qualname":"::stream::stream::StreamExt::peekable","value":"fn (self) -> Peekable<Self>","parent":{"krate":0,"index":1989},"children":[],"decl_id":null,"docs":" Creates a new stream which exposes a `peek` method.","sig":null,"attributes":[{"value":"/ Creates a new stream which exposes a `peek` method.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":199504,"byte_end":199559,"line_start":1178,"line_end":1178,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":199564,"byte_end":199567,"line_start":1179,"line_end":1179,"column_start":5,"column_end":8}},{"value":"/ Calling `peek` returns a reference to the next item in the stream.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":199572,"byte_end":199642,"line_start":1180,"line_end":1180,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":2053},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":200661,"byte_end":200667,"line_start":1207,"line_end":1207,"column_start":8,"column_end":14},"name":"chunks","qualname":"::stream::stream::StreamExt::chunks","value":"fn (self, capacity: usize) -> Chunks<Self>","parent":{"krate":0,"index":1989},"children":[],"decl_id":null,"docs":" An adaptor for chunking up items of the stream inside a vector.","sig":null,"attributes":[{"value":"/ An adaptor for chunking up items of the stream inside a vector.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":199759,"byte_end":199826,"line_start":1188,"line_end":1188,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":199831,"byte_end":199834,"line_start":1189,"line_end":1189,"column_start":5,"column_end":8}},{"value":"/ This combinator will attempt to pull items from this stream and buffer","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":199839,"byte_end":199913,"line_start":1190,"line_end":1190,"column_start":5,"column_end":79}},{"value":"/ them into a local vector. At most `capacity` items will get buffered","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":199918,"byte_end":199990,"line_start":1191,"line_end":1191,"column_start":5,"column_end":77}},{"value":"/ before they're yielded from the returned stream.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":199995,"byte_end":200047,"line_start":1192,"line_end":1192,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":200052,"byte_end":200055,"line_start":1193,"line_end":1193,"column_start":5,"column_end":8}},{"value":"/ Note that the vectors returned from this iterator may not always have","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":200060,"byte_end":200133,"line_start":1194,"line_end":1194,"column_start":5,"column_end":78}},{"value":"/ `capacity` elements. If the underlying stream ended and only a partial","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":200138,"byte_end":200212,"line_start":1195,"line_end":1195,"column_start":5,"column_end":79}},{"value":"/ vector was created, it'll be returned. Additionally if an error happens","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":200217,"byte_end":200292,"line_start":1196,"line_end":1196,"column_start":5,"column_end":80}},{"value":"/ from the underlying stream then the currently buffered items will be","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":200297,"byte_end":200369,"line_start":1197,"line_end":1197,"column_start":5,"column_end":77}},{"value":"/ yielded.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":200374,"byte_end":200386,"line_start":1198,"line_end":1198,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":200391,"byte_end":200394,"line_start":1199,"line_end":1199,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":200399,"byte_end":200474,"line_start":1200,"line_end":1200,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":200479,"byte_end":200536,"line_start":1201,"line_end":1201,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":200541,"byte_end":200544,"line_start":1202,"line_end":1202,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":200549,"byte_end":200561,"line_start":1203,"line_end":1203,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":200566,"byte_end":200569,"line_start":1204,"line_end":1204,"column_start":5,"column_end":8}},{"value":"/ This method will panic if `capacity` is zero.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":200574,"byte_end":200623,"line_start":1205,"line_end":1205,"column_start":5,"column_end":54}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":200628,"byte_end":200653,"line_start":1206,"line_end":1206,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2054},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":201727,"byte_end":201739,"line_start":1233,"line_end":1233,"column_start":8,"column_end":20},"name":"ready_chunks","qualname":"::stream::stream::StreamExt::ready_chunks","value":"fn (self, capacity: usize) -> ReadyChunks<Self>","parent":{"krate":0,"index":1989},"children":[],"decl_id":null,"docs":" An adaptor for chunking up ready items of the stream inside a vector.","sig":null,"attributes":[{"value":"/ An adaptor for chunking up ready items of the stream inside a vector.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":200791,"byte_end":200864,"line_start":1214,"line_end":1214,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":200869,"byte_end":200872,"line_start":1215,"line_end":1215,"column_start":5,"column_end":8}},{"value":"/ This combinator will attempt to pull ready items from this stream and","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":200877,"byte_end":200950,"line_start":1216,"line_end":1216,"column_start":5,"column_end":78}},{"value":"/ buffer them into a local vector. At most `capacity` items will get","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":200955,"byte_end":201025,"line_start":1217,"line_end":1217,"column_start":5,"column_end":75}},{"value":"/ buffered before they're yielded from the returned stream. If underlying","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":201030,"byte_end":201105,"line_start":1218,"line_end":1218,"column_start":5,"column_end":80}},{"value":"/ stream returns `Poll::Pending`, and collected chunk is not empty, it will","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":201110,"byte_end":201187,"line_start":1219,"line_end":1219,"column_start":5,"column_end":82}},{"value":"/ be immediately returned.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":201192,"byte_end":201220,"line_start":1220,"line_end":1220,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":201225,"byte_end":201228,"line_start":1221,"line_end":1221,"column_start":5,"column_end":8}},{"value":"/ If the underlying stream ended and only a partial vector was created,","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":201233,"byte_end":201306,"line_start":1222,"line_end":1222,"column_start":5,"column_end":78}},{"value":"/ it'll be returned. Additionally if an error happens from the underlying","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":201311,"byte_end":201386,"line_start":1223,"line_end":1223,"column_start":5,"column_end":80}},{"value":"/ stream then the currently buffered items will be yielded.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":201391,"byte_end":201452,"line_start":1224,"line_end":1224,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":201457,"byte_end":201460,"line_start":1225,"line_end":1225,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":201465,"byte_end":201540,"line_start":1226,"line_end":1226,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":201545,"byte_end":201602,"line_start":1227,"line_end":1227,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":201607,"byte_end":201610,"line_start":1228,"line_end":1228,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":201615,"byte_end":201627,"line_start":1229,"line_end":1229,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":201632,"byte_end":201635,"line_start":1230,"line_end":1230,"column_start":5,"column_end":8}},{"value":"/ This method will panic if `capacity` is zero.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":201640,"byte_end":201689,"line_start":1231,"line_end":1231,"column_start":5,"column_end":54}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":201694,"byte_end":201719,"line_start":1232,"line_end":1232,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2055},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":202577,"byte_end":202584,"line_start":1251,"line_end":1251,"column_start":8,"column_end":15},"name":"forward","qualname":"::stream::stream::StreamExt::forward","value":"fn <S> (self, sink: S) -> Forward<Self, S>","parent":{"krate":0,"index":1989},"children":[],"decl_id":null,"docs":" A future that completes after the given stream has been fully processed\n into the sink and the sink has been flushed and closed.","sig":null,"attributes":[{"value":"/ A future that completes after the given stream has been fully processed","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":201881,"byte_end":201956,"line_start":1240,"line_end":1240,"column_start":5,"column_end":80}},{"value":"/ into the sink and the sink has been flushed and closed.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":201961,"byte_end":202020,"line_start":1241,"line_end":1241,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":202025,"byte_end":202028,"line_start":1242,"line_end":1242,"column_start":5,"column_end":8}},{"value":"/ This future will drive the stream to keep producing items until it is","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":202033,"byte_end":202106,"line_start":1243,"line_end":1243,"column_start":5,"column_end":78}},{"value":"/ exhausted, sending each item to the sink. It will complete once the","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":202111,"byte_end":202182,"line_start":1244,"line_end":1244,"column_start":5,"column_end":76}},{"value":"/ stream is exhausted, the sink has received and flushed all items, and","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":202187,"byte_end":202260,"line_start":1245,"line_end":1245,"column_start":5,"column_end":78}},{"value":"/ the sink is closed. Note that neither the original stream nor provided","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":202265,"byte_end":202339,"line_start":1246,"line_end":1246,"column_start":5,"column_end":79}},{"value":"/ sink will be output by this future. Pass the sink by `Pin<&mut S>`","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":202344,"byte_end":202414,"line_start":1247,"line_end":1247,"column_start":5,"column_end":75}},{"value":"/ (for example, via `forward(&mut sink)` inside an `async` fn/block) in","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":202419,"byte_end":202492,"line_start":1248,"line_end":1248,"column_start":5,"column_end":78}},{"value":"/ order to preserve access to the `Sink`.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":202497,"byte_end":202540,"line_start":1249,"line_end":1249,"column_start":5,"column_end":48}},{"value":"cfg(feature = \"sink\")","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":202545,"byte_end":202569,"line_start":1250,"line_end":1250,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2057},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":203333,"byte_end":203338,"line_start":1271,"line_end":1271,"column_start":8,"column_end":13},"name":"split","qualname":"::stream::stream::StreamExt::split","value":"fn <Item> (self) -> (SplitSink<Self, Item>, SplitStream<Self>)","parent":{"krate":0,"index":1989},"children":[],"decl_id":null,"docs":" Splits this `Stream + Sink` object into separate `Sink` and `Stream`\n objects.","sig":null,"attributes":[{"value":"/ Splits this `Stream + Sink` object into separate `Sink` and `Stream`","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":202764,"byte_end":202836,"line_start":1259,"line_end":1259,"column_start":5,"column_end":77}},{"value":"/ objects.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":202841,"byte_end":202853,"line_start":1260,"line_end":1260,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":202858,"byte_end":202861,"line_start":1261,"line_end":1261,"column_start":5,"column_end":8}},{"value":"/ This can be useful when you want to split ownership between tasks, or","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":202866,"byte_end":202939,"line_start":1262,"line_end":1262,"column_start":5,"column_end":78}},{"value":"/ allow direct interaction between the two objects (e.g. via","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":202944,"byte_end":203006,"line_start":1263,"line_end":1263,"column_start":5,"column_end":67}},{"value":"/ `Sink::send_all`).","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":203011,"byte_end":203033,"line_start":1264,"line_end":1264,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":203038,"byte_end":203041,"line_start":1265,"line_end":1265,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":203046,"byte_end":203121,"line_start":1266,"line_end":1266,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":203126,"byte_end":203183,"line_start":1267,"line_end":1267,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"sink\")","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":203188,"byte_end":203212,"line_start":1268,"line_end":1268,"column_start":5,"column_end":29}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":203300,"byte_end":203325,"line_start":1270,"line_end":1270,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2059},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":203788,"byte_end":203795,"line_start":1283,"line_end":1283,"column_start":8,"column_end":15},"name":"inspect","qualname":"::stream::stream::StreamExt::inspect","value":"fn <F> (self, f: F) -> Inspect<Self, F>","parent":{"krate":0,"index":1989},"children":[],"decl_id":null,"docs":" Do something with each item of this stream, afterwards passing it on.","sig":null,"attributes":[{"value":"/ Do something with each item of this stream, afterwards passing it on.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":203485,"byte_end":203558,"line_start":1278,"line_end":1278,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":203563,"byte_end":203566,"line_start":1279,"line_end":1279,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `Iterator::inspect` method in the standard","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":203571,"byte_end":203640,"line_start":1280,"line_end":1280,"column_start":5,"column_end":74}},{"value":"/ library where it allows easily inspecting each value as it passes","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":203645,"byte_end":203714,"line_start":1281,"line_end":1281,"column_start":5,"column_end":74}},{"value":"/ through the stream, for example to debug what's going on.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":203719,"byte_end":203780,"line_start":1282,"line_end":1282,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":2061},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":204219,"byte_end":204230,"line_start":1296,"line_end":1296,"column_start":8,"column_end":19},"name":"left_stream","qualname":"::stream::stream::StreamExt::left_stream","value":"fn <B> (self) -> Either<Self, B>","parent":{"krate":0,"index":1989},"children":[],"decl_id":null,"docs":" Wrap this stream in an `Either` stream, making it the left-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this stream in an `Either` stream, making it the left-hand variant","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":203940,"byte_end":204015,"line_start":1291,"line_end":1291,"column_start":5,"column_end":80}},{"value":"/ of that `Either`.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":204020,"byte_end":204041,"line_start":1292,"line_end":1292,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":204046,"byte_end":204049,"line_start":1293,"line_end":1293,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `right_stream` method to write `if`","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":204054,"byte_end":204134,"line_start":1294,"line_end":1294,"column_start":5,"column_end":85}},{"value":"/ statements that evaluate to different streams in different branches.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":204139,"byte_end":204211,"line_start":1295,"line_end":1295,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":2063},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":204651,"byte_end":204663,"line_start":1309,"line_end":1309,"column_start":8,"column_end":20},"name":"right_stream","qualname":"::stream::stream::StreamExt::right_stream","value":"fn <B> (self) -> Either<B, Self>","parent":{"krate":0,"index":1989},"children":[],"decl_id":null,"docs":" Wrap this stream in an `Either` stream, making it the right-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this stream in an `Either` stream, making it the right-hand variant","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":204372,"byte_end":204448,"line_start":1304,"line_end":1304,"column_start":5,"column_end":81}},{"value":"/ of that `Either`.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":204453,"byte_end":204474,"line_start":1305,"line_end":1305,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":204479,"byte_end":204482,"line_start":1306,"line_end":1306,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `left_stream` method to write `if`","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":204487,"byte_end":204566,"line_start":1307,"line_end":1307,"column_start":5,"column_end":84}},{"value":"/ statements that evaluate to different streams in different branches.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":204571,"byte_end":204643,"line_start":1308,"line_end":1308,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":2065},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":204907,"byte_end":204922,"line_start":1319,"line_end":1319,"column_start":8,"column_end":23},"name":"poll_next_unpin","qualname":"::stream::stream::StreamExt::poll_next_unpin","value":"fn (&mut self, cx: &mut Context<'_>) -> Poll<Option<Self::Item>>","parent":{"krate":0,"index":1989},"children":[],"decl_id":null,"docs":" A convenience method for calling [`Stream::poll_next`] on [`Unpin`]\n stream types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`Stream::poll_next`] on [`Unpin`]","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":204806,"byte_end":204877,"line_start":1317,"line_end":1317,"column_start":5,"column_end":76}},{"value":"/ stream types.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":204882,"byte_end":204899,"line_start":1318,"line_end":1318,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2066},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":207023,"byte_end":207039,"line_start":1374,"line_end":1374,"column_start":8,"column_end":24},"name":"select_next_some","qualname":"::stream::stream::StreamExt::select_next_some","value":"fn (&mut self) -> SelectNextSome<'_, Self>","parent":{"krate":0,"index":1989},"children":[],"decl_id":null,"docs":" Returns a [`Future`] that resolves when the next item in this stream is\n ready.","sig":null,"attributes":[{"value":"/ Returns a [`Future`] that resolves when the next item in this stream is","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":205069,"byte_end":205144,"line_start":1326,"line_end":1326,"column_start":5,"column_end":80}},{"value":"/ ready.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":205149,"byte_end":205159,"line_start":1327,"line_end":1327,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":205164,"byte_end":205167,"line_start":1328,"line_end":1328,"column_start":5,"column_end":8}},{"value":"/ This is similar to the [`next`][StreamExt::next] method, but it won't","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":205172,"byte_end":205245,"line_start":1329,"line_end":1329,"column_start":5,"column_end":78}},{"value":"/ resolve to [`None`] if used on an empty [`Stream`]. Instead, the","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":205250,"byte_end":205318,"line_start":1330,"line_end":1330,"column_start":5,"column_end":73}},{"value":"/ returned future type will return `true` from","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":205323,"byte_end":205371,"line_start":1331,"line_end":1331,"column_start":5,"column_end":53}},{"value":"/ [`FusedFuture::is_terminated`][] when the [`Stream`] is empty, allowing","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":205376,"byte_end":205451,"line_start":1332,"line_end":1332,"column_start":5,"column_end":80}},{"value":"/ [`select_next_some`][StreamExt::select_next_some] to be easily used with","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":205456,"byte_end":205532,"line_start":1333,"line_end":1333,"column_start":5,"column_end":81}},{"value":"/ the [`select!`] macro.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":205537,"byte_end":205563,"line_start":1334,"line_end":1334,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":205568,"byte_end":205571,"line_start":1335,"line_end":1335,"column_start":5,"column_end":8}},{"value":"/ If the future is polled after this [`Stream`] is empty it will panic.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":205576,"byte_end":205649,"line_start":1336,"line_end":1336,"column_start":5,"column_end":78}},{"value":"/ Using the future with a [`FusedFuture`][]-aware primitive like the","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":205654,"byte_end":205724,"line_start":1337,"line_end":1337,"column_start":5,"column_end":75}},{"value":"/ [`select!`] macro will prevent this.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":205729,"byte_end":205769,"line_start":1338,"line_end":1338,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":205774,"byte_end":205777,"line_start":1339,"line_end":1339,"column_start":5,"column_end":8}},{"value":"/ [`FusedFuture`]: futures_core::future::FusedFuture","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":205782,"byte_end":205836,"line_start":1340,"line_end":1340,"column_start":5,"column_end":59}},{"value":"/ [`FusedFuture::is_terminated`]: futures_core::future::FusedFuture::is_terminated","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":205841,"byte_end":205925,"line_start":1341,"line_end":1341,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":205930,"byte_end":205933,"line_start":1342,"line_end":1342,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":205938,"byte_end":205952,"line_start":1343,"line_end":1343,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":205957,"byte_end":205960,"line_start":1344,"line_end":1344,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":205965,"byte_end":205972,"line_start":1345,"line_end":1345,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":205977,"byte_end":206018,"line_start":1346,"line_end":1346,"column_start":5,"column_end":46}},{"value":"/ use futures::{future, select};","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":206023,"byte_end":206057,"line_start":1347,"line_end":1347,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{StreamExt, FuturesUnordered};","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":206062,"byte_end":206117,"line_start":1348,"line_end":1348,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":206122,"byte_end":206125,"line_start":1349,"line_end":1349,"column_start":5,"column_end":8}},{"value":"/ let mut fut = future::ready(1);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":206130,"byte_end":206165,"line_start":1350,"line_end":1350,"column_start":5,"column_end":40}},{"value":"/ let mut async_tasks = FuturesUnordered::new();","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":206170,"byte_end":206220,"line_start":1351,"line_end":1351,"column_start":5,"column_end":55}},{"value":"/ let mut total = 0;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":206225,"byte_end":206247,"line_start":1352,"line_end":1352,"column_start":5,"column_end":27}},{"value":"/ loop {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":206252,"byte_end":206262,"line_start":1353,"line_end":1353,"column_start":5,"column_end":15}},{"value":"/     select! {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":206267,"byte_end":206284,"line_start":1354,"line_end":1354,"column_start":5,"column_end":22}},{"value":"/         num = fut => {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":206289,"byte_end":206315,"line_start":1355,"line_end":1355,"column_start":5,"column_end":31}},{"value":"/             // First, the `ready` future completes.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":206320,"byte_end":206375,"line_start":1356,"line_end":1356,"column_start":5,"column_end":60}},{"value":"/             total += num;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":206380,"byte_end":206409,"line_start":1357,"line_end":1357,"column_start":5,"column_end":34}},{"value":"/             // Then we spawn a new task onto `async_tasks`,","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":206414,"byte_end":206477,"line_start":1358,"line_end":1358,"column_start":5,"column_end":68}},{"value":"/             async_tasks.push(async { 5 });","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":206482,"byte_end":206528,"line_start":1359,"line_end":1359,"column_start":5,"column_end":51}},{"value":"/         },","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":206533,"byte_end":206547,"line_start":1360,"line_end":1360,"column_start":5,"column_end":19}},{"value":"/         // On the next iteration of the loop, the task we spawned","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":206552,"byte_end":206621,"line_start":1361,"line_end":1361,"column_start":5,"column_end":74}},{"value":"/         // completes.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":206626,"byte_end":206651,"line_start":1362,"line_end":1362,"column_start":5,"column_end":30}},{"value":"/         num = async_tasks.select_next_some() => {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":206656,"byte_end":206709,"line_start":1363,"line_end":1363,"column_start":5,"column_end":58}},{"value":"/             total += num;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":206714,"byte_end":206743,"line_start":1364,"line_end":1364,"column_start":5,"column_end":34}},{"value":"/         }","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":206748,"byte_end":206761,"line_start":1365,"line_end":1365,"column_start":5,"column_end":18}},{"value":"/         // Finally, both the `ready` future and `async_tasks` have","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":206766,"byte_end":206836,"line_start":1366,"line_end":1366,"column_start":5,"column_end":75}},{"value":"/         // finished, so we enter the `complete` branch.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":206841,"byte_end":206900,"line_start":1367,"line_end":1367,"column_start":5,"column_end":64}},{"value":"/         complete => break,","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":206905,"byte_end":206935,"line_start":1368,"line_end":1368,"column_start":5,"column_end":35}},{"value":"/     }","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":206940,"byte_end":206949,"line_start":1369,"line_end":1369,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":206954,"byte_end":206959,"line_start":1370,"line_end":1370,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(total, 6);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":206964,"byte_end":206989,"line_start":1371,"line_end":1371,"column_start":5,"column_end":30}},{"value":"/ # });","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":206994,"byte_end":207003,"line_start":1372,"line_end":1372,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":207008,"byte_end":207015,"line_start":1373,"line_end":1373,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":8790},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\and_then.rs","byte_start":309058,"byte_end":309065,"line_start":13,"line_end":13,"column_start":12,"column_end":19},"name":"AndThen","qualname":"::stream::try_stream::and_then::AndThen","value":"AndThen {  }","parent":null,"children":[{"krate":0,"index":8795},{"krate":0,"index":8796},{"krate":0,"index":8794}],"decl_id":null,"docs":" Stream for the [`and_then`](super::TryStreamExt::and_then) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\and_then.rs","byte_start":308998,"byte_end":309046,"line_start":12,"line_end":12,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\and_then.rs","byte_start":308983,"byte_end":308997,"line_start":11,"line_end":11,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":8822},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\and_then.rs","byte_start":309058,"byte_end":309065,"line_start":13,"line_end":13,"column_start":12,"column_end":19},"name":"__AndThen","qualname":"::stream::try_stream::and_then::_::__AndThen","value":"__AndThen {  }","parent":null,"children":[{"krate":0,"index":8827},{"krate":0,"index":8828},{"krate":0,"index":8829}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8867},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"ErrInto","qualname":"::stream::try_stream::ErrInto","value":"ErrInto {  }","parent":null,"children":[{"krate":0,"index":8870}],"decl_id":null,"docs":" Stream for the [`err_into`](super::TryStreamExt::err_into) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":8889},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"__ErrInto","qualname":"::stream::try_stream::_::__ErrInto","value":"__ErrInto {  }","parent":null,"children":[{"krate":0,"index":8893},{"krate":0,"index":8894}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8952},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"InspectOk","qualname":"::stream::try_stream::InspectOk","value":"InspectOk {  }","parent":null,"children":[{"krate":0,"index":8955}],"decl_id":null,"docs":" Stream for the [`inspect_ok`](super::TryStreamExt::inspect_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":8974},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"__InspectOk","qualname":"::stream::try_stream::_::__InspectOk","value":"__InspectOk {  }","parent":null,"children":[{"krate":0,"index":8978},{"krate":0,"index":8979}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9037},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"InspectErr","qualname":"::stream::try_stream::InspectErr","value":"InspectErr {  }","parent":null,"children":[{"krate":0,"index":9040}],"decl_id":null,"docs":" Stream for the [`inspect_err`](super::TryStreamExt::inspect_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":9059},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"__InspectErr","qualname":"::stream::try_stream::_::__InspectErr","value":"__InspectErr {  }","parent":null,"children":[{"krate":0,"index":9063},{"krate":0,"index":9064}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9119},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\into_stream.rs","byte_start":311855,"byte_end":311865,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"IntoStream","qualname":"::stream::try_stream::into_stream::IntoStream","value":"IntoStream {  }","parent":null,"children":[{"krate":0,"index":9121}],"decl_id":null,"docs":" Stream for the [`into_stream`](super::TryStreamExt::into_stream) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\into_stream.rs","byte_start":311795,"byte_end":311843,"line_start":11,"line_end":11,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\into_stream.rs","byte_start":311763,"byte_end":311777,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":9137},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\into_stream.rs","byte_start":311855,"byte_end":311865,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"__IntoStream","qualname":"::stream::try_stream::into_stream::_::__IntoStream","value":"__IntoStream {  }","parent":null,"children":[{"krate":0,"index":9140},{"krate":0,"index":9141}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9171},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"MapOk","qualname":"::stream::try_stream::MapOk","value":"MapOk {  }","parent":null,"children":[{"krate":0,"index":9174}],"decl_id":null,"docs":" Stream for the [`map_ok`](super::TryStreamExt::map_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":9193},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"__MapOk","qualname":"::stream::try_stream::_::__MapOk","value":"__MapOk {  }","parent":null,"children":[{"krate":0,"index":9197},{"krate":0,"index":9198}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9256},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"MapErr","qualname":"::stream::try_stream::MapErr","value":"MapErr {  }","parent":null,"children":[{"krate":0,"index":9259}],"decl_id":null,"docs":" Stream for the [`map_err`](super::TryStreamExt::map_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":9278},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"__MapErr","qualname":"::stream::try_stream::_::__MapErr","value":"__MapErr {  }","parent":null,"children":[{"krate":0,"index":9282},{"krate":0,"index":9283}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9338},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\or_else.rs","byte_start":313197,"byte_end":313203,"line_start":13,"line_end":13,"column_start":12,"column_end":18},"name":"OrElse","qualname":"::stream::try_stream::or_else::OrElse","value":"OrElse {  }","parent":null,"children":[{"krate":0,"index":9343},{"krate":0,"index":9344},{"krate":0,"index":9342}],"decl_id":null,"docs":" Stream for the [`or_else`](super::TryStreamExt::or_else) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\or_else.rs","byte_start":313137,"byte_end":313185,"line_start":12,"line_end":12,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\or_else.rs","byte_start":313122,"byte_end":313136,"line_start":11,"line_end":11,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":9370},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\or_else.rs","byte_start":313197,"byte_end":313203,"line_start":13,"line_end":13,"column_start":12,"column_end":18},"name":"__OrElse","qualname":"::stream::try_stream::or_else::_::__OrElse","value":"__OrElse {  }","parent":null,"children":[{"krate":0,"index":9375},{"krate":0,"index":9376},{"krate":0,"index":9377}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9412},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_next.rs","byte_start":316108,"byte_end":316115,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"TryNext","qualname":"::stream::try_stream::try_next::TryNext","value":"TryNext {  }","parent":null,"children":[{"krate":0,"index":9415}],"decl_id":null,"docs":" Future for the [`try_next`](super::TryStreamExt::try_next) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_next`](super::TryStreamExt::try_next) method.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_next.rs","byte_start":315941,"byte_end":316011,"line_start":7,"line_end":7,"column_start":1,"column_end":71}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_next.rs","byte_start":316029,"byte_end":316096,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":9420},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_for_each.rs","byte_start":317195,"byte_end":317205,"line_start":11,"line_end":11,"column_start":12,"column_end":22},"name":"TryForEach","qualname":"::stream::try_stream::try_for_each::TryForEach","value":"TryForEach {  }","parent":null,"children":[{"krate":0,"index":9425},{"krate":0,"index":9424},{"krate":0,"index":9426}],"decl_id":null,"docs":" Future for the [`try_for_each`](super::TryStreamExt::try_for_each) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_for_each.rs","byte_start":317116,"byte_end":317183,"line_start":10,"line_end":10,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_for_each.rs","byte_start":317101,"byte_end":317115,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":9452},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_for_each.rs","byte_start":317195,"byte_end":317205,"line_start":11,"line_end":11,"column_start":12,"column_end":22},"name":"__TryForEach","qualname":"::stream::try_stream::try_for_each::_::__TryForEach","value":"__TryForEach {  }","parent":null,"children":[{"krate":0,"index":9457},{"krate":0,"index":9458},{"krate":0,"index":9459}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9486},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_filter.rs","byte_start":319150,"byte_end":319159,"line_start":14,"line_end":14,"column_start":12,"column_end":21},"name":"TryFilter","qualname":"::stream::try_stream::try_filter::TryFilter","value":"TryFilter {  }","parent":null,"children":[{"krate":0,"index":9492},{"krate":0,"index":9490},{"krate":0,"index":9493},{"krate":0,"index":9491}],"decl_id":null,"docs":" Stream for the [`try_filter`](super::TryStreamExt::try_filter)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_filter.rs","byte_start":319090,"byte_end":319138,"line_start":13,"line_end":13,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_filter.rs","byte_start":319075,"byte_end":319089,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":9521},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_filter.rs","byte_start":319150,"byte_end":319159,"line_start":14,"line_end":14,"column_start":12,"column_end":21},"name":"__TryFilter","qualname":"::stream::try_stream::try_filter::_::__TryFilter","value":"__TryFilter {  }","parent":null,"children":[{"krate":0,"index":9526},{"krate":0,"index":9527},{"krate":0,"index":9528}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9563},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_filter_map.rs","byte_start":322387,"byte_end":322399,"line_start":14,"line_end":14,"column_start":12,"column_end":24},"name":"TryFilterMap","qualname":"::stream::try_stream::try_filter_map::TryFilterMap","value":"TryFilterMap {  }","parent":null,"children":[{"krate":0,"index":9568},{"krate":0,"index":9567},{"krate":0,"index":9569}],"decl_id":null,"docs":" Stream for the [`try_filter_map`](super::TryStreamExt::try_filter_map)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_filter_map.rs","byte_start":322327,"byte_end":322375,"line_start":13,"line_end":13,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_filter_map.rs","byte_start":322312,"byte_end":322326,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":9595},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_filter_map.rs","byte_start":322387,"byte_end":322399,"line_start":14,"line_end":14,"column_start":12,"column_end":24},"name":"__TryFilterMap","qualname":"::stream::try_stream::try_filter_map::_::__TryFilterMap","value":"__TryFilterMap {  }","parent":null,"children":[{"krate":0,"index":9600},{"krate":0,"index":9601},{"krate":0,"index":9602}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9637},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_flatten.rs","byte_start":325418,"byte_end":325428,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"TryFlatten","qualname":"::stream::try_stream::try_flatten::TryFlatten","value":"TryFlatten {  }","parent":null,"children":[{"krate":0,"index":9639},{"krate":0,"index":9640}],"decl_id":null,"docs":" Stream for the [`try_flatten`](super::TryStreamExt::try_flatten) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_flatten.rs","byte_start":325358,"byte_end":325406,"line_start":11,"line_end":11,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_flatten.rs","byte_start":325326,"byte_end":325340,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":9658},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_flatten.rs","byte_start":325418,"byte_end":325428,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"__TryFlatten","qualname":"::stream::try_stream::try_flatten::_::__TryFlatten","value":"__TryFlatten {  }","parent":null,"children":[{"krate":0,"index":9661},{"krate":0,"index":9662},{"krate":0,"index":9663}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9691},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_collect.rs","byte_start":327577,"byte_end":327587,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"TryCollect","qualname":"::stream::try_stream::try_collect::TryCollect","value":"TryCollect {  }","parent":null,"children":[{"krate":0,"index":9695},{"krate":0,"index":9694}],"decl_id":null,"docs":" Future for the [`try_collect`](super::TryStreamExt::try_collect) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_collect.rs","byte_start":327498,"byte_end":327565,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_collect.rs","byte_start":327466,"byte_end":327480,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":9716},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_collect.rs","byte_start":327577,"byte_end":327587,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"__TryCollect","qualname":"::stream::try_stream::try_collect::_::__TryCollect","value":"__TryCollect {  }","parent":null,"children":[{"krate":0,"index":9720},{"krate":0,"index":9721}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9747},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_concat.rs","byte_start":329001,"byte_end":329010,"line_start":11,"line_end":11,"column_start":12,"column_end":21},"name":"TryConcat","qualname":"::stream::try_stream::try_concat::TryConcat","value":"TryConcat {  }","parent":null,"children":[{"krate":0,"index":9750},{"krate":0,"index":9749}],"decl_id":null,"docs":" Future for the [`try_concat`](super::TryStreamExt::try_concat) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_concat.rs","byte_start":328922,"byte_end":328989,"line_start":10,"line_end":10,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_concat.rs","byte_start":328890,"byte_end":328904,"line_start":8,"line_end":8,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":9768},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_concat.rs","byte_start":329001,"byte_end":329010,"line_start":11,"line_end":11,"column_start":12,"column_end":21},"name":"__TryConcat","qualname":"::stream::try_stream::try_concat::_::__TryConcat","value":"__TryConcat {  }","parent":null,"children":[{"krate":0,"index":9771},{"krate":0,"index":9772}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9792},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_fold.rs","byte_start":330458,"byte_end":330465,"line_start":11,"line_end":11,"column_start":12,"column_end":19},"name":"TryFold","qualname":"::stream::try_stream::try_fold::TryFold","value":"TryFold {  }","parent":null,"children":[{"krate":0,"index":9799},{"krate":0,"index":9797},{"krate":0,"index":9798},{"krate":0,"index":9800}],"decl_id":null,"docs":" Future for the [`try_fold`](super::TryStreamExt::try_fold) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_fold.rs","byte_start":330379,"byte_end":330446,"line_start":10,"line_end":10,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_fold.rs","byte_start":330364,"byte_end":330378,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":9831},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_fold.rs","byte_start":330458,"byte_end":330465,"line_start":11,"line_end":11,"column_start":12,"column_end":19},"name":"__TryFold","qualname":"::stream::try_stream::try_fold::_::__TryFold","value":"__TryFold {  }","parent":null,"children":[{"krate":0,"index":9837},{"krate":0,"index":9838},{"krate":0,"index":9839}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2511},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_unfold.rs","byte_start":334967,"byte_end":334977,"line_start":57,"line_end":57,"column_start":8,"column_end":18},"name":"try_unfold","qualname":"::stream::try_stream::try_unfold::try_unfold","value":"fn <T, F, Fut, Item> (init: T, f: F) -> TryUnfold<T, F, Fut>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `TryStream` from a seed and a closure returning a `TryFuture`.","sig":null,"attributes":[{"value":"/ Creates a `TryStream` from a seed and a closure returning a `TryFuture`.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_unfold.rs","byte_start":333110,"byte_end":333186,"line_start":8,"line_end":8,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_unfold.rs","byte_start":333187,"byte_end":333190,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This function is the dual for the `TryStream::try_fold()` adapter: while","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_unfold.rs","byte_start":333191,"byte_end":333267,"line_start":10,"line_end":10,"column_start":1,"column_end":77}},{"value":"/ `TryStream::try_fold()` reduces a `TryStream` to one single value,","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_unfold.rs","byte_start":333268,"byte_end":333338,"line_start":11,"line_end":11,"column_start":1,"column_end":71}},{"value":"/ `try_unfold()` creates a `TryStream` from a seed value.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_unfold.rs","byte_start":333339,"byte_end":333398,"line_start":12,"line_end":12,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_unfold.rs","byte_start":333399,"byte_end":333402,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ `try_unfold()` will call the provided closure with the provided seed, then","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_unfold.rs","byte_start":333403,"byte_end":333481,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"/ wait for the returned `TryFuture` to complete with `(a, b)`. It will then","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_unfold.rs","byte_start":333482,"byte_end":333559,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/ yield the value `a`, and use `b` as the next internal state.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_unfold.rs","byte_start":333560,"byte_end":333624,"line_start":16,"line_end":16,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_unfold.rs","byte_start":333625,"byte_end":333628,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ If the closure returns `None` instead of `Some(TryFuture)`, then the","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_unfold.rs","byte_start":333629,"byte_end":333701,"line_start":18,"line_end":18,"column_start":1,"column_end":73}},{"value":"/ `try_unfold()` will stop producing items and return `Poll::Ready(None)` in","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_unfold.rs","byte_start":333702,"byte_end":333780,"line_start":19,"line_end":19,"column_start":1,"column_end":79}},{"value":"/ future calls to `poll()`.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_unfold.rs","byte_start":333781,"byte_end":333810,"line_start":20,"line_end":20,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_unfold.rs","byte_start":333811,"byte_end":333814,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ In case of error generated by the returned `TryFuture`, the error will be","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_unfold.rs","byte_start":333815,"byte_end":333892,"line_start":22,"line_end":22,"column_start":1,"column_end":78}},{"value":"/ returned by the `TryStream`. The `TryStream` will then yield","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_unfold.rs","byte_start":333893,"byte_end":333957,"line_start":23,"line_end":23,"column_start":1,"column_end":65}},{"value":"/ `Poll::Ready(None)` in future calls to `poll()`.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_unfold.rs","byte_start":333958,"byte_end":334010,"line_start":24,"line_end":24,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_unfold.rs","byte_start":334011,"byte_end":334014,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ This function can typically be used when wanting to go from the \"world of","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_unfold.rs","byte_start":334015,"byte_end":334092,"line_start":26,"line_end":26,"column_start":1,"column_end":78}},{"value":"/ futures\" to the \"world of streams\": the provided closure can build a","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_unfold.rs","byte_start":334093,"byte_end":334165,"line_start":27,"line_end":27,"column_start":1,"column_end":73}},{"value":"/ `TryFuture` using other library functions working on futures, and","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_unfold.rs","byte_start":334166,"byte_end":334235,"line_start":28,"line_end":28,"column_start":1,"column_end":70}},{"value":"/ `try_unfold()` will turn it into a `TryStream` by repeating the operation.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_unfold.rs","byte_start":334236,"byte_end":334314,"line_start":29,"line_end":29,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_unfold.rs","byte_start":334315,"byte_end":334318,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_unfold.rs","byte_start":334319,"byte_end":334332,"line_start":31,"line_end":31,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_unfold.rs","byte_start":334333,"byte_end":334336,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_unfold.rs","byte_start":334337,"byte_end":334344,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/ # #[derive(Debug, PartialEq)]","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_unfold.rs","byte_start":334345,"byte_end":334378,"line_start":34,"line_end":34,"column_start":1,"column_end":34}},{"value":"/ # struct SomeError;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_unfold.rs","byte_start":334379,"byte_end":334402,"line_start":35,"line_end":35,"column_start":1,"column_end":24}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_unfold.rs","byte_start":334403,"byte_end":334444,"line_start":36,"line_end":36,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_unfold.rs","byte_start":334445,"byte_end":334491,"line_start":37,"line_end":37,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_unfold.rs","byte_start":334492,"byte_end":334495,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::try_unfold(0, |state| async move {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_unfold.rs","byte_start":334496,"byte_end":334555,"line_start":39,"line_end":39,"column_start":1,"column_end":60}},{"value":"/     if state < 0 {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_unfold.rs","byte_start":334556,"byte_end":334578,"line_start":40,"line_end":40,"column_start":1,"column_end":23}},{"value":"/         return Err(SomeError);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_unfold.rs","byte_start":334579,"byte_end":334613,"line_start":41,"line_end":41,"column_start":1,"column_end":35}},{"value":"/     }","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_unfold.rs","byte_start":334614,"byte_end":334623,"line_start":42,"line_end":42,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_unfold.rs","byte_start":334624,"byte_end":334627,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/     if state <= 2 {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_unfold.rs","byte_start":334628,"byte_end":334651,"line_start":44,"line_end":44,"column_start":1,"column_end":24}},{"value":"/         let next_state = state + 1;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_unfold.rs","byte_start":334652,"byte_end":334691,"line_start":45,"line_end":45,"column_start":1,"column_end":40}},{"value":"/         let yielded = state * 2;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_unfold.rs","byte_start":334692,"byte_end":334728,"line_start":46,"line_end":46,"column_start":1,"column_end":37}},{"value":"/         Ok(Some((yielded, next_state)))","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_unfold.rs","byte_start":334729,"byte_end":334772,"line_start":47,"line_end":47,"column_start":1,"column_end":44}},{"value":"/     } else {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_unfold.rs","byte_start":334773,"byte_end":334789,"line_start":48,"line_end":48,"column_start":1,"column_end":17}},{"value":"/         Ok(None)","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_unfold.rs","byte_start":334790,"byte_end":334810,"line_start":49,"line_end":49,"column_start":1,"column_end":21}},{"value":"/     }","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_unfold.rs","byte_start":334811,"byte_end":334820,"line_start":50,"line_end":50,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_unfold.rs","byte_start":334821,"byte_end":334828,"line_start":51,"line_end":51,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_unfold.rs","byte_start":334829,"byte_end":334832,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ let result: Result<Vec<i32>, _> = stream.try_collect().await;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_unfold.rs","byte_start":334833,"byte_end":334898,"line_start":53,"line_end":53,"column_start":1,"column_end":66}},{"value":"/ assert_eq!(result, Ok(vec![0, 2, 4]));","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_unfold.rs","byte_start":334899,"byte_end":334941,"line_start":54,"line_end":54,"column_start":1,"column_end":43}},{"value":"/ # });","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_unfold.rs","byte_start":334942,"byte_end":334951,"line_start":55,"line_end":55,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_unfold.rs","byte_start":334952,"byte_end":334959,"line_start":56,"line_end":56,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":9871},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_unfold.rs","byte_start":335311,"byte_end":335320,"line_start":72,"line_end":72,"column_start":12,"column_end":21},"name":"TryUnfold","qualname":"::stream::try_stream::try_unfold::TryUnfold","value":"TryUnfold {  }","parent":null,"children":[{"krate":0,"index":9875},{"krate":0,"index":9876},{"krate":0,"index":9877}],"decl_id":null,"docs":" Stream for the [`try_unfold`] function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_unfold.rs","byte_start":335251,"byte_end":335299,"line_start":71,"line_end":71,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_unfold.rs","byte_start":335236,"byte_end":335250,"line_start":70,"line_end":70,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":9903},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_unfold.rs","byte_start":335311,"byte_end":335320,"line_start":72,"line_end":72,"column_start":12,"column_end":21},"name":"__TryUnfold","qualname":"::stream::try_stream::try_unfold::_::__TryUnfold","value":"__TryUnfold {  }","parent":null,"children":[{"krate":0,"index":9908},{"krate":0,"index":9909}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9936},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_skip_while.rs","byte_start":337271,"byte_end":337283,"line_start":14,"line_end":14,"column_start":12,"column_end":24},"name":"TrySkipWhile","qualname":"::stream::try_stream::try_skip_while::TrySkipWhile","value":"TrySkipWhile {  }","parent":null,"children":[{"krate":0,"index":9943},{"krate":0,"index":9940},{"krate":0,"index":9944},{"krate":0,"index":9941},{"krate":0,"index":9942}],"decl_id":null,"docs":" Stream for the [`try_skip_while`](super::TryStreamExt::try_skip_while)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_skip_while.rs","byte_start":337211,"byte_end":337259,"line_start":13,"line_end":13,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_skip_while.rs","byte_start":337196,"byte_end":337210,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":9974},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_skip_while.rs","byte_start":337271,"byte_end":337283,"line_start":14,"line_end":14,"column_start":12,"column_end":24},"name":"__TrySkipWhile","qualname":"::stream::try_stream::try_skip_while::_::__TrySkipWhile","value":"__TrySkipWhile {  }","parent":null,"children":[{"krate":0,"index":9979},{"krate":0,"index":9980},{"krate":0,"index":9981}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11683},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_buffer_unordered.rs","byte_start":8395381,"byte_end":8395399,"line_start":16,"line_end":16,"column_start":12,"column_end":30},"name":"TryBufferUnordered","qualname":"::stream::try_stream::try_buffer_unordered::TryBufferUnordered","value":"TryBufferUnordered {  }","parent":null,"children":[{"krate":0,"index":11687},{"krate":0,"index":11685},{"krate":0,"index":11686}],"decl_id":null,"docs":" Stream for the\n [`try_buffer_unordered`](super::TryStreamExt::try_buffer_unordered) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_buffer_unordered.rs","byte_start":8395321,"byte_end":8395369,"line_start":15,"line_end":15,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_buffer_unordered.rs","byte_start":8395289,"byte_end":8395303,"line_start":13,"line_end":13,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":11707},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_buffer_unordered.rs","byte_start":8395381,"byte_end":8395399,"line_start":16,"line_end":16,"column_start":12,"column_end":30},"name":"__TryBufferUnordered","qualname":"::stream::try_stream::try_buffer_unordered::_::__TryBufferUnordered","value":"__TryBufferUnordered {  }","parent":null,"children":[{"krate":0,"index":11710},{"krate":0,"index":11711}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11615},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_for_each_concurrent.rs","byte_start":8397988,"byte_end":8398008,"line_start":16,"line_end":16,"column_start":12,"column_end":32},"name":"TryForEachConcurrent","qualname":"::stream::try_stream::try_for_each_concurrent::TryForEachConcurrent","value":"TryForEachConcurrent {  }","parent":null,"children":[{"krate":0,"index":11622},{"krate":0,"index":11619},{"krate":0,"index":11620},{"krate":0,"index":11621}],"decl_id":null,"docs":" Future for the\n [`try_for_each_concurrent`](super::TryStreamExt::try_for_each_concurrent)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_for_each_concurrent.rs","byte_start":8397909,"byte_end":8397976,"line_start":15,"line_end":15,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_for_each_concurrent.rs","byte_start":8397894,"byte_end":8397908,"line_start":14,"line_end":14,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":11650},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_for_each_concurrent.rs","byte_start":8397988,"byte_end":8398008,"line_start":16,"line_end":16,"column_start":12,"column_end":32},"name":"__TryForEachConcurrent","qualname":"::stream::try_stream::try_for_each_concurrent::_::__TryForEachConcurrent","value":"__TryForEachConcurrent {  }","parent":null,"children":[{"krate":0,"index":11655},{"krate":0,"index":11656}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2576},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":282615,"byte_end":282627,"line_start":131,"line_end":131,"column_start":11,"column_end":23},"name":"TryStreamExt","qualname":"::stream::try_stream::TryStreamExt","value":"TryStreamExt: TryStream","parent":null,"children":[{"krate":0,"index":2577},{"krate":0,"index":2579},{"krate":0,"index":2582},{"krate":0,"index":2585},{"krate":0,"index":2588},{"krate":0,"index":2591},{"krate":0,"index":2593},{"krate":0,"index":2595},{"krate":0,"index":2596},{"krate":0,"index":2597},{"krate":0,"index":2600},{"krate":0,"index":2603},{"krate":0,"index":2607},{"krate":0,"index":2609},{"krate":0,"index":2612},{"krate":0,"index":2616},{"krate":0,"index":2617},{"krate":0,"index":2621},{"krate":0,"index":2622},{"krate":0,"index":2623}],"decl_id":null,"docs":" Adapters specific to `Result`-returning streams\n","sig":null,"attributes":[{"value":"/ Adapters specific to `Result`-returning streams","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":282553,"byte_end":282604,"line_start":130,"line_end":130,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2577},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":283169,"byte_end":283177,"line_start":149,"line_end":149,"column_start":8,"column_end":16},"name":"err_into","qualname":"::stream::try_stream::TryStreamExt::err_into","value":"fn <E> (self) -> ErrInto<Self, E>","parent":{"krate":0,"index":2576},"children":[],"decl_id":null,"docs":" Wraps the current stream in a new stream which converts the error type\n into the one provided.","sig":null,"attributes":[{"value":"/ Wraps the current stream in a new stream which converts the error type","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":282645,"byte_end":282719,"line_start":132,"line_end":132,"column_start":5,"column_end":79}},{"value":"/ into the one provided.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":282724,"byte_end":282750,"line_start":133,"line_end":133,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":282755,"byte_end":282758,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":282763,"byte_end":282777,"line_start":135,"line_end":135,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":282782,"byte_end":282785,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":282790,"byte_end":282797,"line_start":137,"line_end":137,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":282802,"byte_end":282843,"line_start":138,"line_end":138,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":282848,"byte_end":282894,"line_start":139,"line_end":139,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":282899,"byte_end":282902,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ let mut stream =","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":282907,"byte_end":282927,"line_start":141,"line_end":141,"column_start":5,"column_end":25}},{"value":"/     stream::iter(vec![Ok(()), Err(5i32)])","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":282932,"byte_end":282977,"line_start":142,"line_end":142,"column_start":5,"column_end":50}},{"value":"/         .err_into::<i64>();","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":282982,"byte_end":283013,"line_start":143,"line_end":143,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":283018,"byte_end":283021,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(())));","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":283026,"byte_end":283080,"line_start":145,"line_end":145,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(stream.try_next().await, Err(5i64));","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":283085,"byte_end":283136,"line_start":146,"line_end":146,"column_start":5,"column_end":56}},{"value":"/ # })","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":283141,"byte_end":283149,"line_start":147,"line_end":147,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":283154,"byte_end":283161,"line_start":148,"line_end":148,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2579},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":283832,"byte_end":283838,"line_start":174,"line_end":174,"column_start":8,"column_end":14},"name":"map_ok","qualname":"::stream::try_stream::TryStreamExt::map_ok","value":"fn <T, F> (self, f: F) -> MapOk<Self, F>","parent":{"krate":0,"index":2576},"children":[],"decl_id":null,"docs":" Wraps the current stream in a new stream which maps the success value\n using the provided closure.","sig":null,"attributes":[{"value":"/ Wraps the current stream in a new stream which maps the success value","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":283312,"byte_end":283385,"line_start":157,"line_end":157,"column_start":5,"column_end":78}},{"value":"/ using the provided closure.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":283390,"byte_end":283421,"line_start":158,"line_end":158,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":283426,"byte_end":283429,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":283434,"byte_end":283448,"line_start":160,"line_end":160,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":283453,"byte_end":283456,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":283461,"byte_end":283468,"line_start":162,"line_end":162,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":283473,"byte_end":283514,"line_start":163,"line_end":163,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":283519,"byte_end":283565,"line_start":164,"line_end":164,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":283570,"byte_end":283573,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ let mut stream =","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":283578,"byte_end":283598,"line_start":166,"line_end":166,"column_start":5,"column_end":25}},{"value":"/     stream::iter(vec![Ok(5), Err(0)])","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":283603,"byte_end":283644,"line_start":167,"line_end":167,"column_start":5,"column_end":46}},{"value":"/         .map_ok(|x| x + 2);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":283649,"byte_end":283680,"line_start":168,"line_end":168,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":283685,"byte_end":283688,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(7)));","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":283693,"byte_end":283746,"line_start":170,"line_end":170,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.try_next().await, Err(0));","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":283751,"byte_end":283799,"line_start":171,"line_end":171,"column_start":5,"column_end":53}},{"value":"/ # })","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":283804,"byte_end":283812,"line_start":172,"line_end":172,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":283817,"byte_end":283824,"line_start":173,"line_end":173,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2582},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":284503,"byte_end":284510,"line_start":199,"line_end":199,"column_start":8,"column_end":15},"name":"map_err","qualname":"::stream::try_stream::TryStreamExt::map_err","value":"fn <E, F> (self, f: F) -> MapErr<Self, F>","parent":{"krate":0,"index":2576},"children":[],"decl_id":null,"docs":" Wraps the current stream in a new stream which maps the error value\n using the provided closure.","sig":null,"attributes":[{"value":"/ Wraps the current stream in a new stream which maps the error value","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":283984,"byte_end":284055,"line_start":182,"line_end":182,"column_start":5,"column_end":76}},{"value":"/ using the provided closure.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":284060,"byte_end":284091,"line_start":183,"line_end":183,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":284096,"byte_end":284099,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":284104,"byte_end":284118,"line_start":185,"line_end":185,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":284123,"byte_end":284126,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":284131,"byte_end":284138,"line_start":187,"line_end":187,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":284143,"byte_end":284184,"line_start":188,"line_end":188,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":284189,"byte_end":284235,"line_start":189,"line_end":189,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":284240,"byte_end":284243,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ let mut stream =","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":284248,"byte_end":284268,"line_start":191,"line_end":191,"column_start":5,"column_end":25}},{"value":"/     stream::iter(vec![Ok(5), Err(0)])","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":284273,"byte_end":284314,"line_start":192,"line_end":192,"column_start":5,"column_end":46}},{"value":"/         .map_err(|x| x + 2);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":284319,"byte_end":284351,"line_start":193,"line_end":193,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":284356,"byte_end":284359,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(5)));","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":284364,"byte_end":284417,"line_start":195,"line_end":195,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.try_next().await, Err(2));","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":284422,"byte_end":284470,"line_start":196,"line_end":196,"column_start":5,"column_end":53}},{"value":"/ # })","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":284475,"byte_end":284483,"line_start":197,"line_end":197,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":284488,"byte_end":284495,"line_start":198,"line_end":198,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2585},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":286074,"byte_end":286082,"line_start":245,"line_end":245,"column_start":8,"column_end":16},"name":"and_then","qualname":"::stream::try_stream::TryStreamExt::and_then","value":"fn <Fut, F> (self, f: F) -> AndThen<Self, Fut, F>","parent":{"krate":0,"index":2576},"children":[],"decl_id":null,"docs":" Chain on a computation for when a value is ready, passing the successful\n results to the provided closure `f`.","sig":null,"attributes":[{"value":"/ Chain on a computation for when a value is ready, passing the successful","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":284661,"byte_end":284737,"line_start":207,"line_end":207,"column_start":5,"column_end":81}},{"value":"/ results to the provided closure `f`.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":284742,"byte_end":284782,"line_start":208,"line_end":208,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":284787,"byte_end":284790,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ This function can be used to run a unit of work when the next successful","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":284795,"byte_end":284871,"line_start":210,"line_end":210,"column_start":5,"column_end":81}},{"value":"/ value on a stream is ready. The closure provided will be yielded a value","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":284876,"byte_end":284952,"line_start":211,"line_end":211,"column_start":5,"column_end":81}},{"value":"/ when ready, and the returned future will then be run to completion to","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":284957,"byte_end":285030,"line_start":212,"line_end":212,"column_start":5,"column_end":78}},{"value":"/ produce the next value on this stream.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":285035,"byte_end":285077,"line_start":213,"line_end":213,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":285082,"byte_end":285085,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ Any errors produced by this stream will not be passed to the closure,","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":285090,"byte_end":285163,"line_start":215,"line_end":215,"column_start":5,"column_end":78}},{"value":"/ and will be passed through.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":285168,"byte_end":285199,"line_start":216,"line_end":216,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":285204,"byte_end":285207,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ The returned value of the closure must implement the `TryFuture` trait","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":285212,"byte_end":285286,"line_start":218,"line_end":218,"column_start":5,"column_end":79}},{"value":"/ and can represent some more work to be done before the composed stream","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":285291,"byte_end":285365,"line_start":219,"line_end":219,"column_start":5,"column_end":79}},{"value":"/ is finished.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":285370,"byte_end":285386,"line_start":220,"line_end":220,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":285391,"byte_end":285394,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving stream and returns a","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":285399,"byte_end":285470,"line_start":222,"line_end":222,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":285475,"byte_end":285501,"line_start":223,"line_end":223,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":285506,"byte_end":285509,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ To process the entire stream and return a single future representing","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":285514,"byte_end":285586,"line_start":225,"line_end":225,"column_start":5,"column_end":77}},{"value":"/ success or error, use `try_for_each` instead.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":285591,"byte_end":285640,"line_start":226,"line_end":226,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":285645,"byte_end":285648,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":285653,"byte_end":285667,"line_start":228,"line_end":228,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":285672,"byte_end":285675,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":285680,"byte_end":285687,"line_start":230,"line_end":230,"column_start":5,"column_end":12}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":285692,"byte_end":285723,"line_start":231,"line_end":231,"column_start":5,"column_end":36}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":285728,"byte_end":285752,"line_start":232,"line_end":232,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::TryStreamExt;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":285757,"byte_end":285795,"line_start":233,"line_end":233,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":285800,"byte_end":285803,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ let (_tx, rx) = mpsc::channel::<Result<i32, ()>>(1);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":285808,"byte_end":285864,"line_start":235,"line_end":235,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":285869,"byte_end":285872,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ let rx = rx.and_then(|result| {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":285877,"byte_end":285912,"line_start":237,"line_end":237,"column_start":5,"column_end":40}},{"value":"/     future::ok(if result % 2 == 0 {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":285917,"byte_end":285956,"line_start":238,"line_end":238,"column_start":5,"column_end":44}},{"value":"/         Some(result)","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":285961,"byte_end":285985,"line_start":239,"line_end":239,"column_start":5,"column_end":29}},{"value":"/     } else {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":285990,"byte_end":286006,"line_start":240,"line_end":240,"column_start":5,"column_end":21}},{"value":"/         None","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":286011,"byte_end":286027,"line_start":241,"line_end":241,"column_start":5,"column_end":21}},{"value":"/     })","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":286032,"byte_end":286042,"line_start":242,"line_end":242,"column_start":5,"column_end":15}},{"value":"/ });","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":286047,"byte_end":286054,"line_start":243,"line_end":243,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":286059,"byte_end":286066,"line_start":244,"line_end":244,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2588},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":287185,"byte_end":287192,"line_start":271,"line_end":271,"column_start":8,"column_end":15},"name":"or_else","qualname":"::stream::try_stream::TryStreamExt::or_else","value":"fn <Fut, F> (self, f: F) -> OrElse<Self, Fut, F>","parent":{"krate":0,"index":2576},"children":[],"decl_id":null,"docs":" Chain on a computation for when an error happens, passing the\n erroneous result to the provided closure `f`.","sig":null,"attributes":[{"value":"/ Chain on a computation for when an error happens, passing the","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":286286,"byte_end":286351,"line_start":254,"line_end":254,"column_start":5,"column_end":70}},{"value":"/ erroneous result to the provided closure `f`.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":286356,"byte_end":286405,"line_start":255,"line_end":255,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":286410,"byte_end":286413,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ This function can be used to run a unit of work and attempt to recover from","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":286418,"byte_end":286497,"line_start":257,"line_end":257,"column_start":5,"column_end":84}},{"value":"/ an error if one happens. The closure provided will be yielded an error","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":286502,"byte_end":286576,"line_start":258,"line_end":258,"column_start":5,"column_end":79}},{"value":"/ when one appears, and the returned future will then be run to completion","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":286581,"byte_end":286657,"line_start":259,"line_end":259,"column_start":5,"column_end":81}},{"value":"/ to produce the next value on this stream.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":286662,"byte_end":286707,"line_start":260,"line_end":260,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":286712,"byte_end":286715,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ Any successful values produced by this stream will not be passed to the","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":286720,"byte_end":286795,"line_start":262,"line_end":262,"column_start":5,"column_end":80}},{"value":"/ closure, and will be passed through.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":286800,"byte_end":286840,"line_start":263,"line_end":263,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":286845,"byte_end":286848,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ The returned value of the closure must implement the [`TryFuture`](futures_core::future::TryFuture) trait","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":286853,"byte_end":286962,"line_start":265,"line_end":265,"column_start":5,"column_end":114}},{"value":"/ and can represent some more work to be done before the composed stream","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":286967,"byte_end":287041,"line_start":266,"line_end":266,"column_start":5,"column_end":79}},{"value":"/ is finished.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":287046,"byte_end":287062,"line_start":267,"line_end":267,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":287067,"byte_end":287070,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving stream and returns a","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":287075,"byte_end":287146,"line_start":269,"line_end":269,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":287151,"byte_end":287177,"line_start":270,"line_end":270,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":2591},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":287694,"byte_end":287704,"line_start":286,"line_end":286,"column_start":8,"column_end":18},"name":"inspect_ok","qualname":"::stream::try_stream::TryStreamExt::inspect_ok","value":"fn <F> (self, f: F) -> InspectOk<Self, F>","parent":{"krate":0,"index":2576},"children":[],"decl_id":null,"docs":" Do something with the success value of this stream, afterwards passing\n it on.","sig":null,"attributes":[{"value":"/ Do something with the success value of this stream, afterwards passing","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":287391,"byte_end":287465,"line_start":280,"line_end":280,"column_start":5,"column_end":79}},{"value":"/ it on.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":287470,"byte_end":287480,"line_start":281,"line_end":281,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":287485,"byte_end":287488,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `StreamExt::inspect` method where it allows","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":287493,"byte_end":287563,"line_start":283,"line_end":283,"column_start":5,"column_end":75}},{"value":"/ easily inspecting the success value as it passes through the stream, for","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":287568,"byte_end":287644,"line_start":284,"line_end":284,"column_start":5,"column_end":81}},{"value":"/ example to debug what's going on.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":287649,"byte_end":287686,"line_start":285,"line_end":285,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2593},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":288142,"byte_end":288153,"line_start":299,"line_end":299,"column_start":8,"column_end":19},"name":"inspect_err","qualname":"::stream::try_stream::TryStreamExt::inspect_err","value":"fn <F> (self, f: F) -> InspectErr<Self, F>","parent":{"krate":0,"index":2576},"children":[],"decl_id":null,"docs":" Do something with the error value of this stream, afterwards passing it on.","sig":null,"attributes":[{"value":"/ Do something with the error value of this stream, afterwards passing it on.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":287851,"byte_end":287930,"line_start":294,"line_end":294,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":287935,"byte_end":287938,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `StreamExt::inspect` method where it allows","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":287943,"byte_end":288013,"line_start":296,"line_end":296,"column_start":5,"column_end":75}},{"value":"/ easily inspecting the error value as it passes through the stream, for","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":288018,"byte_end":288092,"line_start":297,"line_end":297,"column_start":5,"column_end":79}},{"value":"/ example to debug what's going on.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":288097,"byte_end":288134,"line_start":298,"line_end":298,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2595},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":289023,"byte_end":289034,"line_start":328,"line_end":328,"column_start":8,"column_end":19},"name":"into_stream","qualname":"::stream::try_stream::TryStreamExt::into_stream","value":"fn (self) -> IntoStream<Self>","parent":{"krate":0,"index":2576},"children":[],"decl_id":null,"docs":" Wraps a [`TryStream`] into a type that implements\n [`Stream`](futures_core::stream::Stream)","sig":null,"attributes":[{"value":"/ Wraps a [`TryStream`] into a type that implements","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":288305,"byte_end":288358,"line_start":307,"line_end":307,"column_start":5,"column_end":58}},{"value":"/ [`Stream`](futures_core::stream::Stream)","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":288363,"byte_end":288407,"line_start":308,"line_end":308,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":288412,"byte_end":288415,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ [`TryStream`]s currently do not implement the","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":288420,"byte_end":288469,"line_start":310,"line_end":310,"column_start":5,"column_end":54}},{"value":"/ [`Stream`](futures_core::stream::Stream) trait because of limitations","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":288474,"byte_end":288547,"line_start":311,"line_end":311,"column_start":5,"column_end":78}},{"value":"/ of the compiler.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":288552,"byte_end":288572,"line_start":312,"line_end":312,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":288577,"byte_end":288580,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":288585,"byte_end":288599,"line_start":314,"line_end":314,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":288604,"byte_end":288607,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":288612,"byte_end":288619,"line_start":316,"line_end":316,"column_start":5,"column_end":12}},{"value":"/ use futures::stream::{Stream, TryStream, TryStreamExt};","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":288624,"byte_end":288683,"line_start":317,"line_end":317,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":288688,"byte_end":288691,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ # type T = i32;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":288696,"byte_end":288715,"line_start":319,"line_end":319,"column_start":5,"column_end":24}},{"value":"/ # type E = ();","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":288720,"byte_end":288738,"line_start":320,"line_end":320,"column_start":5,"column_end":23}},{"value":"/ fn make_try_stream() -> impl TryStream<Ok = T, Error = E> { // ... }","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":288743,"byte_end":288815,"line_start":321,"line_end":321,"column_start":5,"column_end":77}},{"value":"/ # futures::stream::empty()","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":288820,"byte_end":288850,"line_start":322,"line_end":322,"column_start":5,"column_end":35}},{"value":"/ # }","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":288855,"byte_end":288862,"line_start":323,"line_end":323,"column_start":5,"column_end":12}},{"value":"/ fn take_stream(stream: impl Stream<Item = Result<T, E>>) { /* ... */ }","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":288867,"byte_end":288941,"line_start":324,"line_end":324,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":288946,"byte_end":288949,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ take_stream(make_try_stream().into_stream());","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":288954,"byte_end":289003,"line_start":326,"line_end":326,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":289008,"byte_end":289015,"line_start":327,"line_end":327,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2596},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":289878,"byte_end":289886,"line_start":355,"line_end":355,"column_start":8,"column_end":16},"name":"try_next","qualname":"::stream::try_stream::TryStreamExt::try_next","value":"fn (&mut self) -> TryNext<'_, Self>","parent":{"krate":0,"index":2576},"children":[],"decl_id":null,"docs":" Creates a future that attempts to resolve the next item in the stream.\n If an error is encountered before the next item, the error is returned\n instead.","sig":null,"attributes":[{"value":"/ Creates a future that attempts to resolve the next item in the stream.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":289139,"byte_end":289213,"line_start":335,"line_end":335,"column_start":5,"column_end":79}},{"value":"/ If an error is encountered before the next item, the error is returned","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":289218,"byte_end":289292,"line_start":336,"line_end":336,"column_start":5,"column_end":79}},{"value":"/ instead.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":289297,"byte_end":289309,"line_start":337,"line_end":337,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":289314,"byte_end":289317,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `Stream::next` combinator, but returns a","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":289322,"byte_end":289389,"line_start":339,"line_end":339,"column_start":5,"column_end":72}},{"value":"/ `Result<Option<T>, E>` rather than an `Option<Result<T, E>>`, making","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":289394,"byte_end":289466,"line_start":340,"line_end":340,"column_start":5,"column_end":77}},{"value":"/ for easy use with the `?` operator.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":289471,"byte_end":289510,"line_start":341,"line_end":341,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":289515,"byte_end":289518,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":289523,"byte_end":289537,"line_start":343,"line_end":343,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":289542,"byte_end":289545,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":289550,"byte_end":289557,"line_start":345,"line_end":345,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":289562,"byte_end":289603,"line_start":346,"line_end":346,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":289608,"byte_end":289654,"line_start":347,"line_end":347,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":289659,"byte_end":289662,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(vec![Ok(()), Err(())]);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":289667,"byte_end":289724,"line_start":349,"line_end":349,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":289729,"byte_end":289732,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(())));","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":289737,"byte_end":289791,"line_start":351,"line_end":351,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(stream.try_next().await, Err(()));","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":289796,"byte_end":289845,"line_start":352,"line_end":352,"column_start":5,"column_end":54}},{"value":"/ # })","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":289850,"byte_end":289858,"line_start":353,"line_end":353,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":289863,"byte_end":289870,"line_start":354,"line_end":354,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2597},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":291179,"byte_end":291191,"line_start":395,"line_end":395,"column_start":8,"column_end":20},"name":"try_for_each","qualname":"::stream::try_stream::TryStreamExt::try_for_each","value":"fn <Fut, F> (self, f: F) -> TryForEach<Self, Fut, F>","parent":{"krate":0,"index":2576},"children":[],"decl_id":null,"docs":" Attempts to run this stream to completion, executing the provided\n asynchronous closure for each element on the stream.","sig":null,"attributes":[{"value":"/ Attempts to run this stream to completion, executing the provided","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":289994,"byte_end":290063,"line_start":362,"line_end":362,"column_start":5,"column_end":74}},{"value":"/ asynchronous closure for each element on the stream.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":290068,"byte_end":290124,"line_start":363,"line_end":363,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":290129,"byte_end":290132,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ The provided closure will be called for each item this stream produces,","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":290137,"byte_end":290212,"line_start":365,"line_end":365,"column_start":5,"column_end":80}},{"value":"/ yielding a future. That future will then be executed to completion","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":290217,"byte_end":290287,"line_start":366,"line_end":366,"column_start":5,"column_end":75}},{"value":"/ before moving on to the next item.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":290292,"byte_end":290330,"line_start":367,"line_end":367,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":290335,"byte_end":290338,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ The returned value is a [`Future`](futures_core::future::Future) where the","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":290343,"byte_end":290421,"line_start":369,"line_end":369,"column_start":5,"column_end":83}},{"value":"/ [`Output`](futures_core::future::Future::Output) type is","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":290426,"byte_end":290486,"line_start":370,"line_end":370,"column_start":5,"column_end":65}},{"value":"/ `Result<(), Self::Error>`. If any of the intermediate","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":290491,"byte_end":290548,"line_start":371,"line_end":371,"column_start":5,"column_end":62}},{"value":"/ futures or the stream returns an error, this future will return","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":290553,"byte_end":290620,"line_start":372,"line_end":372,"column_start":5,"column_end":72}},{"value":"/ immediately with an error.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":290625,"byte_end":290655,"line_start":373,"line_end":373,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":290660,"byte_end":290663,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":290668,"byte_end":290682,"line_start":375,"line_end":375,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":290687,"byte_end":290690,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":290695,"byte_end":290702,"line_start":377,"line_end":377,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":290707,"byte_end":290748,"line_start":378,"line_end":378,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":290753,"byte_end":290777,"line_start":379,"line_end":379,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":290782,"byte_end":290828,"line_start":380,"line_end":380,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":290833,"byte_end":290836,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ let mut x = 0i32;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":290841,"byte_end":290862,"line_start":382,"line_end":382,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":290867,"byte_end":290870,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":290875,"byte_end":290880,"line_start":384,"line_end":384,"column_start":5,"column_end":10}},{"value":"/     let fut = stream::repeat(Ok(1)).try_for_each(|item| {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":290885,"byte_end":290946,"line_start":385,"line_end":385,"column_start":5,"column_end":66}},{"value":"/         x += item;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":290951,"byte_end":290973,"line_start":386,"line_end":386,"column_start":5,"column_end":27}},{"value":"/         future::ready(if x == 3 { Err(()) } else { Ok(()) })","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":290978,"byte_end":291042,"line_start":387,"line_end":387,"column_start":5,"column_end":69}},{"value":"/     });","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":291047,"byte_end":291058,"line_start":388,"line_end":388,"column_start":5,"column_end":16}},{"value":"/     assert_eq!(fut.await, Err(()));","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":291063,"byte_end":291102,"line_start":389,"line_end":389,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":291107,"byte_end":291112,"line_start":390,"line_end":390,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":291117,"byte_end":291120,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x, 3);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":291125,"byte_end":291146,"line_start":392,"line_end":392,"column_start":5,"column_end":26}},{"value":"/ # })","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":291151,"byte_end":291159,"line_start":393,"line_end":393,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":291164,"byte_end":291171,"line_start":394,"line_end":394,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2600},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":292159,"byte_end":292173,"line_start":425,"line_end":425,"column_start":8,"column_end":22},"name":"try_skip_while","qualname":"::stream::try_stream::TryStreamExt::try_skip_while","value":"fn <Fut, F> (self, f: F) -> TrySkipWhile<Self, Fut, F>","parent":{"krate":0,"index":2576},"children":[],"decl_id":null,"docs":" Skip elements on this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Skip elements on this stream while the provided asynchronous predicate","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":291410,"byte_end":291484,"line_start":404,"line_end":404,"column_start":5,"column_end":79}},{"value":"/ resolves to `true`.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":291489,"byte_end":291512,"line_start":405,"line_end":405,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":291517,"byte_end":291520,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ This function is similar to","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":291525,"byte_end":291556,"line_start":407,"line_end":407,"column_start":5,"column_end":36}},{"value":"/ [`StreamExt::skip_while`](crate::stream::StreamExt::skip_while) but exits","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":291561,"byte_end":291638,"line_start":408,"line_end":408,"column_start":5,"column_end":82}},{"value":"/ early if an error occurs.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":291643,"byte_end":291672,"line_start":409,"line_end":409,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":291677,"byte_end":291680,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":291685,"byte_end":291699,"line_start":411,"line_end":411,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":291704,"byte_end":291707,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":291712,"byte_end":291719,"line_start":413,"line_end":413,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":291724,"byte_end":291765,"line_start":414,"line_end":414,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":291770,"byte_end":291794,"line_start":415,"line_end":415,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":291799,"byte_end":291845,"line_start":416,"line_end":416,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":291850,"byte_end":291853,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok::<i32, i32>(1), Ok(3), Ok(2)]);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":291858,"byte_end":291927,"line_start":418,"line_end":418,"column_start":5,"column_end":74}},{"value":"/ let stream = stream.try_skip_while(|x| future::ready(Ok(*x < 3)));","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":291932,"byte_end":292002,"line_start":419,"line_end":419,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":292007,"byte_end":292010,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ let output: Result<Vec<i32>, i32> = stream.try_collect().await;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":292015,"byte_end":292082,"line_start":421,"line_end":421,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(output, Ok(vec![3, 2]));","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":292087,"byte_end":292126,"line_start":422,"line_end":422,"column_start":5,"column_end":44}},{"value":"/ # })","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":292131,"byte_end":292139,"line_start":423,"line_end":423,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":292144,"byte_end":292151,"line_start":424,"line_end":424,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2603},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":294081,"byte_end":294104,"line_start":477,"line_end":477,"column_start":8,"column_end":31},"name":"try_for_each_concurrent","qualname":"::stream::try_stream::TryStreamExt::try_for_each_concurrent","value":"fn <Fut, F> (self, limit: impl Into<Option<usize>>, f: F) -> TryForEachConcurrent<Self, Fut, F>","parent":{"krate":0,"index":2576},"children":[],"decl_id":null,"docs":" Attempts to run this stream to completion, executing the provided asynchronous\n closure for each element on the stream concurrently as elements become\n available, exiting as soon as an error occurs.","sig":null,"attributes":[{"value":"/ Attempts to run this stream to completion, executing the provided asynchronous","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":292399,"byte_end":292481,"line_start":434,"line_end":434,"column_start":5,"column_end":87}},{"value":"/ closure for each element on the stream concurrently as elements become","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":292486,"byte_end":292560,"line_start":435,"line_end":435,"column_start":5,"column_end":79}},{"value":"/ available, exiting as soon as an error occurs.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":292565,"byte_end":292615,"line_start":436,"line_end":436,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":292620,"byte_end":292623,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ This is similar to","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":292628,"byte_end":292650,"line_start":438,"line_end":438,"column_start":5,"column_end":27}},{"value":"/ [`StreamExt::for_each_concurrent`](crate::stream::StreamExt::for_each_concurrent),","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":292655,"byte_end":292741,"line_start":439,"line_end":439,"column_start":5,"column_end":91}},{"value":"/ but will resolve to an error immediately if the underlying stream or the provided","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":292746,"byte_end":292831,"line_start":440,"line_end":440,"column_start":5,"column_end":90}},{"value":"/ closure return an error.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":292836,"byte_end":292864,"line_start":441,"line_end":441,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":292869,"byte_end":292872,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":292877,"byte_end":292952,"line_start":443,"line_end":443,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":292957,"byte_end":293014,"line_start":444,"line_end":444,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":293019,"byte_end":293022,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":293027,"byte_end":293041,"line_start":446,"line_end":446,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":293046,"byte_end":293049,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":293054,"byte_end":293061,"line_start":448,"line_end":448,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":293066,"byte_end":293107,"line_start":449,"line_end":449,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":293112,"byte_end":293146,"line_start":450,"line_end":450,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":293151,"byte_end":293208,"line_start":451,"line_end":451,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":293213,"byte_end":293216,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = oneshot::channel();","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":293221,"byte_end":293261,"line_start":453,"line_end":453,"column_start":5,"column_end":45}},{"value":"/ let (tx2, rx2) = oneshot::channel();","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":293266,"byte_end":293306,"line_start":454,"line_end":454,"column_start":5,"column_end":45}},{"value":"/ let (_tx3, rx3) = oneshot::channel();","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":293311,"byte_end":293352,"line_start":455,"line_end":455,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":293357,"byte_end":293360,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![rx1, rx2, rx3]);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":293365,"byte_end":293416,"line_start":457,"line_end":457,"column_start":5,"column_end":56}},{"value":"/ let fut = stream.map(Ok).try_for_each_concurrent(","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":293421,"byte_end":293474,"line_start":458,"line_end":458,"column_start":5,"column_end":58}},{"value":"/     /* limit */ 2,","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":293479,"byte_end":293501,"line_start":459,"line_end":459,"column_start":5,"column_end":27}},{"value":"/     |rx| async move {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":293506,"byte_end":293531,"line_start":460,"line_end":460,"column_start":5,"column_end":30}},{"value":"/         let res: Result<(), oneshot::Canceled> = rx.await;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":293536,"byte_end":293598,"line_start":461,"line_end":461,"column_start":5,"column_end":67}},{"value":"/         res","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":293603,"byte_end":293618,"line_start":462,"line_end":462,"column_start":5,"column_end":20}},{"value":"/     }","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":293623,"byte_end":293632,"line_start":463,"line_end":463,"column_start":5,"column_end":14}},{"value":"/ );","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":293637,"byte_end":293643,"line_start":464,"line_end":464,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":293648,"byte_end":293651,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ tx1.send(()).unwrap();","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":293656,"byte_end":293682,"line_start":466,"line_end":466,"column_start":5,"column_end":31}},{"value":"/ // Drop the second sender so that `rx2` resolves to `Canceled`.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":293687,"byte_end":293754,"line_start":467,"line_end":467,"column_start":5,"column_end":72}},{"value":"/ drop(tx2);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":293759,"byte_end":293773,"line_start":468,"line_end":468,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":293778,"byte_end":293781,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ // The final result is an error because the second future","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":293786,"byte_end":293847,"line_start":470,"line_end":470,"column_start":5,"column_end":66}},{"value":"/ // resulted in an error.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":293852,"byte_end":293880,"line_start":471,"line_end":471,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(Err(oneshot::Canceled), fut.await);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":293885,"byte_end":293935,"line_start":472,"line_end":472,"column_start":5,"column_end":55}},{"value":"/ # })","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":293940,"byte_end":293948,"line_start":473,"line_end":473,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":293953,"byte_end":293960,"line_start":474,"line_end":474,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":294048,"byte_end":294073,"line_start":476,"line_end":476,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2607},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":295461,"byte_end":295472,"line_start":520,"line_end":520,"column_start":8,"column_end":19},"name":"try_collect","qualname":"::stream::try_stream::TryStreamExt::try_collect","value":"fn <C> (self) -> TryCollect<Self, C>","parent":{"krate":0,"index":2576},"children":[],"decl_id":null,"docs":" Attempt to transform a stream into a collection,\n returning a future representing the result of that computation.","sig":null,"attributes":[{"value":"/ Attempt to transform a stream into a collection,","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":294422,"byte_end":294474,"line_start":490,"line_end":490,"column_start":5,"column_end":57}},{"value":"/ returning a future representing the result of that computation.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":294479,"byte_end":294546,"line_start":491,"line_end":491,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":294551,"byte_end":294554,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ This combinator will collect all successful results of this stream and","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":294559,"byte_end":294633,"line_start":493,"line_end":493,"column_start":5,"column_end":79}},{"value":"/ collect them into the specified collection type. If an error happens then all","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":294638,"byte_end":294719,"line_start":494,"line_end":494,"column_start":5,"column_end":86}},{"value":"/ collected elements will be dropped and the error will be returned.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":294724,"byte_end":294794,"line_start":495,"line_end":495,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":294799,"byte_end":294802,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ The returned future will be resolved when the stream terminates.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":294807,"byte_end":294875,"line_start":497,"line_end":497,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":294880,"byte_end":294883,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":294888,"byte_end":294902,"line_start":499,"line_end":499,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":294907,"byte_end":294910,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":294915,"byte_end":294922,"line_start":501,"line_end":501,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":294927,"byte_end":294968,"line_start":502,"line_end":502,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":294973,"byte_end":295004,"line_start":503,"line_end":503,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::TryStreamExt;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":295009,"byte_end":295047,"line_start":504,"line_end":504,"column_start":5,"column_end":43}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":295052,"byte_end":295072,"line_start":505,"line_end":505,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":295077,"byte_end":295080,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":295085,"byte_end":295122,"line_start":507,"line_end":507,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":295127,"byte_end":295130,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":295135,"byte_end":295162,"line_start":509,"line_end":509,"column_start":5,"column_end":32}},{"value":"/     for i in 1..=5 {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":295167,"byte_end":295191,"line_start":510,"line_end":510,"column_start":5,"column_end":29}},{"value":"/         tx.unbounded_send(Ok(i)).unwrap();","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":295196,"byte_end":295242,"line_start":511,"line_end":511,"column_start":5,"column_end":51}},{"value":"/     }","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":295247,"byte_end":295256,"line_start":512,"line_end":512,"column_start":5,"column_end":14}},{"value":"/     tx.unbounded_send(Err(6)).unwrap();","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":295261,"byte_end":295304,"line_start":513,"line_end":513,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":295309,"byte_end":295316,"line_start":514,"line_end":514,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":295321,"byte_end":295324,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/ let output: Result<Vec<i32>, i32> = rx.try_collect().await;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":295329,"byte_end":295392,"line_start":516,"line_end":516,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(output, Err(6));","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":295397,"byte_end":295428,"line_start":517,"line_end":517,"column_start":5,"column_end":36}},{"value":"/ # })","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":295433,"byte_end":295441,"line_start":518,"line_end":518,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":295446,"byte_end":295453,"line_start":519,"line_end":519,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2609},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":296899,"byte_end":296909,"line_start":557,"line_end":557,"column_start":8,"column_end":18},"name":"try_filter","qualname":"::stream::try_stream::TryStreamExt::try_filter","value":"fn <Fut, F> (self, f: F) -> TryFilter<Self, Fut, F>","parent":{"krate":0,"index":2576},"children":[],"decl_id":null,"docs":" Attempt to filter the values produced by this stream according to the\n provided asynchronous closure.","sig":null,"attributes":[{"value":"/ Attempt to filter the values produced by this stream according to the","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":295611,"byte_end":295684,"line_start":527,"line_end":527,"column_start":5,"column_end":78}},{"value":"/ provided asynchronous closure.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":295689,"byte_end":295723,"line_start":528,"line_end":528,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":295728,"byte_end":295731,"line_start":529,"line_end":529,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided predicate `f`","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":295736,"byte_end":295811,"line_start":530,"line_end":530,"column_start":5,"column_end":80}},{"value":"/ will be run on them. If the predicate returns a `Future` which resolves","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":295816,"byte_end":295891,"line_start":531,"line_end":531,"column_start":5,"column_end":80}},{"value":"/ to `true`, then the stream will yield the value, but if the predicate","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":295896,"byte_end":295969,"line_start":532,"line_end":532,"column_start":5,"column_end":78}},{"value":"/ return a `Future` which resolves to `false`, then the value will be","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":295974,"byte_end":296045,"line_start":533,"line_end":533,"column_start":5,"column_end":76}},{"value":"/ discarded and the next value will be produced.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":296050,"byte_end":296100,"line_start":534,"line_end":534,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":296105,"byte_end":296108,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/ All errors are passed through without filtering in this combinator.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":296113,"byte_end":296184,"line_start":536,"line_end":536,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":296189,"byte_end":296192,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":296197,"byte_end":296273,"line_start":538,"line_end":538,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter` methods in","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":296278,"byte_end":296348,"line_start":539,"line_end":539,"column_start":5,"column_end":75}},{"value":"/ the standard library.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":296353,"byte_end":296378,"line_start":540,"line_end":540,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":296383,"byte_end":296386,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":296391,"byte_end":296405,"line_start":542,"line_end":542,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":296410,"byte_end":296417,"line_start":543,"line_end":543,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":296422,"byte_end":296463,"line_start":544,"line_end":544,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":296468,"byte_end":296492,"line_start":545,"line_end":545,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":296497,"byte_end":296554,"line_start":546,"line_end":546,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":296559,"byte_end":296562,"line_start":547,"line_end":547,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok(1i32), Ok(2i32), Ok(3i32), Err(\"error\")]);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":296567,"byte_end":296647,"line_start":548,"line_end":548,"column_start":5,"column_end":85}},{"value":"/ let mut evens = stream.try_filter(|x| {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":296652,"byte_end":296695,"line_start":549,"line_end":549,"column_start":5,"column_end":48}},{"value":"/     future::ready(x % 2 == 0)","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":296700,"byte_end":296733,"line_start":550,"line_end":550,"column_start":5,"column_end":38}},{"value":"/ });","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":296738,"byte_end":296745,"line_start":551,"line_end":551,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":296750,"byte_end":296753,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(evens.next().await, Some(Ok(2)));","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":296758,"byte_end":296806,"line_start":553,"line_end":553,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(evens.next().await, Some(Err(\"error\")));","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":296811,"byte_end":296866,"line_start":554,"line_end":554,"column_start":5,"column_end":60}},{"value":"/ # })","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":296871,"byte_end":296879,"line_start":555,"line_end":555,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":296884,"byte_end":296891,"line_start":556,"line_end":556,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2612},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":298485,"byte_end":298499,"line_start":598,"line_end":598,"column_start":8,"column_end":22},"name":"try_filter_map","qualname":"::stream::try_stream::TryStreamExt::try_filter_map","value":"fn <Fut, F, T> (self, f: F) -> TryFilterMap<Self, Fut, F>","parent":{"krate":0,"index":2576},"children":[],"decl_id":null,"docs":" Attempt to filter the values produced by this stream while\n simultaneously mapping them to a different type according to the\n provided asynchronous closure.","sig":null,"attributes":[{"value":"/ Attempt to filter the values produced by this stream while","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":297109,"byte_end":297171,"line_start":566,"line_end":566,"column_start":5,"column_end":67}},{"value":"/ simultaneously mapping them to a different type according to the","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":297176,"byte_end":297244,"line_start":567,"line_end":567,"column_start":5,"column_end":73}},{"value":"/ provided asynchronous closure.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":297249,"byte_end":297283,"line_start":568,"line_end":568,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":297288,"byte_end":297291,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided function will","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":297296,"byte_end":297371,"line_start":570,"line_end":570,"column_start":5,"column_end":80}},{"value":"/ be run on them. If the future returned by the predicate `f` resolves to","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":297376,"byte_end":297451,"line_start":571,"line_end":571,"column_start":5,"column_end":80}},{"value":"/ [`Some(item)`](Some) then the stream will yield the value `item`, but if","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":297456,"byte_end":297532,"line_start":572,"line_end":572,"column_start":5,"column_end":81}},{"value":"/ it resolves to [`None`] then the next value will be produced.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":297537,"byte_end":297602,"line_start":573,"line_end":573,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":297607,"byte_end":297610,"line_start":574,"line_end":574,"column_start":5,"column_end":8}},{"value":"/ All errors are passed through without filtering in this combinator.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":297615,"byte_end":297686,"line_start":575,"line_end":575,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":297691,"byte_end":297694,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":297699,"byte_end":297775,"line_start":577,"line_end":577,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter_map` methods in","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":297780,"byte_end":297854,"line_start":578,"line_end":578,"column_start":5,"column_end":79}},{"value":"/ the standard library.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":297859,"byte_end":297884,"line_start":579,"line_end":579,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":297889,"byte_end":297892,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":297897,"byte_end":297911,"line_start":581,"line_end":581,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":297916,"byte_end":297923,"line_start":582,"line_end":582,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":297928,"byte_end":297969,"line_start":583,"line_end":583,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":297974,"byte_end":298031,"line_start":584,"line_end":584,"column_start":5,"column_end":62}},{"value":"/ use futures::pin_mut;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":298036,"byte_end":298061,"line_start":585,"line_end":585,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":298066,"byte_end":298069,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok(1i32), Ok(6i32), Err(\"error\")]);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":298074,"byte_end":298144,"line_start":587,"line_end":587,"column_start":5,"column_end":75}},{"value":"/ let halves = stream.try_filter_map(|x| async move {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":298149,"byte_end":298204,"line_start":588,"line_end":588,"column_start":5,"column_end":60}},{"value":"/     let ret = if x % 2 == 0 { Some(x / 2) } else { None };","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":298209,"byte_end":298271,"line_start":589,"line_end":589,"column_start":5,"column_end":67}},{"value":"/     Ok(ret)","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":298276,"byte_end":298291,"line_start":590,"line_end":590,"column_start":5,"column_end":20}},{"value":"/ });","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":298296,"byte_end":298303,"line_start":591,"line_end":591,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":298308,"byte_end":298311,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ pin_mut!(halves);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":298316,"byte_end":298337,"line_start":593,"line_end":593,"column_start":5,"column_end":26}},{"value":"/ assert_eq!(halves.next().await, Some(Ok(3)));","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":298342,"byte_end":298391,"line_start":594,"line_end":594,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(halves.next().await, Some(Err(\"error\")));","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":298396,"byte_end":298452,"line_start":595,"line_end":595,"column_start":5,"column_end":61}},{"value":"/ # })","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":298457,"byte_end":298465,"line_start":596,"line_end":596,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":298470,"byte_end":298477,"line_start":597,"line_end":597,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2616},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":300147,"byte_end":300158,"line_start":645,"line_end":645,"column_start":8,"column_end":19},"name":"try_flatten","qualname":"::stream::try_stream::TryStreamExt::try_flatten","value":"fn (self) -> TryFlatten<Self>","parent":{"krate":0,"index":2576},"children":[],"decl_id":null,"docs":" Flattens a stream of streams into just one continuous stream.","sig":null,"attributes":[{"value":"/ Flattens a stream of streams into just one continuous stream.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":298732,"byte_end":298797,"line_start":607,"line_end":607,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":298802,"byte_end":298805,"line_start":608,"line_end":608,"column_start":5,"column_end":8}},{"value":"/ If this stream's elements are themselves streams then this combinator","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":298810,"byte_end":298883,"line_start":609,"line_end":609,"column_start":5,"column_end":78}},{"value":"/ will flatten out the entire stream to one long chain of elements. Any","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":298888,"byte_end":298961,"line_start":610,"line_end":610,"column_start":5,"column_end":78}},{"value":"/ errors are passed through without looking at them, but otherwise each","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":298966,"byte_end":299039,"line_start":611,"line_end":611,"column_start":5,"column_end":78}},{"value":"/ individual stream will get exhausted before moving on to the next.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":299044,"byte_end":299114,"line_start":612,"line_end":612,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":299119,"byte_end":299122,"line_start":613,"line_end":613,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":299127,"byte_end":299141,"line_start":614,"line_end":614,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":299146,"byte_end":299149,"line_start":615,"line_end":615,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":299154,"byte_end":299161,"line_start":616,"line_end":616,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":299166,"byte_end":299207,"line_start":617,"line_end":617,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":299212,"byte_end":299243,"line_start":618,"line_end":618,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::{StreamExt, TryStreamExt};","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":299248,"byte_end":299299,"line_start":619,"line_end":619,"column_start":5,"column_end":56}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":299304,"byte_end":299324,"line_start":620,"line_end":620,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":299329,"byte_end":299332,"line_start":621,"line_end":621,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = mpsc::unbounded();","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":299337,"byte_end":299376,"line_start":622,"line_end":622,"column_start":5,"column_end":44}},{"value":"/ let (tx2, rx2) = mpsc::unbounded();","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":299381,"byte_end":299420,"line_start":623,"line_end":623,"column_start":5,"column_end":44}},{"value":"/ let (tx3, rx3) = mpsc::unbounded();","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":299425,"byte_end":299464,"line_start":624,"line_end":624,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":299469,"byte_end":299472,"line_start":625,"line_end":625,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":299477,"byte_end":299504,"line_start":626,"line_end":626,"column_start":5,"column_end":32}},{"value":"/     tx1.unbounded_send(Ok(1)).unwrap();","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":299509,"byte_end":299552,"line_start":627,"line_end":627,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":299557,"byte_end":299564,"line_start":628,"line_end":628,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":299569,"byte_end":299596,"line_start":629,"line_end":629,"column_start":5,"column_end":32}},{"value":"/     tx2.unbounded_send(Ok(2)).unwrap();","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":299601,"byte_end":299644,"line_start":630,"line_end":630,"column_start":5,"column_end":48}},{"value":"/     tx2.unbounded_send(Err(3)).unwrap();","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":299649,"byte_end":299693,"line_start":631,"line_end":631,"column_start":5,"column_end":49}},{"value":"/ });","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":299698,"byte_end":299705,"line_start":632,"line_end":632,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":299710,"byte_end":299737,"line_start":633,"line_end":633,"column_start":5,"column_end":32}},{"value":"/     tx3.unbounded_send(Ok(rx1)).unwrap();","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":299742,"byte_end":299787,"line_start":634,"line_end":634,"column_start":5,"column_end":50}},{"value":"/     tx3.unbounded_send(Ok(rx2)).unwrap();","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":299792,"byte_end":299837,"line_start":635,"line_end":635,"column_start":5,"column_end":50}},{"value":"/     tx3.unbounded_send(Err(4)).unwrap();","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":299842,"byte_end":299886,"line_start":636,"line_end":636,"column_start":5,"column_end":49}},{"value":"/ });","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":299891,"byte_end":299898,"line_start":637,"line_end":637,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":299903,"byte_end":299906,"line_start":638,"line_end":638,"column_start":5,"column_end":8}},{"value":"/ let mut stream = rx3.try_flatten();","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":299911,"byte_end":299950,"line_start":639,"line_end":639,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(stream.next().await, Some(Ok(1)));","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":299955,"byte_end":300004,"line_start":640,"line_end":640,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(stream.next().await, Some(Ok(2)));","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":300009,"byte_end":300058,"line_start":641,"line_end":641,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(stream.next().await, Some(Err(3)));","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":300063,"byte_end":300113,"line_start":642,"line_end":642,"column_start":5,"column_end":55}},{"value":"/ # });","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":300118,"byte_end":300127,"line_start":643,"line_end":643,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":300132,"byte_end":300139,"line_start":644,"line_end":644,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2617},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":301638,"byte_end":301646,"line_start":682,"line_end":682,"column_start":8,"column_end":16},"name":"try_fold","qualname":"::stream::try_stream::TryStreamExt::try_fold","value":"fn <T, Fut, F> (self, init: T, f: F) -> TryFold<Self, Fut, T, F>","parent":{"krate":0,"index":2576},"children":[],"decl_id":null,"docs":" Attempt to execute an accumulating asynchronous computation over a\n stream, collecting all the values into one final result.","sig":null,"attributes":[{"value":"/ Attempt to execute an accumulating asynchronous computation over a","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":300351,"byte_end":300421,"line_start":654,"line_end":654,"column_start":5,"column_end":75}},{"value":"/ stream, collecting all the values into one final result.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":300426,"byte_end":300486,"line_start":655,"line_end":655,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":300491,"byte_end":300494,"line_start":656,"line_end":656,"column_start":5,"column_end":8}},{"value":"/ This combinator will accumulate all values returned by this stream","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":300499,"byte_end":300569,"line_start":657,"line_end":657,"column_start":5,"column_end":75}},{"value":"/ according to the closure provided. The initial state is also provided to","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":300574,"byte_end":300650,"line_start":658,"line_end":658,"column_start":5,"column_end":81}},{"value":"/ this method and then is returned again by each execution of the closure.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":300655,"byte_end":300731,"line_start":659,"line_end":659,"column_start":5,"column_end":81}},{"value":"/ Once the entire stream has been exhausted the returned future will","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":300736,"byte_end":300806,"line_start":660,"line_end":660,"column_start":5,"column_end":75}},{"value":"/ resolve to this value.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":300811,"byte_end":300837,"line_start":661,"line_end":661,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":300842,"byte_end":300845,"line_start":662,"line_end":662,"column_start":5,"column_end":8}},{"value":"/ This method is similar to [`fold`](crate::stream::StreamExt::fold), but will","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":300850,"byte_end":300930,"line_start":663,"line_end":663,"column_start":5,"column_end":85}},{"value":"/ exit early if an error is encountered in either the stream or the","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":300935,"byte_end":301004,"line_start":664,"line_end":664,"column_start":5,"column_end":74}},{"value":"/ provided closure.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":301009,"byte_end":301030,"line_start":665,"line_end":665,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":301035,"byte_end":301038,"line_start":666,"line_end":666,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":301043,"byte_end":301057,"line_start":667,"line_end":667,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":301062,"byte_end":301065,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":301070,"byte_end":301077,"line_start":669,"line_end":669,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":301082,"byte_end":301123,"line_start":670,"line_end":670,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":301128,"byte_end":301174,"line_start":671,"line_end":671,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":301179,"byte_end":301182,"line_start":672,"line_end":672,"column_start":5,"column_end":8}},{"value":"/ let number_stream = stream::iter(vec![Ok::<i32, i32>(1), Ok(2)]);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":301187,"byte_end":301256,"line_start":673,"line_end":673,"column_start":5,"column_end":74}},{"value":"/ let sum = number_stream.try_fold(0, |acc, x| async move { Ok(acc + x) });","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":301261,"byte_end":301338,"line_start":674,"line_end":674,"column_start":5,"column_end":82}},{"value":"/ assert_eq!(sum.await, Ok(3));","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":301343,"byte_end":301376,"line_start":675,"line_end":675,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":301381,"byte_end":301384,"line_start":676,"line_end":676,"column_start":5,"column_end":8}},{"value":"/ let number_stream_with_err = stream::iter(vec![Ok::<i32, i32>(1), Err(2), Ok(1)]);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":301389,"byte_end":301475,"line_start":677,"line_end":677,"column_start":5,"column_end":91}},{"value":"/ let sum = number_stream_with_err.try_fold(0, |acc, x| async move { Ok(acc + x) });","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":301480,"byte_end":301566,"line_start":678,"line_end":678,"column_start":5,"column_end":91}},{"value":"/ assert_eq!(sum.await, Err(2));","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":301571,"byte_end":301605,"line_start":679,"line_end":679,"column_start":5,"column_end":39}},{"value":"/ # })","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":301610,"byte_end":301618,"line_start":680,"line_end":680,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":301623,"byte_end":301630,"line_start":681,"line_end":681,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2621},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":303128,"byte_end":303138,"line_start":725,"line_end":725,"column_start":8,"column_end":18},"name":"try_concat","qualname":"::stream::try_stream::TryStreamExt::try_concat","value":"fn (self) -> TryConcat<Self>","parent":{"krate":0,"index":2576},"children":[],"decl_id":null,"docs":" Attempt to concatenate all items of a stream into a single\n extendable destination, returning a future representing the end result.","sig":null,"attributes":[{"value":"/ Attempt to concatenate all items of a stream into a single","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":301882,"byte_end":301944,"line_start":691,"line_end":691,"column_start":5,"column_end":67}},{"value":"/ extendable destination, returning a future representing the end result.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":301949,"byte_end":302024,"line_start":692,"line_end":692,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":302029,"byte_end":302032,"line_start":693,"line_end":693,"column_start":5,"column_end":8}},{"value":"/ This combinator will extend the first item with the contents of all","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":302037,"byte_end":302108,"line_start":694,"line_end":694,"column_start":5,"column_end":76}},{"value":"/ the subsequent successful results of the stream. If the stream is empty,","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":302113,"byte_end":302189,"line_start":695,"line_end":695,"column_start":5,"column_end":81}},{"value":"/ the default value will be returned.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":302194,"byte_end":302233,"line_start":696,"line_end":696,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":302238,"byte_end":302241,"line_start":697,"line_end":697,"column_start":5,"column_end":8}},{"value":"/ Works with all collections that implement the [`Extend`](std::iter::Extend) trait.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":302246,"byte_end":302332,"line_start":698,"line_end":698,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":302337,"byte_end":302340,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ This method is similar to [`concat`](crate::stream::StreamExt::concat), but will","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":302345,"byte_end":302429,"line_start":700,"line_end":700,"column_start":5,"column_end":89}},{"value":"/ exit early if an error is encountered in the stream.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":302434,"byte_end":302490,"line_start":701,"line_end":701,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":302495,"byte_end":302498,"line_start":702,"line_end":702,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":302503,"byte_end":302517,"line_start":703,"line_end":703,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":302522,"byte_end":302525,"line_start":704,"line_end":704,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":302530,"byte_end":302537,"line_start":705,"line_end":705,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":302542,"byte_end":302583,"line_start":706,"line_end":706,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":302588,"byte_end":302619,"line_start":707,"line_end":707,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::TryStreamExt;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":302624,"byte_end":302662,"line_start":708,"line_end":708,"column_start":5,"column_end":43}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":302667,"byte_end":302687,"line_start":709,"line_end":709,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":302692,"byte_end":302695,"line_start":710,"line_end":710,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded::<Result<Vec<i32>, ()>>();","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":302700,"byte_end":302761,"line_start":711,"line_end":711,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":302766,"byte_end":302769,"line_start":712,"line_end":712,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":302774,"byte_end":302801,"line_start":713,"line_end":713,"column_start":5,"column_end":32}},{"value":"/     for i in (0..3).rev() {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":302806,"byte_end":302837,"line_start":714,"line_end":714,"column_start":5,"column_end":36}},{"value":"/         let n = i * 3;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":302842,"byte_end":302868,"line_start":715,"line_end":715,"column_start":5,"column_end":31}},{"value":"/         tx.unbounded_send(Ok(vec![n + 1, n + 2, n + 3])).unwrap();","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":302873,"byte_end":302943,"line_start":716,"line_end":716,"column_start":5,"column_end":75}},{"value":"/     }","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":302948,"byte_end":302957,"line_start":717,"line_end":717,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":302962,"byte_end":302969,"line_start":718,"line_end":718,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":302974,"byte_end":302977,"line_start":719,"line_end":719,"column_start":5,"column_end":8}},{"value":"/ let result = rx.try_concat().await;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":302982,"byte_end":303021,"line_start":720,"line_end":720,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":303026,"byte_end":303029,"line_start":721,"line_end":721,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result, Ok(vec![7, 8, 9, 4, 5, 6, 1, 2, 3]));","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":303034,"byte_end":303094,"line_start":722,"line_end":722,"column_start":5,"column_end":65}},{"value":"/ # });","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":303099,"byte_end":303108,"line_start":723,"line_end":723,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":303113,"byte_end":303120,"line_start":724,"line_end":724,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2622},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":305841,"byte_end":305861,"line_start":792,"line_end":792,"column_start":8,"column_end":28},"name":"try_buffer_unordered","qualname":"::stream::try_stream::TryStreamExt::try_buffer_unordered","value":"fn (self, n: usize) -> TryBufferUnordered<Self>","parent":{"krate":0,"index":2576},"children":[],"decl_id":null,"docs":" Attempt to execute several futures from a stream concurrently.","sig":null,"attributes":[{"value":"/ Attempt to execute several futures from a stream concurrently.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":303341,"byte_end":303407,"line_start":733,"line_end":733,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":303412,"byte_end":303415,"line_start":734,"line_end":734,"column_start":5,"column_end":8}},{"value":"/ This stream's `Ok` type must be a [`TryFuture`](futures_core::future::TryFuture) with an `Error` type","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":303420,"byte_end":303525,"line_start":735,"line_end":735,"column_start":5,"column_end":110}},{"value":"/ that matches the stream's `Error` type.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":303530,"byte_end":303573,"line_start":736,"line_end":736,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":303578,"byte_end":303581,"line_start":737,"line_end":737,"column_start":5,"column_end":8}},{"value":"/ This adaptor will buffer up to `n` futures and then return their","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":303586,"byte_end":303654,"line_start":738,"line_end":738,"column_start":5,"column_end":73}},{"value":"/ outputs in the order in which they complete. If the underlying stream","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":303659,"byte_end":303732,"line_start":739,"line_end":739,"column_start":5,"column_end":78}},{"value":"/ returns an error, it will be immediately propagated.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":303737,"byte_end":303793,"line_start":740,"line_end":740,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":303798,"byte_end":303801,"line_start":741,"line_end":741,"column_start":5,"column_end":8}},{"value":"/ The returned stream will be a stream of results, each containing either","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":303806,"byte_end":303881,"line_start":742,"line_end":742,"column_start":5,"column_end":80}},{"value":"/ an error or a future's output. An error can be produced either by the","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":303886,"byte_end":303959,"line_start":743,"line_end":743,"column_start":5,"column_end":78}},{"value":"/ underlying stream itself or by one of the futures it yielded.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":303964,"byte_end":304029,"line_start":744,"line_end":744,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":304034,"byte_end":304037,"line_start":745,"line_end":745,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":304042,"byte_end":304117,"line_start":746,"line_end":746,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":304122,"byte_end":304179,"line_start":747,"line_end":747,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":304184,"byte_end":304187,"line_start":748,"line_end":748,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":304192,"byte_end":304206,"line_start":749,"line_end":749,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":304211,"byte_end":304214,"line_start":750,"line_end":750,"column_start":5,"column_end":8}},{"value":"/ Results are returned in the order of completion:","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":304219,"byte_end":304271,"line_start":751,"line_end":751,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":304276,"byte_end":304283,"line_start":752,"line_end":752,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":304288,"byte_end":304329,"line_start":753,"line_end":753,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":304334,"byte_end":304368,"line_start":754,"line_end":754,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":304373,"byte_end":304430,"line_start":755,"line_end":755,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":304435,"byte_end":304438,"line_start":756,"line_end":756,"column_start":5,"column_end":8}},{"value":"/ let (send_one, recv_one) = oneshot::channel();","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":304443,"byte_end":304493,"line_start":757,"line_end":757,"column_start":5,"column_end":55}},{"value":"/ let (send_two, recv_two) = oneshot::channel();","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":304498,"byte_end":304548,"line_start":758,"line_end":758,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":304553,"byte_end":304556,"line_start":759,"line_end":759,"column_start":5,"column_end":8}},{"value":"/ let stream_of_futures = stream::iter(vec![Ok(recv_one), Ok(recv_two)]);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":304561,"byte_end":304636,"line_start":760,"line_end":760,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":304641,"byte_end":304644,"line_start":761,"line_end":761,"column_start":5,"column_end":8}},{"value":"/ let mut buffered = stream_of_futures.try_buffer_unordered(10);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":304649,"byte_end":304715,"line_start":762,"line_end":762,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":304720,"byte_end":304723,"line_start":763,"line_end":763,"column_start":5,"column_end":8}},{"value":"/ send_two.send(2i32)?;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":304728,"byte_end":304753,"line_start":764,"line_end":764,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(2i32)));","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":304758,"byte_end":304812,"line_start":765,"line_end":765,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":304817,"byte_end":304820,"line_start":766,"line_end":766,"column_start":5,"column_end":8}},{"value":"/ send_one.send(1i32)?;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":304825,"byte_end":304850,"line_start":767,"line_end":767,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(1i32)));","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":304855,"byte_end":304909,"line_start":768,"line_end":768,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":304914,"byte_end":304917,"line_start":769,"line_end":769,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buffered.next().await, None);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":304922,"byte_end":304966,"line_start":770,"line_end":770,"column_start":5,"column_end":49}},{"value":"/ # Ok::<(), i32>(()) }).unwrap();","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":304971,"byte_end":305007,"line_start":771,"line_end":771,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":305012,"byte_end":305019,"line_start":772,"line_end":772,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":305024,"byte_end":305027,"line_start":773,"line_end":773,"column_start":5,"column_end":8}},{"value":"/ Errors from the underlying stream itself are propagated:","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":305032,"byte_end":305092,"line_start":774,"line_end":774,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":305097,"byte_end":305104,"line_start":775,"line_end":775,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":305109,"byte_end":305150,"line_start":776,"line_end":776,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":305155,"byte_end":305186,"line_start":777,"line_end":777,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::{StreamExt, TryStreamExt};","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":305191,"byte_end":305242,"line_start":778,"line_end":778,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":305247,"byte_end":305250,"line_start":779,"line_end":779,"column_start":5,"column_end":8}},{"value":"/ let (sink, stream_of_futures) = mpsc::unbounded();","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":305255,"byte_end":305309,"line_start":780,"line_end":780,"column_start":5,"column_end":59}},{"value":"/ let mut buffered = stream_of_futures.try_buffer_unordered(10);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":305314,"byte_end":305380,"line_start":781,"line_end":781,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":305385,"byte_end":305388,"line_start":782,"line_end":782,"column_start":5,"column_end":8}},{"value":"/ sink.unbounded_send(Ok(async { Ok(7i32) }))?;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":305393,"byte_end":305442,"line_start":783,"line_end":783,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(7i32)));","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":305447,"byte_end":305501,"line_start":784,"line_end":784,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":305506,"byte_end":305509,"line_start":785,"line_end":785,"column_start":5,"column_end":8}},{"value":"/ sink.unbounded_send(Err(\"error in the stream\"))?;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":305514,"byte_end":305567,"line_start":786,"line_end":786,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(buffered.next().await, Some(Err(\"error in the stream\")));","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":305572,"byte_end":305644,"line_start":787,"line_end":787,"column_start":5,"column_end":77}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":305649,"byte_end":305708,"line_start":788,"line_end":788,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":305713,"byte_end":305720,"line_start":789,"line_end":789,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":305808,"byte_end":305833,"line_start":791,"line_end":791,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2623},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":306237,"byte_end":306256,"line_start":804,"line_end":804,"column_start":8,"column_end":27},"name":"try_poll_next_unpin","qualname":"::stream::try_stream::TryStreamExt::try_poll_next_unpin","value":"fn (&mut self, cx: &mut Context<'_>) -> Poll<Option<Result<Self::Ok, Self::Error>>>","parent":{"krate":0,"index":2576},"children":[],"decl_id":null,"docs":" A convenience method for calling [`TryStream::try_poll_next`] on [`Unpin`]\n stream types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`TryStream::try_poll_next`] on [`Unpin`]","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":306129,"byte_end":306207,"line_start":802,"line_end":802,"column_start":5,"column_end":83}},{"value":"/ stream types.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":306212,"byte_end":306229,"line_start":803,"line_end":803,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":10096},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\iter.rs","byte_start":340718,"byte_end":340722,"line_start":8,"line_end":8,"column_start":12,"column_end":16},"name":"Iter","qualname":"::stream::iter::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":10098}],"decl_id":null,"docs":" Stream for the [`iter`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`iter`] function.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\iter.rs","byte_start":340603,"byte_end":340640,"line_start":5,"line_end":5,"column_start":1,"column_end":38}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\iter.rs","byte_start":340658,"byte_end":340706,"line_start":7,"line_end":7,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":2656},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\iter.rs","byte_start":341240,"byte_end":341244,"line_start":28,"line_end":28,"column_start":8,"column_end":12},"name":"iter","qualname":"::stream::iter::iter","value":"fn <I> (i: I) -> Iter<I::IntoIter>","parent":null,"children":[],"decl_id":null,"docs":" Converts an `Iterator` into a `Stream` which is always ready\n to yield the next value.","sig":null,"attributes":[{"value":"/ Converts an `Iterator` into a `Stream` which is always ready","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\iter.rs","byte_start":340774,"byte_end":340838,"line_start":14,"line_end":14,"column_start":1,"column_end":65}},{"value":"/ to yield the next value.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\iter.rs","byte_start":340839,"byte_end":340867,"line_start":15,"line_end":15,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\iter.rs","byte_start":340868,"byte_end":340871,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Iterators in Rust don't express the ability to block, so this adapter","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\iter.rs","byte_start":340872,"byte_end":340945,"line_start":17,"line_end":17,"column_start":1,"column_end":74}},{"value":"/ simply always calls `iter.next()` and returns that.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\iter.rs","byte_start":340946,"byte_end":341001,"line_start":18,"line_end":18,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\iter.rs","byte_start":341002,"byte_end":341005,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\iter.rs","byte_start":341006,"byte_end":341013,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\iter.rs","byte_start":341014,"byte_end":341055,"line_start":21,"line_end":21,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\iter.rs","byte_start":341056,"byte_end":341099,"line_start":22,"line_end":22,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\iter.rs","byte_start":341100,"byte_end":341103,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::iter(vec![17, 19]);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\iter.rs","byte_start":341104,"byte_end":341148,"line_start":24,"line_end":24,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(vec![17, 19], stream.collect::<Vec<i32>>().await);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\iter.rs","byte_start":341149,"byte_end":341214,"line_start":25,"line_end":25,"column_start":1,"column_end":66}},{"value":"/ # });","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\iter.rs","byte_start":341215,"byte_end":341224,"line_start":26,"line_end":26,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\iter.rs","byte_start":341225,"byte_end":341232,"line_start":27,"line_end":27,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10102},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\repeat.rs","byte_start":341886,"byte_end":341892,"line_start":8,"line_end":8,"column_start":12,"column_end":18},"name":"Repeat","qualname":"::stream::repeat::Repeat","value":"Repeat {  }","parent":null,"children":[{"krate":0,"index":10104}],"decl_id":null,"docs":" Stream for the [`repeat`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`repeat`] function.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\repeat.rs","byte_start":341769,"byte_end":341808,"line_start":5,"line_end":5,"column_start":1,"column_end":40}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\repeat.rs","byte_start":341826,"byte_end":341874,"line_start":7,"line_end":7,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":2674},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\repeat.rs","byte_start":342416,"byte_end":342422,"line_start":26,"line_end":26,"column_start":8,"column_end":14},"name":"repeat","qualname":"::stream::repeat::repeat","value":"fn <T> (item: T) -> Repeat<T>","parent":null,"children":[],"decl_id":null,"docs":" Create a stream which produces the same item repeatedly.","sig":null,"attributes":[{"value":"/ Create a stream which produces the same item repeatedly.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\repeat.rs","byte_start":341914,"byte_end":341974,"line_start":12,"line_end":12,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\repeat.rs","byte_start":341975,"byte_end":341978,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ The stream never terminates. Note that you likely want to avoid","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\repeat.rs","byte_start":341979,"byte_end":342046,"line_start":14,"line_end":14,"column_start":1,"column_end":68}},{"value":"/ usage of `collect` or such on the returned stream as it will exhaust","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\repeat.rs","byte_start":342047,"byte_end":342119,"line_start":15,"line_end":15,"column_start":1,"column_end":73}},{"value":"/ available memory as it tries to just fill up all RAM.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\repeat.rs","byte_start":342120,"byte_end":342177,"line_start":16,"line_end":16,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\repeat.rs","byte_start":342178,"byte_end":342181,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\repeat.rs","byte_start":342182,"byte_end":342189,"line_start":18,"line_end":18,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\repeat.rs","byte_start":342190,"byte_end":342231,"line_start":19,"line_end":19,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\repeat.rs","byte_start":342232,"byte_end":342275,"line_start":20,"line_end":20,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\repeat.rs","byte_start":342276,"byte_end":342279,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::repeat(9);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\repeat.rs","byte_start":342280,"byte_end":342315,"line_start":22,"line_end":22,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(vec![9, 9, 9], stream.take(3).collect::<Vec<i32>>().await);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\repeat.rs","byte_start":342316,"byte_end":342390,"line_start":23,"line_end":23,"column_start":1,"column_end":75}},{"value":"/ # });","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\repeat.rs","byte_start":342391,"byte_end":342400,"line_start":24,"line_end":24,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\repeat.rs","byte_start":342401,"byte_end":342408,"line_start":25,"line_end":25,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10108},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\empty.rs","byte_start":343207,"byte_end":343212,"line_start":9,"line_end":9,"column_start":12,"column_end":17},"name":"Empty","qualname":"::stream::empty::Empty","value":"Empty {  }","parent":null,"children":[{"krate":0,"index":10110}],"decl_id":null,"docs":" Stream for the [`empty`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`empty`] function.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\empty.rs","byte_start":343091,"byte_end":343129,"line_start":6,"line_end":6,"column_start":1,"column_end":39}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\empty.rs","byte_start":343147,"byte_end":343195,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":2698},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\empty.rs","byte_start":343380,"byte_end":343385,"line_start":16,"line_end":16,"column_start":8,"column_end":13},"name":"empty","qualname":"::stream::empty::empty","value":"fn <T> () -> Empty<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream which contains no elements.","sig":null,"attributes":[{"value":"/ Creates a stream which contains no elements.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\empty.rs","byte_start":343250,"byte_end":343298,"line_start":13,"line_end":13,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\empty.rs","byte_start":343299,"byte_end":343302,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The returned stream will always return `Ready(None)` when polled.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\empty.rs","byte_start":343303,"byte_end":343372,"line_start":15,"line_end":15,"column_start":1,"column_end":70}}]},{"kind":"Function","id":{"krate":0,"index":2725},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\once.rs","byte_start":344330,"byte_end":344334,"line_start":18,"line_end":18,"column_start":8,"column_end":12},"name":"once","qualname":"::stream::once::once","value":"fn <Fut> (future: Fut) -> Once<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream of a single element.","sig":null,"attributes":[{"value":"/ Creates a stream of a single element.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\once.rs","byte_start":344023,"byte_end":344064,"line_start":7,"line_end":7,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\once.rs","byte_start":344065,"byte_end":344068,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\once.rs","byte_start":344069,"byte_end":344076,"line_start":9,"line_end":9,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\once.rs","byte_start":344077,"byte_end":344118,"line_start":10,"line_end":10,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\once.rs","byte_start":344119,"byte_end":344162,"line_start":11,"line_end":11,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\once.rs","byte_start":344163,"byte_end":344166,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::once(async { 17 });","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\once.rs","byte_start":344167,"byte_end":344211,"line_start":13,"line_end":13,"column_start":1,"column_end":45}},{"value":"/ let collected = stream.collect::<Vec<i32>>().await;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\once.rs","byte_start":344212,"byte_end":344267,"line_start":14,"line_end":14,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(collected, vec![17]);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\once.rs","byte_start":344268,"byte_end":344304,"line_start":15,"line_end":15,"column_start":1,"column_end":37}},{"value":"/ # });","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\once.rs","byte_start":344305,"byte_end":344314,"line_start":16,"line_end":16,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\once.rs","byte_start":344315,"byte_end":344322,"line_start":17,"line_end":17,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10114},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\once.rs","byte_start":344605,"byte_end":344609,"line_start":28,"line_end":28,"column_start":12,"column_end":16},"name":"Once","qualname":"::stream::once::Once","value":"Once {  }","parent":null,"children":[{"krate":0,"index":10116}],"decl_id":null,"docs":" A stream which emits single element and then EOF.","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\once.rs","byte_start":344545,"byte_end":344593,"line_start":27,"line_end":27,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\once.rs","byte_start":344513,"byte_end":344527,"line_start":25,"line_end":25,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":10132},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\once.rs","byte_start":344605,"byte_end":344609,"line_start":28,"line_end":28,"column_start":12,"column_end":16},"name":"__Once","qualname":"::stream::once::_::__Once","value":"__Once {  }","parent":null,"children":[{"krate":0,"index":10135},{"krate":0,"index":10136}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10156},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\pending.rs","byte_start":345780,"byte_end":345787,"line_start":9,"line_end":9,"column_start":12,"column_end":19},"name":"Pending","qualname":"::stream::pending::Pending","value":"Pending {  }","parent":null,"children":[{"krate":0,"index":10158}],"decl_id":null,"docs":" Stream for the [`pending()`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`pending()`] function.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\pending.rs","byte_start":345660,"byte_end":345702,"line_start":6,"line_end":6,"column_start":1,"column_end":43}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\pending.rs","byte_start":345720,"byte_end":345768,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":2749},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\pending.rs","byte_start":345963,"byte_end":345970,"line_start":16,"line_end":16,"column_start":8,"column_end":15},"name":"pending","qualname":"::stream::pending::pending","value":"fn <T> () -> Pending<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream which never returns any elements.","sig":null,"attributes":[{"value":"/ Creates a stream which never returns any elements.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\pending.rs","byte_start":345831,"byte_end":345885,"line_start":13,"line_end":13,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\pending.rs","byte_start":345886,"byte_end":345889,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The returned stream will always return `Pending` when polled.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\pending.rs","byte_start":345890,"byte_end":345955,"line_start":15,"line_end":15,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":2771},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\poll_fn.rs","byte_start":346676,"byte_end":346682,"line_start":10,"line_end":10,"column_start":12,"column_end":18},"name":"PollFn","qualname":"::stream::poll_fn::PollFn","value":"PollFn {  }","parent":null,"children":[{"krate":0,"index":2773}],"decl_id":null,"docs":" Stream for the [`poll_fn`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`poll_fn`] function.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\poll_fn.rs","byte_start":346575,"byte_end":346615,"line_start":8,"line_end":8,"column_start":1,"column_end":41}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\poll_fn.rs","byte_start":346616,"byte_end":346664,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":2779},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\poll_fn.rs","byte_start":347370,"byte_end":347377,"line_start":40,"line_end":40,"column_start":8,"column_end":15},"name":"poll_fn","qualname":"::stream::poll_fn::poll_fn","value":"fn <T, F> (f: F) -> PollFn<F>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream wrapping a function returning `Poll<Option<T>>`.","sig":null,"attributes":[{"value":"/ Creates a new stream wrapping a function returning `Poll<Option<T>>`.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\poll_fn.rs","byte_start":346882,"byte_end":346955,"line_start":22,"line_end":22,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\poll_fn.rs","byte_start":346956,"byte_end":346959,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Polling the returned stream calls the wrapped function.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\poll_fn.rs","byte_start":346960,"byte_end":347019,"line_start":24,"line_end":24,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\poll_fn.rs","byte_start":347020,"byte_end":347023,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\poll_fn.rs","byte_start":347024,"byte_end":347038,"line_start":26,"line_end":26,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\poll_fn.rs","byte_start":347039,"byte_end":347042,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\poll_fn.rs","byte_start":347043,"byte_end":347050,"line_start":28,"line_end":28,"column_start":1,"column_end":8}},{"value":"/ use futures::stream::poll_fn;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\poll_fn.rs","byte_start":347051,"byte_end":347084,"line_start":29,"line_end":29,"column_start":1,"column_end":34}},{"value":"/ use futures::task::Poll;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\poll_fn.rs","byte_start":347085,"byte_end":347113,"line_start":30,"line_end":30,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\poll_fn.rs","byte_start":347114,"byte_end":347117,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ let mut counter = 1usize;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\poll_fn.rs","byte_start":347118,"byte_end":347147,"line_start":32,"line_end":32,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\poll_fn.rs","byte_start":347148,"byte_end":347151,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ let read_stream = poll_fn(move |_| -> Poll<Option<String>> {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\poll_fn.rs","byte_start":347152,"byte_end":347216,"line_start":34,"line_end":34,"column_start":1,"column_end":65}},{"value":"/     if counter == 0 { return Poll::Ready(None); }","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\poll_fn.rs","byte_start":347217,"byte_end":347270,"line_start":35,"line_end":35,"column_start":1,"column_end":54}},{"value":"/     counter -= 1;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\poll_fn.rs","byte_start":347271,"byte_end":347292,"line_start":36,"line_end":36,"column_start":1,"column_end":22}},{"value":"/     Poll::Ready(Some(\"Hello, World!\".to_owned()))","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\poll_fn.rs","byte_start":347293,"byte_end":347346,"line_start":37,"line_end":37,"column_start":1,"column_end":54}},{"value":"/ });","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\poll_fn.rs","byte_start":347347,"byte_end":347354,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\poll_fn.rs","byte_start":347355,"byte_end":347362,"line_start":39,"line_end":39,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10162},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\select.rs","byte_start":348038,"byte_end":348044,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"Select","qualname":"::stream::select::Select","value":"Select {  }","parent":null,"children":[{"krate":0,"index":10166},{"krate":0,"index":10167},{"krate":0,"index":10165}],"decl_id":null,"docs":" Stream for the [`select()`] function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\select.rs","byte_start":347978,"byte_end":348026,"line_start":10,"line_end":10,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\select.rs","byte_start":347946,"byte_end":347960,"line_start":8,"line_end":8,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":10190},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\select.rs","byte_start":348038,"byte_end":348044,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"__Select","qualname":"::stream::select::_::__Select","value":"__Select {  }","parent":null,"children":[{"krate":0,"index":10194},{"krate":0,"index":10195},{"krate":0,"index":10196}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2804},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\select.rs","byte_start":348622,"byte_end":348628,"line_start":29,"line_end":29,"column_start":8,"column_end":14},"name":"select","qualname":"::stream::select::select","value":"fn <St1, St2> (stream1: St1, stream2: St2) -> Select<St1, St2>","parent":null,"children":[],"decl_id":null,"docs":" This function will attempt to pull items from both streams. Each\n stream will be polled in a round-robin fashion, and whenever a stream is\n ready to yield an item that item is yielded.","sig":null,"attributes":[{"value":"/ This function will attempt to pull items from both streams. Each","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\select.rs","byte_start":348146,"byte_end":348214,"line_start":19,"line_end":19,"column_start":1,"column_end":69}},{"value":"/ stream will be polled in a round-robin fashion, and whenever a stream is","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\select.rs","byte_start":348215,"byte_end":348291,"line_start":20,"line_end":20,"column_start":1,"column_end":77}},{"value":"/ ready to yield an item that item is yielded.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\select.rs","byte_start":348292,"byte_end":348340,"line_start":21,"line_end":21,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\select.rs","byte_start":348341,"byte_end":348344,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ After one of the two input stream completes, the remaining one will be","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\select.rs","byte_start":348345,"byte_end":348419,"line_start":23,"line_end":23,"column_start":1,"column_end":75}},{"value":"/ polled exclusively. The returned stream completes when both input","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\select.rs","byte_start":348420,"byte_end":348489,"line_start":24,"line_end":24,"column_start":1,"column_end":70}},{"value":"/ streams have completed.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\select.rs","byte_start":348490,"byte_end":348517,"line_start":25,"line_end":25,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\select.rs","byte_start":348518,"byte_end":348521,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes both streams and returns a wrapped","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\select.rs","byte_start":348522,"byte_end":348593,"line_start":27,"line_end":27,"column_start":1,"column_end":72}},{"value":"/ version of them.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\select.rs","byte_start":348594,"byte_end":348614,"line_start":28,"line_end":28,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":2810},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\select.rs","byte_start":349007,"byte_end":349014,"line_start":43,"line_end":43,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Select<St1, St2>>::get_ref","value":"fn (&self) -> (&St1, &St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying streams that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying streams that this combinator is","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\select.rs","byte_start":348899,"byte_end":348973,"line_start":41,"line_end":41,"column_start":5,"column_end":79}},{"value":"/ pulling from.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\select.rs","byte_start":348978,"byte_end":348995,"line_start":42,"line_end":42,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2811},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\select.rs","byte_start":349370,"byte_end":349377,"line_start":52,"line_end":52,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Select<St1, St2>>::get_mut","value":"fn (&mut self) -> (&mut St1, &mut St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying streams that this","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\select.rs","byte_start":349108,"byte_end":349176,"line_start":47,"line_end":47,"column_start":5,"column_end":73}},{"value":"/ combinator is pulling from.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\select.rs","byte_start":349181,"byte_end":349212,"line_start":48,"line_end":48,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\select.rs","byte_start":349217,"byte_end":349220,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\select.rs","byte_start":349225,"byte_end":349298,"line_start":50,"line_end":50,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\select.rs","byte_start":349303,"byte_end":349358,"line_start":51,"line_end":51,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":10221},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\select.rs","byte_start":349767,"byte_end":349778,"line_start":62,"line_end":62,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Select<St1, St2>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> (Pin<&mut St1>, Pin<&mut St2>)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2812},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\select.rs","byte_start":350220,"byte_end":350230,"line_start":72,"line_end":72,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Select<St1, St2>>::into_inner","value":"fn (self) -> (St1, St2)","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying streams.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying streams.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\select.rs","byte_start":349984,"byte_end":350047,"line_start":68,"line_end":68,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\select.rs","byte_start":350052,"byte_end":350055,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\select.rs","byte_start":350060,"byte_end":350132,"line_start":70,"line_end":70,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\select.rs","byte_start":350137,"byte_end":350208,"line_start":71,"line_end":71,"column_start":5,"column_end":76}}]},{"kind":"Function","id":{"krate":0,"index":2840},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\unfold.rs","byte_start":353443,"byte_end":353449,"line_start":47,"line_end":47,"column_start":8,"column_end":14},"name":"unfold","qualname":"::stream::unfold::unfold","value":"fn <T, F, Fut, Item> (init: T, f: F) -> Unfold<T, F, Fut>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `Stream` from a seed and a closure returning a `Future`.","sig":null,"attributes":[{"value":"/ Creates a `Stream` from a seed and a closure returning a `Future`.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\unfold.rs","byte_start":352001,"byte_end":352071,"line_start":8,"line_end":8,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\unfold.rs","byte_start":352072,"byte_end":352075,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This function is the dual for the `Stream::fold()` adapter: while","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\unfold.rs","byte_start":352076,"byte_end":352145,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/ `Stream::fold()` reduces a `Stream` to one single value, `unfold()` creates a","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\unfold.rs","byte_start":352146,"byte_end":352227,"line_start":11,"line_end":11,"column_start":1,"column_end":82}},{"value":"/ `Stream` from a seed value.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\unfold.rs","byte_start":352228,"byte_end":352259,"line_start":12,"line_end":12,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\unfold.rs","byte_start":352260,"byte_end":352263,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ `unfold()` will call the provided closure with the provided seed, then wait","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\unfold.rs","byte_start":352264,"byte_end":352343,"line_start":14,"line_end":14,"column_start":1,"column_end":80}},{"value":"/ for the returned `Future` to complete with `(a, b)`. It will then yield the","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\unfold.rs","byte_start":352344,"byte_end":352423,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ value `a`, and use `b` as the next internal state.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\unfold.rs","byte_start":352424,"byte_end":352478,"line_start":16,"line_end":16,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\unfold.rs","byte_start":352479,"byte_end":352482,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ If the closure returns `None` instead of `Some(Future)`, then the `unfold()`","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\unfold.rs","byte_start":352483,"byte_end":352563,"line_start":18,"line_end":18,"column_start":1,"column_end":81}},{"value":"/ will stop producing items and return `Poll::Ready(None)` in future","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\unfold.rs","byte_start":352564,"byte_end":352634,"line_start":19,"line_end":19,"column_start":1,"column_end":71}},{"value":"/ calls to `poll()`.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\unfold.rs","byte_start":352635,"byte_end":352657,"line_start":20,"line_end":20,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\unfold.rs","byte_start":352658,"byte_end":352661,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ This function can typically be used when wanting to go from the \"world of","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\unfold.rs","byte_start":352662,"byte_end":352739,"line_start":22,"line_end":22,"column_start":1,"column_end":78}},{"value":"/ futures\" to the \"world of streams\": the provided closure can build a","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\unfold.rs","byte_start":352740,"byte_end":352812,"line_start":23,"line_end":23,"column_start":1,"column_end":73}},{"value":"/ `Future` using other library functions working on futures, and `unfold()`","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\unfold.rs","byte_start":352813,"byte_end":352890,"line_start":24,"line_end":24,"column_start":1,"column_end":78}},{"value":"/ will turn it into a `Stream` by repeating the operation.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\unfold.rs","byte_start":352891,"byte_end":352951,"line_start":25,"line_end":25,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\unfold.rs","byte_start":352952,"byte_end":352955,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\unfold.rs","byte_start":352956,"byte_end":352969,"line_start":27,"line_end":27,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\unfold.rs","byte_start":352970,"byte_end":352973,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\unfold.rs","byte_start":352974,"byte_end":352981,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\unfold.rs","byte_start":352982,"byte_end":353023,"line_start":30,"line_end":30,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\unfold.rs","byte_start":353024,"byte_end":353067,"line_start":31,"line_end":31,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\unfold.rs","byte_start":353068,"byte_end":353071,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::unfold(0, |state| async move {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\unfold.rs","byte_start":353072,"byte_end":353127,"line_start":33,"line_end":33,"column_start":1,"column_end":56}},{"value":"/     if state <= 2 {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\unfold.rs","byte_start":353128,"byte_end":353151,"line_start":34,"line_end":34,"column_start":1,"column_end":24}},{"value":"/         let next_state = state + 1;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\unfold.rs","byte_start":353152,"byte_end":353191,"line_start":35,"line_end":35,"column_start":1,"column_end":40}},{"value":"/         let yielded = state  * 2;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\unfold.rs","byte_start":353192,"byte_end":353229,"line_start":36,"line_end":36,"column_start":1,"column_end":38}},{"value":"/         Some((yielded, next_state))","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\unfold.rs","byte_start":353230,"byte_end":353269,"line_start":37,"line_end":37,"column_start":1,"column_end":40}},{"value":"/     } else {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\unfold.rs","byte_start":353270,"byte_end":353286,"line_start":38,"line_end":38,"column_start":1,"column_end":17}},{"value":"/         None","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\unfold.rs","byte_start":353287,"byte_end":353303,"line_start":39,"line_end":39,"column_start":1,"column_end":17}},{"value":"/     }","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\unfold.rs","byte_start":353304,"byte_end":353313,"line_start":40,"line_end":40,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\unfold.rs","byte_start":353314,"byte_end":353321,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\unfold.rs","byte_start":353322,"byte_end":353325,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ let result = stream.collect::<Vec<i32>>().await;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\unfold.rs","byte_start":353326,"byte_end":353378,"line_start":43,"line_end":43,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(result, vec![0, 2, 4]);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\unfold.rs","byte_start":353379,"byte_end":353417,"line_start":44,"line_end":44,"column_start":1,"column_end":39}},{"value":"/ # });","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\unfold.rs","byte_start":353418,"byte_end":353427,"line_start":45,"line_end":45,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\unfold.rs","byte_start":353428,"byte_end":353435,"line_start":46,"line_end":46,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10223},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\unfold.rs","byte_start":353780,"byte_end":353786,"line_start":61,"line_end":61,"column_start":12,"column_end":18},"name":"Unfold","qualname":"::stream::unfold::Unfold","value":"Unfold {  }","parent":null,"children":[{"krate":0,"index":10227},{"krate":0,"index":10228},{"krate":0,"index":10229}],"decl_id":null,"docs":" Stream for the [`unfold`] function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\unfold.rs","byte_start":353720,"byte_end":353768,"line_start":60,"line_end":60,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\unfold.rs","byte_start":353705,"byte_end":353719,"line_start":59,"line_end":59,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":10255},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\unfold.rs","byte_start":353780,"byte_end":353786,"line_start":61,"line_end":61,"column_start":12,"column_end":18},"name":"__Unfold","qualname":"::stream::unfold::_::__Unfold","value":"__Unfold {  }","parent":null,"children":[{"krate":0,"index":10260},{"krate":0,"index":10261}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10323},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_ordered.rs","byte_start":8408791,"byte_end":8408805,"line_start":93,"line_end":93,"column_start":12,"column_end":26},"name":"FuturesOrdered","qualname":"::stream::futures_ordered::FuturesOrdered","value":"FuturesOrdered {  }","parent":null,"children":[{"krate":0,"index":10325},{"krate":0,"index":10326},{"krate":0,"index":10327},{"krate":0,"index":10328}],"decl_id":null,"docs":" An unbounded queue of futures.","sig":null,"attributes":[{"value":"/ An unbounded queue of futures.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_ordered.rs","byte_start":8406725,"byte_end":8406759,"line_start":57,"line_end":57,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_ordered.rs","byte_start":8406760,"byte_end":8406763,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ This \"combinator\" is similar to `FuturesUnordered`, but it imposes an order","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_ordered.rs","byte_start":8406764,"byte_end":8406843,"line_start":59,"line_end":59,"column_start":1,"column_end":80}},{"value":"/ on top of the set of futures. While futures in the set will race to","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_ordered.rs","byte_start":8406844,"byte_end":8406915,"line_start":60,"line_end":60,"column_start":1,"column_end":72}},{"value":"/ completion in parallel, results will only be returned in the order their","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_ordered.rs","byte_start":8406916,"byte_end":8406992,"line_start":61,"line_end":61,"column_start":1,"column_end":77}},{"value":"/ originating futures were added to the queue.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_ordered.rs","byte_start":8406993,"byte_end":8407041,"line_start":62,"line_end":62,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_ordered.rs","byte_start":8407042,"byte_end":8407045,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ Futures are pushed into this queue and their realized values are yielded in","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_ordered.rs","byte_start":8407046,"byte_end":8407125,"line_start":64,"line_end":64,"column_start":1,"column_end":80}},{"value":"/ order. This structure is optimized to manage a large number of futures.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_ordered.rs","byte_start":8407126,"byte_end":8407201,"line_start":65,"line_end":65,"column_start":1,"column_end":76}},{"value":"/ Futures managed by `FuturesOrdered` will only be polled when they generate","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_ordered.rs","byte_start":8407202,"byte_end":8407280,"line_start":66,"line_end":66,"column_start":1,"column_end":79}},{"value":"/ notifications. This reduces the required amount of work needed to coordinate","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_ordered.rs","byte_start":8407281,"byte_end":8407361,"line_start":67,"line_end":67,"column_start":1,"column_end":81}},{"value":"/ large numbers of futures.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_ordered.rs","byte_start":8407362,"byte_end":8407391,"line_start":68,"line_end":68,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_ordered.rs","byte_start":8407392,"byte_end":8407395,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ When a `FuturesOrdered` is first created, it does not contain any futures.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_ordered.rs","byte_start":8407396,"byte_end":8407474,"line_start":70,"line_end":70,"column_start":1,"column_end":79}},{"value":"/ Calling `poll` in this state will result in `Poll::Ready(None))` to be","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_ordered.rs","byte_start":8407475,"byte_end":8407549,"line_start":71,"line_end":71,"column_start":1,"column_end":75}},{"value":"/ returned. Futures are submitted to the queue using `push`; however, the","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_ordered.rs","byte_start":8407550,"byte_end":8407625,"line_start":72,"line_end":72,"column_start":1,"column_end":76}},{"value":"/ future will **not** be polled at this point. `FuturesOrdered` will only","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_ordered.rs","byte_start":8407626,"byte_end":8407701,"line_start":73,"line_end":73,"column_start":1,"column_end":76}},{"value":"/ poll managed futures when `FuturesOrdered::poll` is called. As such, it","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_ordered.rs","byte_start":8407702,"byte_end":8407777,"line_start":74,"line_end":74,"column_start":1,"column_end":76}},{"value":"/ is important to call `poll` after pushing new futures.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_ordered.rs","byte_start":8407778,"byte_end":8407836,"line_start":75,"line_end":75,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_ordered.rs","byte_start":8407837,"byte_end":8407840,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ If `FuturesOrdered::poll` returns `Poll::Ready(None)` this means that","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_ordered.rs","byte_start":8407841,"byte_end":8407914,"line_start":77,"line_end":77,"column_start":1,"column_end":74}},{"value":"/ the queue is currently not managing any futures. A future may be submitted","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_ordered.rs","byte_start":8407915,"byte_end":8407993,"line_start":78,"line_end":78,"column_start":1,"column_end":79}},{"value":"/ to the queue at a later time. At that point, a call to","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_ordered.rs","byte_start":8407994,"byte_end":8408052,"line_start":79,"line_end":79,"column_start":1,"column_end":59}},{"value":"/ `FuturesOrdered::poll` will either return the future's resolved value","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_ordered.rs","byte_start":8408053,"byte_end":8408126,"line_start":80,"line_end":80,"column_start":1,"column_end":74}},{"value":"/ **or** `Poll::Pending` if the future has not yet completed. When","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_ordered.rs","byte_start":8408127,"byte_end":8408195,"line_start":81,"line_end":81,"column_start":1,"column_end":69}},{"value":"/ multiple futures are submitted to the queue, `FuturesOrdered::poll` will","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_ordered.rs","byte_start":8408196,"byte_end":8408272,"line_start":82,"line_end":82,"column_start":1,"column_end":77}},{"value":"/ return `Poll::Pending` until the first future completes, even if","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_ordered.rs","byte_start":8408273,"byte_end":8408341,"line_start":83,"line_end":83,"column_start":1,"column_end":69}},{"value":"/ some of the later futures have already completed.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_ordered.rs","byte_start":8408342,"byte_end":8408395,"line_start":84,"line_end":84,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_ordered.rs","byte_start":8408396,"byte_end":8408399,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ Note that you can create a ready-made `FuturesOrdered` via the","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_ordered.rs","byte_start":8408400,"byte_end":8408466,"line_start":86,"line_end":86,"column_start":1,"column_end":67}},{"value":"/ [`collect`](Iterator::collect) method, or you can start with an empty queue","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_ordered.rs","byte_start":8408467,"byte_end":8408546,"line_start":87,"line_end":87,"column_start":1,"column_end":80}},{"value":"/ with the `FuturesOrdered::new` constructor.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_ordered.rs","byte_start":8408547,"byte_end":8408594,"line_start":88,"line_end":88,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_ordered.rs","byte_start":8408595,"byte_end":8408598,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ This type is only available when the `std` or `alloc` feature of this","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_ordered.rs","byte_start":8408599,"byte_end":8408672,"line_start":90,"line_end":90,"column_start":1,"column_end":74}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_ordered.rs","byte_start":8408673,"byte_end":8408730,"line_start":91,"line_end":91,"column_start":1,"column_end":58}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_ordered.rs","byte_start":8408731,"byte_end":8408779,"line_start":92,"line_end":92,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":10333},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_ordered.rs","byte_start":8409313,"byte_end":8409316,"line_start":107,"line_end":107,"column_start":12,"column_end":15},"name":"new","qualname":"<FuturesOrdered<Fut>>::new","value":"fn () -> FuturesOrdered<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new, empty `FuturesOrdered`","sig":null,"attributes":[{"value":"/ Constructs a new, empty `FuturesOrdered`","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_ordered.rs","byte_start":8409093,"byte_end":8409137,"line_start":103,"line_end":103,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_ordered.rs","byte_start":8409142,"byte_end":8409145,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ The returned `FuturesOrdered` does not contain any futures and, in this","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_ordered.rs","byte_start":8409150,"byte_end":8409225,"line_start":105,"line_end":105,"column_start":5,"column_end":80}},{"value":"/ state, `FuturesOrdered::poll_next` will return `Poll::Ready(None)`.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_ordered.rs","byte_start":8409230,"byte_end":8409301,"line_start":106,"line_end":106,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":10334},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_ordered.rs","byte_start":8409838,"byte_end":8409841,"line_start":121,"line_end":121,"column_start":12,"column_end":15},"name":"len","qualname":"<FuturesOrdered<Fut>>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of futures contained in the queue.","sig":null,"attributes":[{"value":"/ Returns the number of futures contained in the queue.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_ordered.rs","byte_start":8409565,"byte_end":8409622,"line_start":116,"line_end":116,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_ordered.rs","byte_start":8409627,"byte_end":8409630,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ This represents the total number of in-flight futures, both","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_ordered.rs","byte_start":8409635,"byte_end":8409698,"line_start":118,"line_end":118,"column_start":5,"column_end":68}},{"value":"/ those currently processing and those that have completed but","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_ordered.rs","byte_start":8409703,"byte_end":8409767,"line_start":119,"line_end":119,"column_start":5,"column_end":69}},{"value":"/ which are waiting for earlier futures to complete.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_ordered.rs","byte_start":8409772,"byte_end":8409826,"line_start":120,"line_end":120,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":10335},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_ordered.rs","byte_start":8409999,"byte_end":8410007,"line_start":126,"line_end":126,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<FuturesOrdered<Fut>>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the queue contains no futures\n","sig":null,"attributes":[{"value":"/ Returns `true` if the queue contains no futures","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_ordered.rs","byte_start":8409936,"byte_end":8409987,"line_start":125,"line_end":125,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":10336},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_ordered.rs","byte_start":8410431,"byte_end":8410435,"line_start":136,"line_end":136,"column_start":12,"column_end":16},"name":"push","qualname":"<FuturesOrdered<Fut>>::push","value":"fn (&mut self, future: Fut) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Push a future into the queue.","sig":null,"attributes":[{"value":"/ Push a future into the queue.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_ordered.rs","byte_start":8410112,"byte_end":8410145,"line_start":130,"line_end":130,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_ordered.rs","byte_start":8410150,"byte_end":8410153,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ This function submits the given future to the internal set for managing.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_ordered.rs","byte_start":8410158,"byte_end":8410234,"line_start":132,"line_end":132,"column_start":5,"column_end":81}},{"value":"/ This function will not call `poll` on the submitted future. The caller","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_ordered.rs","byte_start":8410239,"byte_end":8410313,"line_start":133,"line_end":133,"column_start":5,"column_end":79}},{"value":"/ must ensure that `FuturesOrdered::poll` is called in order to receive","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_ordered.rs","byte_start":8410318,"byte_end":8410391,"line_start":134,"line_end":134,"column_start":5,"column_end":78}},{"value":"/ task notifications.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_ordered.rs","byte_start":8410396,"byte_end":8410419,"line_start":135,"line_end":135,"column_start":5,"column_end":28}}]},{"kind":"Mod","id":{"krate":0,"index":10358},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_unordered\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"futures_unordered","qualname":"::stream::futures_unordered","value":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_unordered\\mod.rs","parent":null,"children":[{"krate":0,"index":10359},{"krate":0,"index":10360},{"krate":0,"index":10363},{"krate":0,"index":10366},{"krate":0,"index":10372},{"krate":0,"index":10373},{"krate":0,"index":10374},{"krate":0,"index":10377},{"krate":0,"index":10378},{"krate":0,"index":10379},{"krate":0,"index":10380},{"krate":0,"index":10381},{"krate":0,"index":10382},{"krate":0,"index":10388},{"krate":0,"index":10391},{"krate":0,"index":10394},{"krate":0,"index":10400},{"krate":0,"index":10438},{"krate":0,"index":10443},{"krate":0,"index":10484},{"krate":0,"index":10485},{"krate":0,"index":10521},{"krate":0,"index":10524},{"krate":0,"index":10525},{"krate":0,"index":10530},{"krate":0,"index":10532},{"krate":0,"index":10534},{"krate":0,"index":10536},{"krate":0,"index":10538},{"krate":0,"index":10540},{"krate":0,"index":10543},{"krate":0,"index":10558},{"krate":0,"index":10571},{"krate":0,"index":10574},{"krate":0,"index":10577},{"krate":0,"index":10582},{"krate":0,"index":10585}],"decl_id":null,"docs":" An unbounded set of futures.","sig":null,"attributes":[{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\mod.rs","byte_start":160623,"byte_end":160648,"line_start":89,"line_end":89,"column_start":5,"column_end":30}},{"value":"! An unbounded set of futures.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_unordered\\mod.rs","byte_start":8412686,"byte_end":8412718,"line_start":1,"line_end":1,"column_start":1,"column_end":33}},{"value":"!","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_unordered\\mod.rs","byte_start":8412719,"byte_end":8412722,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This module is only available when the `std` or `alloc` feature of this","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_unordered\\mod.rs","byte_start":8412723,"byte_end":8412798,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"! library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_unordered\\mod.rs","byte_start":8412799,"byte_end":8412856,"line_start":4,"line_end":4,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":10641},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_unordered\\iter.rs","byte_start":8439105,"byte_end":8439115,"line_start":9,"line_end":9,"column_start":12,"column_end":22},"name":"IterPinMut","qualname":"::stream::futures_unordered::iter::IterPinMut","value":"IterPinMut {  }","parent":null,"children":[{"krate":0,"index":10644},{"krate":0,"index":10645},{"krate":0,"index":10646}],"decl_id":null,"docs":" Mutable iterator over all futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Mutable iterator over all futures in the unordered set.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_unordered\\iter.rs","byte_start":8439034,"byte_end":8439093,"line_start":8,"line_end":8,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":10651},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_unordered\\iter.rs","byte_start":8439351,"byte_end":8439358,"line_start":17,"line_end":17,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::stream::futures_unordered::iter::IterMut","value":"","parent":null,"children":[],"decl_id":null,"docs":" Mutable iterator over all futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Mutable iterator over all futures in the unordered set.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_unordered\\iter.rs","byte_start":8439280,"byte_end":8439339,"line_start":16,"line_end":16,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":10660},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_unordered\\iter.rs","byte_start":8439500,"byte_end":8439510,"line_start":21,"line_end":21,"column_start":12,"column_end":22},"name":"IterPinRef","qualname":"::stream::futures_unordered::iter::IterPinRef","value":"IterPinRef {  }","parent":null,"children":[{"krate":0,"index":10663},{"krate":0,"index":10664},{"krate":0,"index":10665},{"krate":0,"index":10666}],"decl_id":null,"docs":" Immutable iterator over all futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Immutable iterator over all futures in the unordered set.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_unordered\\iter.rs","byte_start":8439427,"byte_end":8439488,"line_start":20,"line_end":20,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":10671},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_unordered\\iter.rs","byte_start":8439797,"byte_end":8439801,"line_start":30,"line_end":30,"column_start":12,"column_end":16},"name":"Iter","qualname":"::stream::futures_unordered::iter::Iter","value":"","parent":null,"children":[],"decl_id":null,"docs":" Immutable iterator over all the futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Immutable iterator over all the futures in the unordered set.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_unordered\\iter.rs","byte_start":8439720,"byte_end":8439785,"line_start":29,"line_end":29,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":10525},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_unordered\\mod.rs","byte_start":8415570,"byte_end":8415586,"line_start":71,"line_end":71,"column_start":12,"column_end":28},"name":"FuturesUnordered","qualname":"::stream::futures_unordered::FuturesUnordered","value":"FuturesUnordered {  }","parent":null,"children":[{"krate":0,"index":10527},{"krate":0,"index":10528},{"krate":0,"index":10529}],"decl_id":null,"docs":" A set of futures which may complete in any order.","sig":null,"attributes":[{"value":"/ A set of futures which may complete in any order.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_unordered\\mod.rs","byte_start":8414475,"byte_end":8414528,"line_start":50,"line_end":50,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_unordered\\mod.rs","byte_start":8414529,"byte_end":8414532,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ This structure is optimized to manage a large number of futures.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_unordered\\mod.rs","byte_start":8414533,"byte_end":8414601,"line_start":52,"line_end":52,"column_start":1,"column_end":69}},{"value":"/ Futures managed by [`FuturesUnordered`] will only be polled when they","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_unordered\\mod.rs","byte_start":8414602,"byte_end":8414675,"line_start":53,"line_end":53,"column_start":1,"column_end":74}},{"value":"/ generate wake-up notifications. This reduces the required amount of work","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_unordered\\mod.rs","byte_start":8414676,"byte_end":8414752,"line_start":54,"line_end":54,"column_start":1,"column_end":77}},{"value":"/ needed to poll large numbers of futures.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_unordered\\mod.rs","byte_start":8414753,"byte_end":8414797,"line_start":55,"line_end":55,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_unordered\\mod.rs","byte_start":8414798,"byte_end":8414801,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ [`FuturesUnordered`] can be filled by [`collect`](Iterator::collect)ing an","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_unordered\\mod.rs","byte_start":8414802,"byte_end":8414880,"line_start":57,"line_end":57,"column_start":1,"column_end":79}},{"value":"/ iterator of futures into a [`FuturesUnordered`], or by","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_unordered\\mod.rs","byte_start":8414881,"byte_end":8414939,"line_start":58,"line_end":58,"column_start":1,"column_end":59}},{"value":"/ [`push`](FuturesUnordered::push)ing futures onto an existing","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_unordered\\mod.rs","byte_start":8414940,"byte_end":8415004,"line_start":59,"line_end":59,"column_start":1,"column_end":65}},{"value":"/ [`FuturesUnordered`]. When new futures are added,","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_unordered\\mod.rs","byte_start":8415005,"byte_end":8415058,"line_start":60,"line_end":60,"column_start":1,"column_end":54}},{"value":"/ [`poll_next`](Stream::poll_next) must be called in order to begin receiving","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_unordered\\mod.rs","byte_start":8415059,"byte_end":8415138,"line_start":61,"line_end":61,"column_start":1,"column_end":80}},{"value":"/ wake-ups for new futures.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_unordered\\mod.rs","byte_start":8415139,"byte_end":8415168,"line_start":62,"line_end":62,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_unordered\\mod.rs","byte_start":8415169,"byte_end":8415172,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ Note that you can create a ready-made [`FuturesUnordered`] via the","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_unordered\\mod.rs","byte_start":8415173,"byte_end":8415243,"line_start":64,"line_end":64,"column_start":1,"column_end":71}},{"value":"/ [`collect`](Iterator::collect) method, or you can start with an empty set","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_unordered\\mod.rs","byte_start":8415244,"byte_end":8415321,"line_start":65,"line_end":65,"column_start":1,"column_end":78}},{"value":"/ with the [`FuturesUnordered::new`] constructor.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_unordered\\mod.rs","byte_start":8415322,"byte_end":8415373,"line_start":66,"line_end":66,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_unordered\\mod.rs","byte_start":8415374,"byte_end":8415377,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ This type is only available when the `std` or `alloc` feature of this","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_unordered\\mod.rs","byte_start":8415378,"byte_end":8415451,"line_start":68,"line_end":68,"column_start":1,"column_end":74}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_unordered\\mod.rs","byte_start":8415452,"byte_end":8415509,"line_start":69,"line_end":69,"column_start":1,"column_end":58}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_unordered\\mod.rs","byte_start":8415510,"byte_end":8415558,"line_start":70,"line_end":70,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":10545},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_unordered\\mod.rs","byte_start":8418256,"byte_end":8418259,"line_start":136,"line_end":136,"column_start":12,"column_end":15},"name":"new","qualname":"<FuturesUnordered<Fut>>::new","value":"fn () -> FuturesUnordered<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new, empty [`FuturesUnordered`].","sig":null,"attributes":[{"value":"/ Constructs a new, empty [`FuturesUnordered`].","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_unordered\\mod.rs","byte_start":8417985,"byte_end":8418034,"line_start":131,"line_end":131,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_unordered\\mod.rs","byte_start":8418039,"byte_end":8418042,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ The returned [`FuturesUnordered`] does not contain any futures.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_unordered\\mod.rs","byte_start":8418047,"byte_end":8418114,"line_start":133,"line_end":133,"column_start":5,"column_end":72}},{"value":"/ In this state, [`FuturesUnordered::poll_next`](Stream::poll_next) will","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_unordered\\mod.rs","byte_start":8418119,"byte_end":8418193,"line_start":134,"line_end":134,"column_start":5,"column_end":79}},{"value":"/ return [`Poll::Ready(None)`](Poll::Ready).","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_unordered\\mod.rs","byte_start":8418198,"byte_end":8418244,"line_start":135,"line_end":135,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":10546},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_unordered\\mod.rs","byte_start":8419283,"byte_end":8419286,"line_start":164,"line_end":164,"column_start":12,"column_end":15},"name":"len","qualname":"<FuturesUnordered<Fut>>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of futures contained in the set.","sig":null,"attributes":[{"value":"/ Returns the number of futures contained in the set.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_unordered\\mod.rs","byte_start":8419145,"byte_end":8419200,"line_start":161,"line_end":161,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_unordered\\mod.rs","byte_start":8419205,"byte_end":8419208,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ This represents the total number of in-flight futures.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_unordered\\mod.rs","byte_start":8419213,"byte_end":8419271,"line_start":163,"line_end":163,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":10547},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_unordered\\mod.rs","byte_start":8419450,"byte_end":8419458,"line_start":170,"line_end":170,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<FuturesUnordered<Fut>>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set contains no futures.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the set contains no futures.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_unordered\\mod.rs","byte_start":8419388,"byte_end":8419438,"line_start":169,"line_end":169,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":10548},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_unordered\\mod.rs","byte_start":8420041,"byte_end":8420045,"line_start":182,"line_end":182,"column_start":12,"column_end":16},"name":"push","qualname":"<FuturesUnordered<Fut>>::push","value":"fn (&self, future: Fut) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Push a future into the set.","sig":null,"attributes":[{"value":"/ Push a future into the set.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_unordered\\mod.rs","byte_start":8419671,"byte_end":8419702,"line_start":176,"line_end":176,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_unordered\\mod.rs","byte_start":8419707,"byte_end":8419710,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ This method adds the given future to the set. This method will not","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_unordered\\mod.rs","byte_start":8419715,"byte_end":8419785,"line_start":178,"line_end":178,"column_start":5,"column_end":75}},{"value":"/ call [`poll`](core::future::Future::poll) on the submitted future. The caller must","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_unordered\\mod.rs","byte_start":8419790,"byte_end":8419876,"line_start":179,"line_end":179,"column_start":5,"column_end":91}},{"value":"/ ensure that [`FuturesUnordered::poll_next`](Stream::poll_next) is called","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_unordered\\mod.rs","byte_start":8419881,"byte_end":8419957,"line_start":180,"line_end":180,"column_start":5,"column_end":81}},{"value":"/ in order to receive wake-up notifications for the given future.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_unordered\\mod.rs","byte_start":8419962,"byte_end":8420029,"line_start":181,"line_end":181,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":10549},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_unordered\\mod.rs","byte_start":8421320,"byte_end":8421324,"line_start":210,"line_end":210,"column_start":12,"column_end":16},"name":"iter","qualname":"<FuturesUnordered<Fut>>::iter","value":"fn (&self) -> Iter<'_, Fut>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows inspecting each future in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows inspecting each future in the set.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_unordered\\mod.rs","byte_start":8421238,"byte_end":8421308,"line_start":209,"line_end":209,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":10551},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_unordered\\mod.rs","byte_start":8421868,"byte_end":8421876,"line_start":227,"line_end":227,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<FuturesUnordered<Fut>>::iter_mut","value":"fn (&mut self) -> IterMut<'_, Fut>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows modifying each future in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows modifying each future in the set.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_unordered\\mod.rs","byte_start":8421787,"byte_end":8421856,"line_start":226,"line_end":226,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":10552},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_unordered\\mod.rs","byte_start":8422066,"byte_end":8422078,"line_start":232,"line_end":232,"column_start":12,"column_end":24},"name":"iter_pin_mut","qualname":"<FuturesUnordered<Fut>>::iter_pin_mut","value":"fn (mut self: Pin<&mut Self>) -> IterPinMut<'_, Fut>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows modifying each future in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows modifying each future in the set.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_unordered\\mod.rs","byte_start":8421985,"byte_end":8422054,"line_start":231,"line_end":231,"column_start":5,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":10606},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\select_all.rs","byte_start":8451093,"byte_end":8451102,"line_start":25,"line_end":25,"column_start":12,"column_end":21},"name":"SelectAll","qualname":"::stream::select_all::SelectAll","value":"SelectAll {  }","parent":null,"children":[{"krate":0,"index":10608}],"decl_id":null,"docs":" An unbounded set of streams","sig":null,"attributes":[{"value":"/ An unbounded set of streams","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\select_all.rs","byte_start":8450469,"byte_end":8450500,"line_start":12,"line_end":12,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\select_all.rs","byte_start":8450501,"byte_end":8450504,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ This \"combinator\" provides the ability to maintain a set of streams","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\select_all.rs","byte_start":8450505,"byte_end":8450576,"line_start":14,"line_end":14,"column_start":1,"column_end":72}},{"value":"/ and drive them all to completion.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\select_all.rs","byte_start":8450577,"byte_end":8450614,"line_start":15,"line_end":15,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\select_all.rs","byte_start":8450615,"byte_end":8450618,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Streams are pushed into this set and their realized values are","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\select_all.rs","byte_start":8450619,"byte_end":8450685,"line_start":17,"line_end":17,"column_start":1,"column_end":67}},{"value":"/ yielded as they become ready. Streams will only be polled when they","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\select_all.rs","byte_start":8450686,"byte_end":8450757,"line_start":18,"line_end":18,"column_start":1,"column_end":72}},{"value":"/ generate notifications. This allows to coordinate a large number of streams.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\select_all.rs","byte_start":8450758,"byte_end":8450838,"line_start":19,"line_end":19,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\select_all.rs","byte_start":8450839,"byte_end":8450842,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Note that you can create a ready-made `SelectAll` via the","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\select_all.rs","byte_start":8450843,"byte_end":8450904,"line_start":21,"line_end":21,"column_start":1,"column_end":62}},{"value":"/ `select_all` function in the `stream` module, or you can start with an","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\select_all.rs","byte_start":8450905,"byte_end":8450979,"line_start":22,"line_end":22,"column_start":1,"column_end":75}},{"value":"/ empty set with the `SelectAll::new` constructor.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\select_all.rs","byte_start":8450980,"byte_end":8451032,"line_start":23,"line_end":23,"column_start":1,"column_end":53}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\select_all.rs","byte_start":8451033,"byte_end":8451081,"line_start":24,"line_end":24,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":10614},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\select_all.rs","byte_start":8451559,"byte_end":8451562,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"new","qualname":"<SelectAll<St>>::new","value":"fn () -> SelectAll<St>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new, empty `SelectAll`","sig":null,"attributes":[{"value":"/ Constructs a new, empty `SelectAll`","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\select_all.rs","byte_start":8451359,"byte_end":8451398,"line_start":36,"line_end":36,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\select_all.rs","byte_start":8451403,"byte_end":8451406,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ The returned `SelectAll` does not contain any streams and, in this","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\select_all.rs","byte_start":8451411,"byte_end":8451481,"line_start":38,"line_end":38,"column_start":5,"column_end":75}},{"value":"/ state, `SelectAll::poll` will return `Poll::Ready(None)`.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\select_all.rs","byte_start":8451486,"byte_end":8451547,"line_start":39,"line_end":39,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":10615},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\select_all.rs","byte_start":8451786,"byte_end":8451789,"line_start":47,"line_end":47,"column_start":12,"column_end":15},"name":"len","qualname":"<SelectAll<St>>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of streams contained in the set.","sig":null,"attributes":[{"value":"/ Returns the number of streams contained in the set.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\select_all.rs","byte_start":8451648,"byte_end":8451703,"line_start":44,"line_end":44,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\select_all.rs","byte_start":8451708,"byte_end":8451711,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ This represents the total number of in-flight streams.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\select_all.rs","byte_start":8451716,"byte_end":8451774,"line_start":46,"line_end":46,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":10616},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\select_all.rs","byte_start":8451905,"byte_end":8451913,"line_start":52,"line_end":52,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<SelectAll<St>>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set contains no streams\n","sig":null,"attributes":[{"value":"/ Returns `true` if the set contains no streams","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\select_all.rs","byte_start":8451844,"byte_end":8451893,"line_start":51,"line_end":51,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":10617},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\select_all.rs","byte_start":8452275,"byte_end":8452279,"line_start":62,"line_end":62,"column_start":12,"column_end":16},"name":"push","qualname":"<SelectAll<St>>::push","value":"fn (&mut self, stream: St) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Push a stream into the set.","sig":null,"attributes":[{"value":"/ Push a stream into the set.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\select_all.rs","byte_start":8451972,"byte_end":8452003,"line_start":56,"line_end":56,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\select_all.rs","byte_start":8452008,"byte_end":8452011,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ This function submits the given stream to the set for managing. This","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\select_all.rs","byte_start":8452016,"byte_end":8452088,"line_start":58,"line_end":58,"column_start":5,"column_end":77}},{"value":"/ function will not call `poll` on the submitted stream. The caller must","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\select_all.rs","byte_start":8452093,"byte_end":8452167,"line_start":59,"line_end":59,"column_start":5,"column_end":79}},{"value":"/ ensure that `SelectAll::poll` is called in order to receive task","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\select_all.rs","byte_start":8452172,"byte_end":8452240,"line_start":60,"line_end":60,"column_start":5,"column_end":73}},{"value":"/ notifications.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\select_all.rs","byte_start":8452245,"byte_end":8452263,"line_start":61,"line_end":61,"column_start":5,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":10628},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\select_all.rs","byte_start":8454055,"byte_end":8454065,"line_start":116,"line_end":116,"column_start":8,"column_end":18},"name":"select_all","qualname":"::stream::select_all::select_all","value":"fn <I> (streams: I) -> SelectAll<I::Item>","parent":null,"children":[],"decl_id":null,"docs":" Convert a list of streams into a `Stream` of results from the streams.","sig":null,"attributes":[{"value":"/ Convert a list of streams into a `Stream` of results from the streams.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\select_all.rs","byte_start":8453434,"byte_end":8453508,"line_start":104,"line_end":104,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\select_all.rs","byte_start":8453509,"byte_end":8453512,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ This essentially takes a list of streams (e.g. a vector, an iterator, etc.)","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\select_all.rs","byte_start":8453513,"byte_end":8453592,"line_start":106,"line_end":106,"column_start":1,"column_end":80}},{"value":"/ and bundles them together into a single stream.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\select_all.rs","byte_start":8453593,"byte_end":8453644,"line_start":107,"line_end":107,"column_start":1,"column_end":52}},{"value":"/ The stream will yield items as they become available on the underlying","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\select_all.rs","byte_start":8453645,"byte_end":8453719,"line_start":108,"line_end":108,"column_start":1,"column_end":75}},{"value":"/ streams internally, in the order they become available.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\select_all.rs","byte_start":8453720,"byte_end":8453779,"line_start":109,"line_end":109,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\select_all.rs","byte_start":8453780,"byte_end":8453783,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ Note that the returned set can also be used to dynamically push more","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\select_all.rs","byte_start":8453784,"byte_end":8453856,"line_start":111,"line_end":111,"column_start":1,"column_end":73}},{"value":"/ futures into the set as they become available.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\select_all.rs","byte_start":8453857,"byte_end":8453907,"line_start":112,"line_end":112,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\select_all.rs","byte_start":8453908,"byte_end":8453911,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\select_all.rs","byte_start":8453912,"byte_end":8453989,"line_start":114,"line_end":114,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\select_all.rs","byte_start":8453990,"byte_end":8454047,"line_start":115,"line_end":115,"column_start":1,"column_end":58}}]},{"kind":"Mod","id":{"krate":0,"index":2868},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sink","qualname":"::sink","value":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","parent":null,"children":[{"krate":0,"index":2869},{"krate":0,"index":2870},{"krate":0,"index":2871},{"krate":0,"index":2874},{"krate":0,"index":2877},{"krate":0,"index":2878},{"krate":0,"index":2879},{"krate":0,"index":2900},{"krate":0,"index":2901},{"krate":0,"index":2920},{"krate":0,"index":2923},{"krate":0,"index":2952},{"krate":0,"index":2953},{"krate":0,"index":2974},{"krate":0,"index":2975},{"krate":0,"index":3006},{"krate":0,"index":3007},{"krate":0,"index":3045},{"krate":0,"index":3046},{"krate":0,"index":3066},{"krate":0,"index":3067},{"krate":0,"index":3111},{"krate":0,"index":3112},{"krate":0,"index":3165},{"krate":0,"index":3166},{"krate":0,"index":3218},{"krate":0,"index":3219},{"krate":0,"index":3254},{"krate":0,"index":3255},{"krate":0,"index":3258}],"decl_id":null,"docs":" Sinks","sig":null,"attributes":[{"value":"cfg(feature = \"sink\")","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":11877,"byte_end":11901,"line_start":310,"line_end":310,"column_start":1,"column_end":25}},{"value":"! Sinks","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":355228,"byte_end":355237,"line_start":1,"line_end":1,"column_start":1,"column_end":10}},{"value":"!","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":355238,"byte_end":355241,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This module contains a number of functions for working with `Sink`s,","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":355242,"byte_end":355314,"line_start":3,"line_end":3,"column_start":1,"column_end":73}},{"value":"! including the `SinkExt` trait which adds methods to `Sink` types.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":355315,"byte_end":355384,"line_start":4,"line_end":4,"column_start":1,"column_end":70}},{"value":"!","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":355385,"byte_end":355388,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"! This module is only available when the `sink` feature of this","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":355389,"byte_end":355454,"line_start":6,"line_end":6,"column_start":1,"column_end":66}},{"value":"! library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":355455,"byte_end":355512,"line_start":7,"line_end":7,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":10680},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\close.rs","byte_start":365165,"byte_end":365170,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Close","qualname":"::sink::close::Close","value":"Close {  }","parent":null,"children":[{"krate":0,"index":10684},{"krate":0,"index":10685}],"decl_id":null,"docs":" Future for the [`close`](super::SinkExt::close) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`close`](super::SinkExt::close) method.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\close.rs","byte_start":365009,"byte_end":365068,"line_start":7,"line_end":7,"column_start":1,"column_end":60}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\close.rs","byte_start":365086,"byte_end":365153,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":10691},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\drain.rs","byte_start":366195,"byte_end":366200,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Drain","qualname":"::sink::drain::Drain","value":"Drain {  }","parent":null,"children":[{"krate":0,"index":10693}],"decl_id":null,"docs":" Sink for the [`drain`] function.\n","sig":null,"attributes":[{"value":"/ Sink for the [`drain`] function.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\drain.rs","byte_start":366083,"byte_end":366119,"line_start":7,"line_end":7,"column_start":1,"column_end":37}},{"value":"must_use = \"sinks do nothing unless polled\"","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\drain.rs","byte_start":366137,"byte_end":366183,"line_start":9,"line_end":9,"column_start":1,"column_end":47}}]},{"kind":"Function","id":{"krate":0,"index":2909},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\drain.rs","byte_start":366599,"byte_end":366604,"line_start":28,"line_end":28,"column_start":8,"column_end":13},"name":"drain","qualname":"::sink::drain::drain","value":"fn <T> () -> Drain<T>","parent":null,"children":[],"decl_id":null,"docs":" Create a sink that will just discard all items given to it.","sig":null,"attributes":[{"value":"/ Create a sink that will just discard all items given to it.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\drain.rs","byte_start":366237,"byte_end":366300,"line_start":14,"line_end":14,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\drain.rs","byte_start":366301,"byte_end":366304,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Similar to [`io::Sink`](::std::io::Sink).","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\drain.rs","byte_start":366305,"byte_end":366350,"line_start":16,"line_end":16,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\drain.rs","byte_start":366351,"byte_end":366354,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\drain.rs","byte_start":366355,"byte_end":366369,"line_start":18,"line_end":18,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\drain.rs","byte_start":366370,"byte_end":366373,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\drain.rs","byte_start":366374,"byte_end":366381,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\drain.rs","byte_start":366382,"byte_end":366423,"line_start":21,"line_end":21,"column_start":1,"column_end":42}},{"value":"/ use futures::sink::{self, SinkExt};","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\drain.rs","byte_start":366424,"byte_end":366463,"line_start":22,"line_end":22,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\drain.rs","byte_start":366464,"byte_end":366467,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ let mut drain = sink::drain();","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\drain.rs","byte_start":366468,"byte_end":366502,"line_start":24,"line_end":24,"column_start":1,"column_end":35}},{"value":"/ drain.send(5).await?;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\drain.rs","byte_start":366503,"byte_end":366528,"line_start":25,"line_end":25,"column_start":1,"column_end":26}},{"value":"/ # Ok::<(), futures::never::Never>(()) }).unwrap();","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\drain.rs","byte_start":366529,"byte_end":366583,"line_start":26,"line_end":26,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\drain.rs","byte_start":366584,"byte_end":366591,"line_start":27,"line_end":27,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10697},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\fanout.rs","byte_start":367840,"byte_end":367846,"line_start":13,"line_end":13,"column_start":12,"column_end":18},"name":"Fanout","qualname":"::sink::fanout::Fanout","value":"Fanout {  }","parent":null,"children":[{"krate":0,"index":10700},{"krate":0,"index":10701}],"decl_id":null,"docs":" Sink that clones incoming items and forwards them to two sinks at the same time.","sig":null,"attributes":[{"value":"must_use = \"sinks do nothing unless polled\"","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\fanout.rs","byte_start":367782,"byte_end":367828,"line_start":12,"line_end":12,"column_start":1,"column_end":47}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\fanout.rs","byte_start":367767,"byte_end":367781,"line_start":11,"line_end":11,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":10722},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\fanout.rs","byte_start":367840,"byte_end":367846,"line_start":13,"line_end":13,"column_start":12,"column_end":18},"name":"__Fanout","qualname":"::sink::fanout::_::__Fanout","value":"__Fanout {  }","parent":null,"children":[{"krate":0,"index":10726},{"krate":0,"index":10727},{"krate":0,"index":10728}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2940},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\fanout.rs","byte_start":368118,"byte_end":368125,"line_start":26,"line_end":26,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Fanout<Si1, Si2>>::get_ref","value":"fn (&self) -> (&Si1, &Si2)","parent":null,"children":[],"decl_id":null,"docs":" Get a shared reference to the inner sinks.\n","sig":null,"attributes":[{"value":"/ Get a shared reference to the inner sinks.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\fanout.rs","byte_start":368060,"byte_end":368106,"line_start":25,"line_end":25,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2941},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\fanout.rs","byte_start":368256,"byte_end":368263,"line_start":31,"line_end":31,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Fanout<Si1, Si2>>::get_mut","value":"fn (&mut self) -> (&mut Si1, &mut Si2)","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the inner sinks.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the inner sinks.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\fanout.rs","byte_start":368197,"byte_end":368244,"line_start":30,"line_end":30,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":10749},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\fanout.rs","byte_start":368436,"byte_end":368447,"line_start":37,"line_end":37,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Fanout<Si1, Si2>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> (Pin<&mut Si1>, Pin<&mut Si2>)","parent":null,"children":[],"decl_id":null,"docs":" Get a pinned mutable reference to the inner sinks.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2942},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\fanout.rs","byte_start":368847,"byte_end":368857,"line_start":47,"line_end":47,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Fanout<Si1, Si2>>::into_inner","value":"fn (self) -> (Si1, Si2)","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying sinks.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying sinks.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\fanout.rs","byte_start":368613,"byte_end":368674,"line_start":43,"line_end":43,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\fanout.rs","byte_start":368679,"byte_end":368682,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator,","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\fanout.rs","byte_start":368687,"byte_end":368756,"line_start":45,"line_end":45,"column_start":5,"column_end":74}},{"value":"/ so care should be taken to avoid losing resources when this is called.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\fanout.rs","byte_start":368761,"byte_end":368835,"line_start":46,"line_end":46,"column_start":5,"column_end":79}}]},{"kind":"Struct","id":{"krate":0,"index":10754},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\flush.rs","byte_start":371303,"byte_end":371308,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Flush","qualname":"::sink::flush::Flush","value":"Flush {  }","parent":null,"children":[{"krate":0,"index":10758},{"krate":0,"index":10759}],"decl_id":null,"docs":" Future for the [`flush`](super::SinkExt::flush) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`flush`](super::SinkExt::flush) method.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\flush.rs","byte_start":371147,"byte_end":371206,"line_start":7,"line_end":7,"column_start":1,"column_end":60}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\flush.rs","byte_start":371224,"byte_end":371291,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":10765},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\err_into.rs","byte_start":372585,"byte_end":372596,"line_start":10,"line_end":10,"column_start":12,"column_end":23},"name":"SinkErrInto","qualname":"::sink::err_into::SinkErrInto","value":"SinkErrInto {  }","parent":null,"children":[{"krate":0,"index":10769}],"decl_id":null,"docs":" Sink for the [`sink_err_into`](super::SinkExt::sink_err_into) method.\n","sig":null,"attributes":[{"value":"must_use = \"sinks do nothing unless polled\"","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\err_into.rs","byte_start":372527,"byte_end":372573,"line_start":9,"line_end":9,"column_start":1,"column_end":47}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\err_into.rs","byte_start":372495,"byte_end":372509,"line_start":7,"line_end":7,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":10791},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\err_into.rs","byte_start":372585,"byte_end":372596,"line_start":10,"line_end":10,"column_start":12,"column_end":23},"name":"__SinkErrInto","qualname":"::sink::err_into::_::__SinkErrInto","value":"__SinkErrInto {  }","parent":null,"children":[{"krate":0,"index":10796},{"krate":0,"index":10797}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10838},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\map_err.rs","byte_start":373913,"byte_end":373923,"line_start":11,"line_end":11,"column_start":12,"column_end":22},"name":"SinkMapErr","qualname":"::sink::map_err::SinkMapErr","value":"SinkMapErr {  }","parent":null,"children":[{"krate":0,"index":10842},{"krate":0,"index":10841}],"decl_id":null,"docs":" Sink for the [`sink_map_err`](super::SinkExt::sink_map_err) method.\n","sig":null,"attributes":[{"value":"must_use = \"sinks do nothing unless polled\"","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\map_err.rs","byte_start":373855,"byte_end":373901,"line_start":10,"line_end":10,"column_start":1,"column_end":47}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\map_err.rs","byte_start":373816,"byte_end":373830,"line_start":8,"line_end":8,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":10863},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\map_err.rs","byte_start":373913,"byte_end":373923,"line_start":11,"line_end":11,"column_start":12,"column_end":22},"name":"__SinkMapErr","qualname":"::sink::map_err::_::__SinkMapErr","value":"__SinkMapErr {  }","parent":null,"children":[{"krate":0,"index":10867},{"krate":0,"index":10868}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10903},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\send.rs","byte_start":375877,"byte_end":375881,"line_start":9,"line_end":9,"column_start":12,"column_end":16},"name":"Send","qualname":"::sink::send::Send","value":"Send {  }","parent":null,"children":[{"krate":0,"index":10907},{"krate":0,"index":10908}],"decl_id":null,"docs":" Future for the [`send`](super::SinkExt::send) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`send`](super::SinkExt::send) method.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\send.rs","byte_start":375723,"byte_end":375780,"line_start":6,"line_end":6,"column_start":1,"column_end":58}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\send.rs","byte_start":375798,"byte_end":375865,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":3082},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\send_all.rs","byte_start":377568,"byte_end":377575,"line_start":12,"line_end":12,"column_start":12,"column_end":19},"name":"SendAll","qualname":"::sink::send_all::SendAll","value":"SendAll {  }","parent":null,"children":[{"krate":0,"index":3086},{"krate":0,"index":3087},{"krate":0,"index":3088}],"decl_id":null,"docs":" Future for the [`send_all`](super::SinkExt::send_all) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`send_all`](super::SinkExt::send_all) method.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\send_all.rs","byte_start":377332,"byte_end":377397,"line_start":9,"line_end":9,"column_start":1,"column_end":66}},{"value":"allow(explicit_outlives_requirements)","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\send_all.rs","byte_start":377398,"byte_end":377438,"line_start":10,"line_end":10,"column_start":1,"column_end":41}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\send_all.rs","byte_start":377489,"byte_end":377556,"line_start":11,"line_end":11,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":10914},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\with.rs","byte_start":380702,"byte_end":380706,"line_start":13,"line_end":13,"column_start":12,"column_end":16},"name":"With","qualname":"::sink::with::With","value":"With {  }","parent":null,"children":[{"krate":0,"index":10922},{"krate":0,"index":10920},{"krate":0,"index":10923},{"krate":0,"index":10921}],"decl_id":null,"docs":" Sink for the [`with`](super::SinkExt::with) method.\n","sig":null,"attributes":[{"value":"must_use = \"sinks do nothing unless polled\"","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\with.rs","byte_start":380644,"byte_end":380690,"line_start":12,"line_end":12,"column_start":1,"column_end":47}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\with.rs","byte_start":380629,"byte_end":380643,"line_start":11,"line_end":11,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":10957},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\with.rs","byte_start":380702,"byte_end":380706,"line_start":13,"line_end":13,"column_start":12,"column_end":16},"name":"__With","qualname":"::sink::with::_::__With","value":"__With {  }","parent":null,"children":[{"krate":0,"index":10964},{"krate":0,"index":10965},{"krate":0,"index":10966}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11010},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\with_flat_map.rs","byte_start":384210,"byte_end":384221,"line_start":12,"line_end":12,"column_start":12,"column_end":23},"name":"WithFlatMap","qualname":"::sink::with_flat_map::WithFlatMap","value":"WithFlatMap {  }","parent":null,"children":[{"krate":0,"index":11019},{"krate":0,"index":11016},{"krate":0,"index":11020},{"krate":0,"index":11017},{"krate":0,"index":11018}],"decl_id":null,"docs":" Sink for the [`with_flat_map`](super::SinkExt::with_flat_map) method.\n","sig":null,"attributes":[{"value":"must_use = \"sinks do nothing unless polled\"","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\with_flat_map.rs","byte_start":384152,"byte_end":384198,"line_start":11,"line_end":11,"column_start":1,"column_end":47}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\with_flat_map.rs","byte_start":384137,"byte_end":384151,"line_start":10,"line_end":10,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":11056},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\with_flat_map.rs","byte_start":384210,"byte_end":384221,"line_start":12,"line_end":12,"column_start":12,"column_end":23},"name":"__WithFlatMap","qualname":"::sink::with_flat_map::_::__WithFlatMap","value":"__WithFlatMap {  }","parent":null,"children":[{"krate":0,"index":11063},{"krate":0,"index":11064},{"krate":0,"index":11065}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11109},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\buffer.rs","byte_start":388149,"byte_end":388155,"line_start":12,"line_end":12,"column_start":12,"column_end":18},"name":"Buffer","qualname":"::sink::buffer::Buffer","value":"Buffer {  }","parent":null,"children":[{"krate":0,"index":11114},{"krate":0,"index":11112},{"krate":0,"index":11113}],"decl_id":null,"docs":" Sink for the [`buffer`](super::SinkExt::buffer) method.\n","sig":null,"attributes":[{"value":"must_use = \"sinks do nothing unless polled\"","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\buffer.rs","byte_start":388091,"byte_end":388137,"line_start":11,"line_end":11,"column_start":1,"column_end":47}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\buffer.rs","byte_start":388059,"byte_end":388073,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":11137},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\buffer.rs","byte_start":388149,"byte_end":388155,"line_start":12,"line_end":12,"column_start":12,"column_end":18},"name":"__Buffer","qualname":"::sink::buffer::_::__Buffer","value":"__Buffer {  }","parent":null,"children":[{"krate":0,"index":11141},{"krate":0,"index":11142}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3258},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":356499,"byte_end":356506,"line_start":59,"line_end":59,"column_start":11,"column_end":18},"name":"SinkExt","qualname":"::sink::SinkExt","value":"SinkExt<Item>: Sink<Item>","parent":null,"children":[{"krate":0,"index":3260},{"krate":0,"index":3265},{"krate":0,"index":3269},{"krate":0,"index":3272},{"krate":0,"index":3274},{"krate":0,"index":3275},{"krate":0,"index":3276},{"krate":0,"index":3278},{"krate":0,"index":3279},{"krate":0,"index":3280},{"krate":0,"index":3283},{"krate":0,"index":3285},{"krate":0,"index":3287},{"krate":0,"index":3288},{"krate":0,"index":3289},{"krate":0,"index":3290}],"decl_id":null,"docs":" An extension trait for `Sink`s that provides a variety of convenient\n combinator functions.\n","sig":null,"attributes":[{"value":"/ An extension trait for `Sink`s that provides a variety of convenient","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":356390,"byte_end":356462,"line_start":57,"line_end":57,"column_start":1,"column_end":73}},{"value":"/ combinator functions.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":356463,"byte_end":356488,"line_start":58,"line_end":58,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":3260},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":357098,"byte_end":357102,"line_start":71,"line_end":71,"column_start":8,"column_end":12},"name":"with","qualname":"::sink::SinkExt::with","value":"fn <U, Fut, F, E> (self, f: F) -> With<Self, Item, U, Fut, F>","parent":{"krate":0,"index":3258},"children":[],"decl_id":null,"docs":" Composes a function *in front of* the sink.","sig":null,"attributes":[{"value":"/ Composes a function *in front of* the sink.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":356531,"byte_end":356578,"line_start":60,"line_end":60,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":356583,"byte_end":356586,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ This adapter produces a new sink that passes each value through the","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":356591,"byte_end":356662,"line_start":62,"line_end":62,"column_start":5,"column_end":76}},{"value":"/ given function `f` before sending it to `self`.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":356667,"byte_end":356718,"line_start":63,"line_end":63,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":356723,"byte_end":356726,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ To process each value, `f` produces a *future*, which is then polled to","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":356731,"byte_end":356806,"line_start":65,"line_end":65,"column_start":5,"column_end":80}},{"value":"/ completion before passing its result down to the underlying sink. If the","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":356811,"byte_end":356887,"line_start":66,"line_end":66,"column_start":5,"column_end":81}},{"value":"/ future produces an error, that error is returned by the new sink.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":356892,"byte_end":356961,"line_start":67,"line_end":67,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":356966,"byte_end":356969,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the given sink, returning a wrapped","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":356974,"byte_end":357046,"line_start":69,"line_end":69,"column_start":5,"column_end":77}},{"value":"/ version, much like `Iterator::map`.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":357051,"byte_end":357090,"line_start":70,"line_end":70,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":3265},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":358447,"byte_end":358460,"line_start":112,"line_end":112,"column_start":8,"column_end":21},"name":"with_flat_map","qualname":"::sink::SinkExt::with_flat_map","value":"fn <U, St, F> (self, f: F) -> WithFlatMap<Self, Item, U, St, F>","parent":{"krate":0,"index":3258},"children":[],"decl_id":null,"docs":" Composes a function *in front of* the sink.","sig":null,"attributes":[{"value":"/ Composes a function *in front of* the sink.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":357353,"byte_end":357400,"line_start":80,"line_end":80,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":357405,"byte_end":357408,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ This adapter produces a new sink that passes each value through the","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":357413,"byte_end":357484,"line_start":82,"line_end":82,"column_start":5,"column_end":76}},{"value":"/ given function `f` before sending it to `self`.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":357489,"byte_end":357540,"line_start":83,"line_end":83,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":357545,"byte_end":357548,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ To process each value, `f` produces a *stream*, of which each value","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":357553,"byte_end":357624,"line_start":85,"line_end":85,"column_start":5,"column_end":76}},{"value":"/ is passed to the underlying sink. A new value will not be accepted until","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":357629,"byte_end":357705,"line_start":86,"line_end":86,"column_start":5,"column_end":81}},{"value":"/ the stream has been drained","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":357710,"byte_end":357741,"line_start":87,"line_end":87,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":357746,"byte_end":357749,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the given sink, returning a wrapped","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":357754,"byte_end":357826,"line_start":89,"line_end":89,"column_start":5,"column_end":77}},{"value":"/ version, much like `Iterator::flat_map`.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":357831,"byte_end":357875,"line_start":90,"line_end":90,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":357880,"byte_end":357883,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":357888,"byte_end":357902,"line_start":92,"line_end":92,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":357907,"byte_end":357910,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":357915,"byte_end":357922,"line_start":94,"line_end":94,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":357927,"byte_end":357968,"line_start":95,"line_end":95,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":357973,"byte_end":358004,"line_start":96,"line_end":96,"column_start":5,"column_end":36}},{"value":"/ use futures::sink::SinkExt;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":358009,"byte_end":358040,"line_start":97,"line_end":97,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":358045,"byte_end":358088,"line_start":98,"line_end":98,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":358093,"byte_end":358096,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::channel(5);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":358101,"byte_end":358137,"line_start":100,"line_end":100,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":358142,"byte_end":358145,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ let mut tx = tx.with_flat_map(|x| {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":358150,"byte_end":358189,"line_start":102,"line_end":102,"column_start":5,"column_end":44}},{"value":"/     stream::iter(vec![Ok(42); x])","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":358194,"byte_end":358231,"line_start":103,"line_end":103,"column_start":5,"column_end":42}},{"value":"/ });","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":358236,"byte_end":358243,"line_start":104,"line_end":104,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":358248,"byte_end":358251,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ tx.send(5).await.unwrap();","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":358256,"byte_end":358286,"line_start":106,"line_end":106,"column_start":5,"column_end":35}},{"value":"/ drop(tx);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":358291,"byte_end":358304,"line_start":107,"line_end":107,"column_start":5,"column_end":18}},{"value":"/ let received: Vec<i32> = rx.collect().await;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":358309,"byte_end":358357,"line_start":108,"line_end":108,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(received, vec![42, 42, 42, 42, 42]);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":358362,"byte_end":358413,"line_start":109,"line_end":109,"column_start":5,"column_end":56}},{"value":"/ # });","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":358418,"byte_end":358427,"line_start":110,"line_end":110,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":358432,"byte_end":358439,"line_start":111,"line_end":111,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3269},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":359173,"byte_end":359185,"line_start":135,"line_end":135,"column_start":8,"column_end":20},"name":"sink_map_err","qualname":"::sink::SinkExt::sink_map_err","value":"fn <E, F> (self, f: F) -> SinkMapErr<Self, F>","parent":{"krate":0,"index":3258},"children":[],"decl_id":null,"docs":" Transforms the error returned by the sink.\n","sig":null,"attributes":[{"value":"/ Transforms the error returned by the sink.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":359119,"byte_end":359165,"line_start":134,"line_end":134,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":3272},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":359528,"byte_end":359541,"line_start":145,"line_end":145,"column_start":8,"column_end":21},"name":"sink_err_into","qualname":"::sink::SinkExt::sink_err_into","value":"fn <E> (self) -> err_into::SinkErrInto<Self, Item, E>","parent":{"krate":0,"index":3258},"children":[],"decl_id":null,"docs":" Map this sink's error to a different error type using the `Into` trait.","sig":null,"attributes":[{"value":"/ Map this sink's error to a different error type using the `Into` trait.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":359347,"byte_end":359422,"line_start":142,"line_end":142,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":359427,"byte_end":359430,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ If wanting to map errors of a `Sink + Stream`, use `.sink_err_into().err_into()`.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":359435,"byte_end":359520,"line_start":144,"line_end":144,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":3274},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":360352,"byte_end":360358,"line_start":166,"line_end":166,"column_start":8,"column_end":14},"name":"buffer","qualname":"::sink::SinkExt::buffer","value":"fn (self, capacity: usize) -> Buffer<Self, Item>","parent":{"krate":0,"index":3258},"children":[],"decl_id":null,"docs":" Adds a fixed-size buffer to the current sink.","sig":null,"attributes":[{"value":"/ Adds a fixed-size buffer to the current sink.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":359703,"byte_end":359752,"line_start":153,"line_end":153,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":359757,"byte_end":359760,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ The resulting sink will buffer up to `capacity` items when the","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":359765,"byte_end":359831,"line_start":155,"line_end":155,"column_start":5,"column_end":71}},{"value":"/ underlying sink is unwilling to accept additional items. Calling `flush`","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":359836,"byte_end":359912,"line_start":156,"line_end":156,"column_start":5,"column_end":81}},{"value":"/ on the buffered sink will attempt to both empty the buffer and complete","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":359917,"byte_end":359992,"line_start":157,"line_end":157,"column_start":5,"column_end":80}},{"value":"/ processing on the underlying sink.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":359997,"byte_end":360035,"line_start":158,"line_end":158,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":360040,"byte_end":360043,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the given sink, returning a wrapped","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":360048,"byte_end":360120,"line_start":160,"line_end":160,"column_start":5,"column_end":77}},{"value":"/ version, much like `Iterator::map`.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":360125,"byte_end":360164,"line_start":161,"line_end":161,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":360169,"byte_end":360172,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":360177,"byte_end":360252,"line_start":163,"line_end":163,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":360257,"byte_end":360314,"line_start":164,"line_end":164,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":360319,"byte_end":360344,"line_start":165,"line_end":165,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3275},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":360511,"byte_end":360516,"line_start":173,"line_end":173,"column_start":8,"column_end":13},"name":"close","qualname":"::sink::SinkExt::close","value":"fn (&mut self) -> Close<'_, Self, Item>","parent":{"krate":0,"index":3258},"children":[],"decl_id":null,"docs":" Close the sink.\n","sig":null,"attributes":[{"value":"/ Close the sink.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":360484,"byte_end":360503,"line_start":172,"line_end":172,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":3276},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":360801,"byte_end":360807,"line_start":183,"line_end":183,"column_start":8,"column_end":14},"name":"fanout","qualname":"::sink::SinkExt::fanout","value":"fn <Si> (self, other: Si) -> Fanout<Self, Si>","parent":{"krate":0,"index":3258},"children":[],"decl_id":null,"docs":" Fanout items to multiple sinks.","sig":null,"attributes":[{"value":"/ Fanout items to multiple sinks.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":360622,"byte_end":360657,"line_start":179,"line_end":179,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":360662,"byte_end":360665,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ This adapter clones each incoming item and forwards it to both this as well as","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":360670,"byte_end":360752,"line_start":181,"line_end":181,"column_start":5,"column_end":87}},{"value":"/ the other sink at the same time.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":360757,"byte_end":360793,"line_start":182,"line_end":182,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":3278},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":361202,"byte_end":361207,"line_start":195,"line_end":195,"column_start":8,"column_end":13},"name":"flush","qualname":"::sink::SinkExt::flush","value":"fn (&mut self) -> Flush<'_, Self, Item>","parent":{"krate":0,"index":3258},"children":[],"decl_id":null,"docs":" Flush the sink, processing all pending items.","sig":null,"attributes":[{"value":"/ Flush the sink, processing all pending items.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":361001,"byte_end":361050,"line_start":191,"line_end":191,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":361055,"byte_end":361058,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ This adapter is intended to be used when you want to stop sending to the sink","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":361063,"byte_end":361144,"line_start":193,"line_end":193,"column_start":5,"column_end":86}},{"value":"/ until all current requests are processed.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":361149,"byte_end":361194,"line_start":194,"line_end":194,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":3279},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":361630,"byte_end":361634,"line_start":207,"line_end":207,"column_start":8,"column_end":12},"name":"send","qualname":"::sink::SinkExt::send","value":"fn (&mut self, item: Item) -> Send<'_, Self, Item>","parent":{"krate":0,"index":3258},"children":[],"decl_id":null,"docs":" A future that completes after the given item has been fully processed\n into the sink, including flushing.","sig":null,"attributes":[{"value":"/ A future that completes after the given item has been fully processed","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":361313,"byte_end":361386,"line_start":201,"line_end":201,"column_start":5,"column_end":78}},{"value":"/ into the sink, including flushing.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":361391,"byte_end":361429,"line_start":202,"line_end":202,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":361434,"byte_end":361437,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ Note that, **because of the flushing requirement, it is usually better","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":361442,"byte_end":361516,"line_start":204,"line_end":204,"column_start":5,"column_end":79}},{"value":"/ to batch together items to send via `send_all`, rather than flushing","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":361521,"byte_end":361593,"line_start":205,"line_end":205,"column_start":5,"column_end":77}},{"value":"/ between each item.**","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":361598,"byte_end":361622,"line_start":206,"line_end":206,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":3280},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":362381,"byte_end":362389,"line_start":224,"line_end":224,"column_start":8,"column_end":16},"name":"send_all","qualname":"::sink::SinkExt::send_all","value":"fn <'a, St> (&'a mut self, stream: &'a mut St) -> SendAll<'a, Self, St>","parent":{"krate":0,"index":3258},"children":[],"decl_id":null,"docs":" A future that completes after the given stream has been fully processed\n into the sink, including flushing.","sig":null,"attributes":[{"value":"/ A future that completes after the given stream has been fully processed","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":361756,"byte_end":361831,"line_start":213,"line_end":213,"column_start":5,"column_end":80}},{"value":"/ into the sink, including flushing.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":361836,"byte_end":361874,"line_start":214,"line_end":214,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":361879,"byte_end":361882,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ This future will drive the stream to keep producing items until it is","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":361887,"byte_end":361960,"line_start":216,"line_end":216,"column_start":5,"column_end":78}},{"value":"/ exhausted, sending each item to the sink. It will complete once both the","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":361965,"byte_end":362041,"line_start":217,"line_end":217,"column_start":5,"column_end":81}},{"value":"/ stream is exhausted, the sink has received all items, and the sink has","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":362046,"byte_end":362120,"line_start":218,"line_end":218,"column_start":5,"column_end":79}},{"value":"/ been flushed. Note that the sink is **not** closed.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":362125,"byte_end":362180,"line_start":219,"line_end":219,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":362185,"byte_end":362188,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ Doing `sink.send_all(stream)` is roughly equivalent to","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":362193,"byte_end":362251,"line_start":221,"line_end":221,"column_start":5,"column_end":63}},{"value":"/ `stream.forward(sink)`. The returned future will exhaust all items from","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":362256,"byte_end":362331,"line_start":222,"line_end":222,"column_start":5,"column_end":80}},{"value":"/ `stream` and send them to `self`.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":362336,"byte_end":362373,"line_start":223,"line_end":223,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":3283},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":362918,"byte_end":362927,"line_start":239,"line_end":239,"column_start":8,"column_end":17},"name":"left_sink","qualname":"::sink::SinkExt::left_sink","value":"fn <Si2> (self) -> Either<Self, Si2>","parent":{"krate":0,"index":3258},"children":[],"decl_id":null,"docs":" Wrap this sink in an `Either` sink, making it the left-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this sink in an `Either` sink, making it the left-hand variant","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":362645,"byte_end":362716,"line_start":234,"line_end":234,"column_start":5,"column_end":76}},{"value":"/ of that `Either`.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":362721,"byte_end":362742,"line_start":235,"line_end":235,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":362747,"byte_end":362750,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `right_sink` method to write `if`","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":362755,"byte_end":362833,"line_start":237,"line_end":237,"column_start":5,"column_end":83}},{"value":"/ statements that evaluate to different streams in different branches.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":362838,"byte_end":362910,"line_start":238,"line_end":238,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":3285},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":363359,"byte_end":363369,"line_start":251,"line_end":251,"column_start":8,"column_end":18},"name":"right_sink","qualname":"::sink::SinkExt::right_sink","value":"fn <Si1> (self) -> Either<Si1, Self>","parent":{"krate":0,"index":3258},"children":[],"decl_id":null,"docs":" Wrap this stream in an `Either` stream, making it the right-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this stream in an `Either` stream, making it the right-hand variant","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":363082,"byte_end":363158,"line_start":246,"line_end":246,"column_start":5,"column_end":81}},{"value":"/ of that `Either`.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":363163,"byte_end":363184,"line_start":247,"line_end":247,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":363189,"byte_end":363192,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `left_sink` method to write `if`","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":363197,"byte_end":363274,"line_start":249,"line_end":249,"column_start":5,"column_end":82}},{"value":"/ statements that evaluate to different streams in different branches.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":363279,"byte_end":363351,"line_start":250,"line_end":250,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":3287},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":363924,"byte_end":363940,"line_start":269,"line_end":269,"column_start":8,"column_end":24},"name":"poll_ready_unpin","qualname":"::sink::SinkExt::poll_ready_unpin","value":"fn (&mut self, cx: &mut Context<'_>) -> Poll<Result<(), Self::Error>>","parent":{"krate":0,"index":3258},"children":[],"decl_id":null,"docs":" A convenience method for calling [`Sink::poll_ready`] on [`Unpin`]\n sink types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`Sink::poll_ready`] on [`Unpin`]","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":363826,"byte_end":363896,"line_start":267,"line_end":267,"column_start":5,"column_end":75}},{"value":"/ sink types.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":363901,"byte_end":363916,"line_start":268,"line_end":268,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3288},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":364186,"byte_end":364202,"line_start":277,"line_end":277,"column_start":8,"column_end":24},"name":"start_send_unpin","qualname":"::sink::SinkExt::start_send_unpin","value":"fn (&mut self, item: Item) -> Result<(), Self::Error>","parent":{"krate":0,"index":3258},"children":[],"decl_id":null,"docs":" A convenience method for calling [`Sink::start_send`] on [`Unpin`]\n sink types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`Sink::start_send`] on [`Unpin`]","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":364088,"byte_end":364158,"line_start":275,"line_end":275,"column_start":5,"column_end":75}},{"value":"/ sink types.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":364163,"byte_end":364178,"line_start":276,"line_end":276,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3289},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":364434,"byte_end":364450,"line_start":285,"line_end":285,"column_start":8,"column_end":24},"name":"poll_flush_unpin","qualname":"::sink::SinkExt::poll_flush_unpin","value":"fn (&mut self, cx: &mut Context<'_>) -> Poll<Result<(), Self::Error>>","parent":{"krate":0,"index":3258},"children":[],"decl_id":null,"docs":" A convenience method for calling [`Sink::poll_flush`] on [`Unpin`]\n sink types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`Sink::poll_flush`] on [`Unpin`]","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":364336,"byte_end":364406,"line_start":283,"line_end":283,"column_start":5,"column_end":75}},{"value":"/ sink types.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":364411,"byte_end":364426,"line_start":284,"line_end":284,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3290},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":364696,"byte_end":364712,"line_start":293,"line_end":293,"column_start":8,"column_end":24},"name":"poll_close_unpin","qualname":"::sink::SinkExt::poll_close_unpin","value":"fn (&mut self, cx: &mut Context<'_>) -> Poll<Result<(), Self::Error>>","parent":{"krate":0,"index":3258},"children":[],"decl_id":null,"docs":" A convenience method for calling [`Sink::poll_close`] on [`Unpin`]\n sink types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`Sink::poll_close`] on [`Unpin`]","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":364598,"byte_end":364668,"line_start":291,"line_end":291,"column_start":5,"column_end":75}},{"value":"/ sink types.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":364673,"byte_end":364688,"line_start":292,"line_end":292,"column_start":5,"column_end":20}}]},{"kind":"Mod","id":{"krate":0,"index":3292},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\task\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"task","qualname":"::task","value":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\task\\mod.rs","parent":null,"children":[{"krate":0,"index":11172},{"krate":0,"index":11173},{"krate":0,"index":11174},{"krate":0,"index":11177},{"krate":0,"index":3293},{"krate":0,"index":3313},{"krate":0,"index":3316},{"krate":0,"index":3322},{"krate":0,"index":3329},{"krate":0,"index":3330}],"decl_id":null,"docs":" Task notification\n","sig":null,"attributes":[{"value":"! Task notification","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\task\\mod.rs","byte_start":391076,"byte_end":391097,"line_start":1,"line_end":1,"column_start":1,"column_end":22}}]},{"kind":"Trait","id":{"krate":0,"index":3307},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\task\\spawn.rs","byte_start":392287,"byte_end":392295,"line_start":20,"line_end":20,"column_start":11,"column_end":19},"name":"SpawnExt","qualname":"::task::spawn::SpawnExt","value":"SpawnExt: Spawn","parent":null,"children":[{"krate":0,"index":3308}],"decl_id":null,"docs":" Extension trait for `Spawn`.\n","sig":null,"attributes":[{"value":"/ Extension trait for `Spawn`.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\task\\spawn.rs","byte_start":392244,"byte_end":392276,"line_start":19,"line_end":19,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":3308},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\task\\spawn.rs","byte_start":393292,"byte_end":393297,"line_start":46,"line_end":46,"column_start":8,"column_end":13},"name":"spawn","qualname":"::task::spawn::SpawnExt::spawn","value":"fn <Fut> (&self, future: Fut) -> Result<(), SpawnError>","parent":{"krate":0,"index":3307},"children":[],"decl_id":null,"docs":" Spawns a task that polls the given future with output `()` to\n completion.","sig":null,"attributes":[{"value":"/ Spawns a task that polls the given future with output `()` to","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\task\\spawn.rs","byte_start":392309,"byte_end":392374,"line_start":21,"line_end":21,"column_start":5,"column_end":70}},{"value":"/ completion.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\task\\spawn.rs","byte_start":392379,"byte_end":392394,"line_start":22,"line_end":22,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\task\\spawn.rs","byte_start":392399,"byte_end":392402,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ This method returns a [`Result`] that contains a [`SpawnError`] if","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\task\\spawn.rs","byte_start":392407,"byte_end":392477,"line_start":24,"line_end":24,"column_start":5,"column_end":75}},{"value":"/ spawning fails.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\task\\spawn.rs","byte_start":392482,"byte_end":392501,"line_start":25,"line_end":25,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\task\\spawn.rs","byte_start":392506,"byte_end":392509,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ You can use [`spawn_with_handle`](SpawnExt::spawn_with_handle) if","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\task\\spawn.rs","byte_start":392514,"byte_end":392583,"line_start":27,"line_end":27,"column_start":5,"column_end":74}},{"value":"/ you want to spawn a future with output other than `()` or if you want","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\task\\spawn.rs","byte_start":392588,"byte_end":392661,"line_start":28,"line_end":28,"column_start":5,"column_end":78}},{"value":"/ to be able to await its completion.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\task\\spawn.rs","byte_start":392666,"byte_end":392705,"line_start":29,"line_end":29,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\task\\spawn.rs","byte_start":392710,"byte_end":392713,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ Note this method will eventually be replaced with the upcoming","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\task\\spawn.rs","byte_start":392718,"byte_end":392784,"line_start":31,"line_end":31,"column_start":5,"column_end":71}},{"value":"/ `Spawn::spawn` method which will take a `dyn Future` as input.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\task\\spawn.rs","byte_start":392789,"byte_end":392855,"line_start":32,"line_end":32,"column_start":5,"column_end":71}},{"value":"/ Technical limitations prevent `Spawn::spawn` from being implemented","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\task\\spawn.rs","byte_start":392860,"byte_end":392931,"line_start":33,"line_end":33,"column_start":5,"column_end":76}},{"value":"/ today. Feel free to use this method in the meantime.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\task\\spawn.rs","byte_start":392936,"byte_end":392992,"line_start":34,"line_end":34,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\task\\spawn.rs","byte_start":392997,"byte_end":393000,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\task\\spawn.rs","byte_start":393005,"byte_end":393012,"line_start":36,"line_end":36,"column_start":5,"column_end":12}},{"value":"/ use futures::executor::ThreadPool;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\task\\spawn.rs","byte_start":393017,"byte_end":393055,"line_start":37,"line_end":37,"column_start":5,"column_end":43}},{"value":"/ use futures::task::SpawnExt;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\task\\spawn.rs","byte_start":393060,"byte_end":393092,"line_start":38,"line_end":38,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\task\\spawn.rs","byte_start":393097,"byte_end":393100,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ let executor = ThreadPool::new().unwrap();","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\task\\spawn.rs","byte_start":393105,"byte_end":393151,"line_start":40,"line_end":40,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\task\\spawn.rs","byte_start":393156,"byte_end":393159,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ let future = async { /* ... */ };","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\task\\spawn.rs","byte_start":393164,"byte_end":393201,"line_start":42,"line_end":42,"column_start":5,"column_end":42}},{"value":"/ executor.spawn(future).unwrap();","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\task\\spawn.rs","byte_start":393206,"byte_end":393242,"line_start":43,"line_end":43,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\task\\spawn.rs","byte_start":393247,"byte_end":393254,"line_start":44,"line_end":44,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\task\\spawn.rs","byte_start":393259,"byte_end":393284,"line_start":45,"line_end":45,"column_start":5,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":3310},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\task\\spawn.rs","byte_start":394942,"byte_end":394955,"line_start":95,"line_end":95,"column_start":11,"column_end":24},"name":"LocalSpawnExt","qualname":"::task::spawn::LocalSpawnExt","value":"LocalSpawnExt: LocalSpawn","parent":null,"children":[{"krate":0,"index":3311}],"decl_id":null,"docs":" Extension trait for `LocalSpawn`.\n","sig":null,"attributes":[{"value":"/ Extension trait for `LocalSpawn`.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\task\\spawn.rs","byte_start":394894,"byte_end":394931,"line_start":94,"line_end":94,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":3311},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\task\\spawn.rs","byte_start":395998,"byte_end":396009,"line_start":122,"line_end":122,"column_start":8,"column_end":19},"name":"spawn_local","qualname":"::task::spawn::LocalSpawnExt::spawn_local","value":"fn <Fut> (&self, future: Fut) -> Result<(), SpawnError>","parent":{"krate":0,"index":3310},"children":[],"decl_id":null,"docs":" Spawns a task that polls the given future with output `()` to\n completion.","sig":null,"attributes":[{"value":"/ Spawns a task that polls the given future with output `()` to","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\task\\spawn.rs","byte_start":394974,"byte_end":395039,"line_start":96,"line_end":96,"column_start":5,"column_end":70}},{"value":"/ completion.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\task\\spawn.rs","byte_start":395044,"byte_end":395059,"line_start":97,"line_end":97,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\task\\spawn.rs","byte_start":395064,"byte_end":395067,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ This method returns a [`Result`] that contains a [`SpawnError`] if","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\task\\spawn.rs","byte_start":395072,"byte_end":395142,"line_start":99,"line_end":99,"column_start":5,"column_end":75}},{"value":"/ spawning fails.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\task\\spawn.rs","byte_start":395147,"byte_end":395166,"line_start":100,"line_end":100,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\task\\spawn.rs","byte_start":395171,"byte_end":395174,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ You can use [`spawn_with_handle`](SpawnExt::spawn_with_handle) if","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\task\\spawn.rs","byte_start":395179,"byte_end":395248,"line_start":102,"line_end":102,"column_start":5,"column_end":74}},{"value":"/ you want to spawn a future with output other than `()` or if you want","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\task\\spawn.rs","byte_start":395253,"byte_end":395326,"line_start":103,"line_end":103,"column_start":5,"column_end":78}},{"value":"/ to be able to await its completion.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\task\\spawn.rs","byte_start":395331,"byte_end":395370,"line_start":104,"line_end":104,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\task\\spawn.rs","byte_start":395375,"byte_end":395378,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ Note this method will eventually be replaced with the upcoming","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\task\\spawn.rs","byte_start":395383,"byte_end":395449,"line_start":106,"line_end":106,"column_start":5,"column_end":71}},{"value":"/ `Spawn::spawn` method which will take a `dyn Future` as input.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\task\\spawn.rs","byte_start":395454,"byte_end":395520,"line_start":107,"line_end":107,"column_start":5,"column_end":71}},{"value":"/ Technical limitations prevent `Spawn::spawn` from being implemented","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\task\\spawn.rs","byte_start":395525,"byte_end":395596,"line_start":108,"line_end":108,"column_start":5,"column_end":76}},{"value":"/ today. Feel free to use this method in the meantime.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\task\\spawn.rs","byte_start":395601,"byte_end":395657,"line_start":109,"line_end":109,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\task\\spawn.rs","byte_start":395662,"byte_end":395665,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\task\\spawn.rs","byte_start":395670,"byte_end":395677,"line_start":111,"line_end":111,"column_start":5,"column_end":12}},{"value":"/ use futures::executor::LocalPool;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\task\\spawn.rs","byte_start":395682,"byte_end":395719,"line_start":112,"line_end":112,"column_start":5,"column_end":42}},{"value":"/ use futures::task::LocalSpawnExt;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\task\\spawn.rs","byte_start":395724,"byte_end":395761,"line_start":113,"line_end":113,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\task\\spawn.rs","byte_start":395766,"byte_end":395769,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ let executor = LocalPool::new();","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\task\\spawn.rs","byte_start":395774,"byte_end":395810,"line_start":115,"line_end":115,"column_start":5,"column_end":41}},{"value":"/ let spawner = executor.spawner();","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\task\\spawn.rs","byte_start":395815,"byte_end":395852,"line_start":116,"line_end":116,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\task\\spawn.rs","byte_start":395857,"byte_end":395860,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ let future = async { /* ... */ };","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\task\\spawn.rs","byte_start":395865,"byte_end":395902,"line_start":118,"line_end":118,"column_start":5,"column_end":42}},{"value":"/ spawner.spawn_local(future).unwrap();","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\task\\spawn.rs","byte_start":395907,"byte_end":395948,"line_start":119,"line_end":119,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\task\\spawn.rs","byte_start":395953,"byte_end":395960,"line_start":120,"line_end":120,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\task\\spawn.rs","byte_start":395965,"byte_end":395990,"line_start":121,"line_end":121,"column_start":5,"column_end":30}}]},{"kind":"Mod","id":{"krate":0,"index":3331},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\never.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"never","qualname":"::never","value":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\never.rs","parent":null,"children":[{"krate":0,"index":3332}],"decl_id":null,"docs":" Definition of the `Never` type,\n a stand-in for the `!` type until it becomes stable.\n","sig":null,"attributes":[{"value":"! Definition of the `Never` type,","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\never.rs","byte_start":397359,"byte_end":397394,"line_start":1,"line_end":1,"column_start":1,"column_end":36}},{"value":"! a stand-in for the `!` type until it becomes stable.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\never.rs","byte_start":397395,"byte_end":397451,"line_start":2,"line_end":2,"column_start":1,"column_end":57}}]},{"kind":"Type","id":{"krate":0,"index":3332},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\never.rs","byte_start":398088,"byte_end":398093,"line_start":17,"line_end":17,"column_start":10,"column_end":15},"name":"Never","qualname":"::never::Never","value":"core::convert::Infallible","parent":null,"children":[],"decl_id":null,"docs":" A type with no possible values.","sig":null,"attributes":[{"value":"/ A type with no possible values.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\never.rs","byte_start":397453,"byte_end":397488,"line_start":4,"line_end":4,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\never.rs","byte_start":397489,"byte_end":397492,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This is used to indicate values which can never be created, such as the","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\never.rs","byte_start":397493,"byte_end":397568,"line_start":6,"line_end":6,"column_start":1,"column_end":76}},{"value":"/ error type of infallible futures.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\never.rs","byte_start":397569,"byte_end":397606,"line_start":7,"line_end":7,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\never.rs","byte_start":397607,"byte_end":397610,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This type is a stable equivalent to the `!` type from `std`.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\never.rs","byte_start":397611,"byte_end":397675,"line_start":9,"line_end":9,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\never.rs","byte_start":397676,"byte_end":397679,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This is currently an alias for [`std::convert::Infallible`], but in","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\never.rs","byte_start":397680,"byte_end":397751,"line_start":11,"line_end":11,"column_start":1,"column_end":72}},{"value":"/ the future it may be an alias for [`!`][never].","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\never.rs","byte_start":397752,"byte_end":397803,"line_start":12,"line_end":12,"column_start":1,"column_end":52}},{"value":"/ See [\"Future compatibility\" section of `std::convert::Infallible`][infallible] for more.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\never.rs","byte_start":397804,"byte_end":397896,"line_start":13,"line_end":13,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\never.rs","byte_start":397897,"byte_end":397900,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [never]: https://doc.rust-lang.org/nightly/std/primitive.never.html","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\never.rs","byte_start":397901,"byte_end":397972,"line_start":15,"line_end":15,"column_start":1,"column_end":72}},{"value":"/ [infallible]: https://doc.rust-lang.org/nightly/std/convert/enum.Infallible.html#future-compatibility","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\never.rs","byte_start":397973,"byte_end":398078,"line_start":16,"line_end":16,"column_start":1,"column_end":106}}]},{"kind":"Trait","id":{"krate":0,"index":3338},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\fns.rs","byte_start":398196,"byte_end":398203,"line_start":4,"line_end":4,"column_start":11,"column_end":18},"name":"FnOnce1","qualname":"::fns::FnOnce1","value":"FnOnce1<A>","parent":null,"children":[{"krate":0,"index":3340},{"krate":0,"index":3341}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3340},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\fns.rs","byte_start":398218,"byte_end":398224,"line_start":5,"line_end":5,"column_start":10,"column_end":16},"name":"Output","qualname":"::fns::FnOnce1::Output","value":"type Output;","parent":{"krate":0,"index":3338},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3341},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\fns.rs","byte_start":398233,"byte_end":398242,"line_start":6,"line_end":6,"column_start":8,"column_end":17},"name":"call_once","qualname":"::fns::FnOnce1::call_once","value":"fn (self, arg: A) -> Self::Output","parent":{"krate":0,"index":3338},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3348},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\fns.rs","byte_start":398434,"byte_end":398440,"line_start":19,"line_end":19,"column_start":11,"column_end":17},"name":"FnMut1","qualname":"::fns::FnMut1","value":"FnMut1<A>: FnOnce1<A>","parent":null,"children":[{"krate":0,"index":3350}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3350},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\fns.rs","byte_start":398465,"byte_end":398473,"line_start":20,"line_end":20,"column_start":8,"column_end":16},"name":"call_mut","qualname":"::fns::FnMut1::call_mut","value":"fn (&mut self, arg: A) -> Self::Output","parent":{"krate":0,"index":3348},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3365},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\fns.rs","byte_start":399777,"byte_end":399781,"line_start":74,"line_end":74,"column_start":12,"column_end":16},"name":"OkFn","qualname":"::fns::OkFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11196},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\fns.rs","byte_start":400137,"byte_end":400144,"line_start":92,"line_end":92,"column_start":12,"column_end":19},"name":"ChainFn","qualname":"::fns::ChainFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11217},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\fns.rs","byte_start":400878,"byte_end":400891,"line_start":127,"line_end":127,"column_start":12,"column_end":25},"name":"MergeResultFn","qualname":"::fns::MergeResultFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11233},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\fns.rs","byte_start":401233,"byte_end":401242,"line_start":141,"line_end":141,"column_start":12,"column_end":21},"name":"InspectFn","qualname":"::fns::InspectFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11248},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\fns.rs","byte_start":401948,"byte_end":401955,"line_start":176,"line_end":176,"column_start":12,"column_end":19},"name":"MapOkFn","qualname":"::fns::MapOkFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11263},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\fns.rs","byte_start":402666,"byte_end":402674,"line_start":208,"line_end":208,"column_start":12,"column_end":20},"name":"MapErrFn","qualname":"::fns::MapErrFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11278},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\fns.rs","byte_start":403394,"byte_end":403405,"line_start":240,"line_end":240,"column_start":12,"column_end":23},"name":"InspectOkFn","qualname":"::fns::InspectOkFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11290},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\fns.rs","byte_start":404223,"byte_end":404235,"line_start":272,"line_end":272,"column_start":12,"column_end":24},"name":"InspectErrFn","qualname":"::fns::InspectErrFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11302},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\fns.rs","byte_start":405316,"byte_end":405330,"line_start":309,"line_end":309,"column_start":12,"column_end":26},"name":"UnwrapOrElseFn","qualname":"::fns::UnwrapOrElseFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3529},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\fns.rs","byte_start":406089,"byte_end":406095,"line_start":340,"line_end":340,"column_start":12,"column_end":18},"name":"IntoFn","qualname":"::fns::IntoFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":11335},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"lock","qualname":"::lock","value":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mod.rs","parent":null,"children":[{"krate":0,"index":11336},{"krate":0,"index":11484},{"krate":0,"index":11489},{"krate":0,"index":11547}],"decl_id":null,"docs":" Futures-powered synchronization primitives.","sig":null,"attributes":[{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":12305,"byte_end":12330,"line_start":333,"line_end":333,"column_start":5,"column_end":30}},{"value":"! Futures-powered synchronization primitives.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mod.rs","byte_start":8462422,"byte_end":8462469,"line_start":1,"line_end":1,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mod.rs","byte_start":8462470,"byte_end":8462473,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This module is only available when the `std` or `alloc` feature of this","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mod.rs","byte_start":8462474,"byte_end":8462549,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"! library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mod.rs","byte_start":8462550,"byte_end":8462607,"line_start":4,"line_end":4,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":11357},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8463727,"byte_end":8463732,"line_start":19,"line_end":19,"column_start":12,"column_end":17},"name":"Mutex","qualname":"::lock::mutex::Mutex","value":"Mutex {  }","parent":null,"children":[{"krate":0,"index":11359},{"krate":0,"index":11360},{"krate":0,"index":11361}],"decl_id":null,"docs":" A futures-aware mutex.\n \n # Fairness\n \n This mutex provides no fairness guarantees. Tasks may not acquire the mutex\n in the order that they requested the lock, and it's possible for a single task\n which repeatedly takes the lock to starve other tasks, which may be left waiting\n indefinitely.\n","sig":null,"attributes":[{"value":"/ A futures-aware mutex.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8463398,"byte_end":8463424,"line_start":11,"line_end":11,"column_start":1,"column_end":27}},{"value":"/ ","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8463425,"byte_end":8463429,"line_start":12,"line_end":12,"column_start":1,"column_end":5}},{"value":"/ # Fairness","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8463430,"byte_end":8463444,"line_start":13,"line_end":13,"column_start":1,"column_end":15}},{"value":"/ ","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8463445,"byte_end":8463449,"line_start":14,"line_end":14,"column_start":1,"column_end":5}},{"value":"/ This mutex provides no fairness guarantees. Tasks may not acquire the mutex","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8463450,"byte_end":8463529,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ in the order that they requested the lock, and it's possible for a single task","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8463530,"byte_end":8463612,"line_start":16,"line_end":16,"column_start":1,"column_end":83}},{"value":"/ which repeatedly takes the lock to starve other tasks, which may be left waiting","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8463613,"byte_end":8463697,"line_start":17,"line_end":17,"column_start":1,"column_end":85}},{"value":"/ indefinitely.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8463698,"byte_end":8463715,"line_start":18,"line_end":18,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":11384},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8465061,"byte_end":8465064,"line_start":74,"line_end":74,"column_start":12,"column_end":15},"name":"new","qualname":"<Mutex<T>>::new","value":"fn (t: T) -> Mutex<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new futures-aware mutex.\n","sig":null,"attributes":[{"value":"/ Creates a new futures-aware mutex.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8465011,"byte_end":8465049,"line_start":73,"line_end":73,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":11385},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8465496,"byte_end":8465506,"line_start":92,"line_end":92,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Mutex<T>>::into_inner","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this mutex, returning the underlying data.","sig":null,"attributes":[{"value":"/ Consumes this mutex, returning the underlying data.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8465250,"byte_end":8465305,"line_start":82,"line_end":82,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8465310,"byte_end":8465313,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8465318,"byte_end":8465332,"line_start":84,"line_end":84,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8465337,"byte_end":8465340,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8465345,"byte_end":8465352,"line_start":86,"line_end":86,"column_start":5,"column_end":12}},{"value":"/ use futures::lock::Mutex;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8465357,"byte_end":8465386,"line_start":87,"line_end":87,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8465391,"byte_end":8465394,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ let mutex = Mutex::new(0);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8465399,"byte_end":8465429,"line_start":89,"line_end":89,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(mutex.into_inner(), 0);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8465434,"byte_end":8465472,"line_start":90,"line_end":90,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8465477,"byte_end":8465484,"line_start":91,"line_end":91,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":11388},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8465720,"byte_end":8465728,"line_start":101,"line_end":101,"column_start":12,"column_end":20},"name":"try_lock","qualname":"<Mutex<T>>::try_lock","value":"fn (&self) -> Option<MutexGuard<'_, T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to acquire the lock immediately.","sig":null,"attributes":[{"value":"/ Attempt to acquire the lock immediately.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8465592,"byte_end":8465636,"line_start":98,"line_end":98,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8465641,"byte_end":8465644,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ If the lock is currently held, this will return `None`.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8465649,"byte_end":8465708,"line_start":100,"line_end":100,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":11389},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8466149,"byte_end":8466153,"line_start":114,"line_end":114,"column_start":12,"column_end":16},"name":"lock","qualname":"<Mutex<T>>::lock","value":"fn (&self) -> MutexLockFuture<'_, T>","parent":null,"children":[],"decl_id":null,"docs":" Acquire the lock asynchronously.","sig":null,"attributes":[{"value":"/ Acquire the lock asynchronously.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8465984,"byte_end":8466020,"line_start":110,"line_end":110,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8466025,"byte_end":8466028,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ This method returns a future that will resolve once the lock has been","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8466033,"byte_end":8466106,"line_start":112,"line_end":112,"column_start":5,"column_end":78}},{"value":"/ successfully acquired.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8466111,"byte_end":8466137,"line_start":113,"line_end":113,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":11390},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8466814,"byte_end":8466821,"line_start":137,"line_end":137,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Mutex<T>>::get_mut","value":"fn (&mut self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying data.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying data.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8466304,"byte_end":8466359,"line_start":121,"line_end":121,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8466364,"byte_end":8466367,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ Since this call borrows the `Mutex` mutably, no actual locking needs to","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8466372,"byte_end":8466447,"line_start":123,"line_end":123,"column_start":5,"column_end":80}},{"value":"/ take place -- the mutable borrow statically guarantees no locks exist.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8466452,"byte_end":8466526,"line_start":124,"line_end":124,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8466531,"byte_end":8466534,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8466539,"byte_end":8466553,"line_start":126,"line_end":126,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8466558,"byte_end":8466561,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8466566,"byte_end":8466573,"line_start":128,"line_end":128,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8466578,"byte_end":8466619,"line_start":129,"line_end":129,"column_start":5,"column_end":46}},{"value":"/ use futures::lock::Mutex;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8466624,"byte_end":8466653,"line_start":130,"line_end":130,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8466658,"byte_end":8466661,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ let mut mutex = Mutex::new(0);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8466666,"byte_end":8466700,"line_start":132,"line_end":132,"column_start":5,"column_end":39}},{"value":"/ *mutex.get_mut() = 10;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8466705,"byte_end":8466731,"line_start":133,"line_end":133,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(*mutex.lock().await, 10);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8466736,"byte_end":8466776,"line_start":134,"line_end":134,"column_start":5,"column_end":45}},{"value":"/ # });","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8466781,"byte_end":8466790,"line_start":135,"line_end":135,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8466795,"byte_end":8466802,"line_start":136,"line_end":136,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":11394},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8468544,"byte_end":8468559,"line_start":182,"line_end":182,"column_start":12,"column_end":27},"name":"MutexLockFuture","qualname":"::lock::mutex::MutexLockFuture","value":"MutexLockFuture {  }","parent":null,"children":[{"krate":0,"index":11397},{"krate":0,"index":11398}],"decl_id":null,"docs":" A future which resolves when the target mutex has been successfully acquired.\n","sig":null,"attributes":[{"value":"/ A future which resolves when the target mutex has been successfully acquired.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8468451,"byte_end":8468532,"line_start":181,"line_end":181,"column_start":1,"column_end":82}}]},{"kind":"Struct","id":{"krate":0,"index":11413},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8471173,"byte_end":8471183,"line_start":261,"line_end":261,"column_start":12,"column_end":22},"name":"MutexGuard","qualname":"::lock::mutex::MutexGuard","value":"MutexGuard {  }","parent":null,"children":[{"krate":0,"index":11416}],"decl_id":null,"docs":" An RAII guard returned by the `lock` and `try_lock` methods.\n When this structure is dropped (falls out of scope), the lock will be\n unlocked.\n","sig":null,"attributes":[{"value":"/ An RAII guard returned by the `lock` and `try_lock` methods.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8471009,"byte_end":8471073,"line_start":258,"line_end":258,"column_start":1,"column_end":65}},{"value":"/ When this structure is dropped (falls out of scope), the lock will be","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8471074,"byte_end":8471147,"line_start":259,"line_end":259,"column_start":1,"column_end":74}},{"value":"/ unlocked.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8471148,"byte_end":8471161,"line_start":260,"line_end":260,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":11420},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8471752,"byte_end":8471755,"line_start":282,"line_end":282,"column_start":12,"column_end":15},"name":"map","qualname":"<MutexGuard>::map","value":"fn <U, F> (this: Self, f: F) -> MappedMutexGuard<'a, T, U>","parent":null,"children":[],"decl_id":null,"docs":" Returns a locked view over a portion of the locked data.","sig":null,"attributes":[{"value":"/ Returns a locked view over a portion of the locked data.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8471273,"byte_end":8471333,"line_start":266,"line_end":266,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8471338,"byte_end":8471341,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8471346,"byte_end":8471359,"line_start":268,"line_end":268,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8471364,"byte_end":8471367,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8471372,"byte_end":8471379,"line_start":270,"line_end":270,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8471384,"byte_end":8471425,"line_start":271,"line_end":271,"column_start":5,"column_end":46}},{"value":"/ use futures::lock::{Mutex, MutexGuard};","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8471430,"byte_end":8471473,"line_start":272,"line_end":272,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8471478,"byte_end":8471481,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ let data = Mutex::new(Some(\"value\".to_string()));","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8471486,"byte_end":8471539,"line_start":274,"line_end":274,"column_start":5,"column_end":58}},{"value":"/ {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8471544,"byte_end":8471549,"line_start":275,"line_end":275,"column_start":5,"column_end":10}},{"value":"/     let locked_str = MutexGuard::map(data.lock().await, |opt| opt.as_mut().unwrap());","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8471554,"byte_end":8471643,"line_start":276,"line_end":276,"column_start":5,"column_end":94}},{"value":"/     assert_eq!(&*locked_str, \"value\");","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8471648,"byte_end":8471690,"line_start":277,"line_end":277,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8471695,"byte_end":8471700,"line_start":278,"line_end":278,"column_start":5,"column_end":10}},{"value":"/ # });","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8471705,"byte_end":8471714,"line_start":279,"line_end":279,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8471719,"byte_end":8471726,"line_start":280,"line_end":280,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8471731,"byte_end":8471740,"line_start":281,"line_end":281,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":11436},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8473064,"byte_end":8473080,"line_start":325,"line_end":325,"column_start":12,"column_end":28},"name":"MappedMutexGuard","qualname":"::lock::mutex::MappedMutexGuard","value":"MappedMutexGuard {  }","parent":null,"children":[{"krate":0,"index":11440},{"krate":0,"index":11441}],"decl_id":null,"docs":" An RAII guard returned by the `MutexGuard::map` and `MappedMutexGuard::map` methods.\n When this structure is dropped (falls out of scope), the lock will be unlocked.\n","sig":null,"attributes":[{"value":"/ An RAII guard returned by the `MutexGuard::map` and `MappedMutexGuard::map` methods.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8472880,"byte_end":8472968,"line_start":323,"line_end":323,"column_start":1,"column_end":89}},{"value":"/ When this structure is dropped (falls out of scope), the lock will be unlocked.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8472969,"byte_end":8473052,"line_start":324,"line_end":324,"column_start":1,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":11446},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8473809,"byte_end":8473812,"line_start":348,"line_end":348,"column_start":12,"column_end":15},"name":"map","qualname":"<MappedMutexGuard>::map","value":"fn <V, F> (this: Self, f: F) -> MappedMutexGuard<'a, T, V>","parent":null,"children":[],"decl_id":null,"docs":" Returns a locked view over a portion of the locked data.","sig":null,"attributes":[{"value":"/ Returns a locked view over a portion of the locked data.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8473220,"byte_end":8473280,"line_start":331,"line_end":331,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8473285,"byte_end":8473288,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8473293,"byte_end":8473306,"line_start":333,"line_end":333,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8473311,"byte_end":8473314,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8473319,"byte_end":8473326,"line_start":335,"line_end":335,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8473331,"byte_end":8473372,"line_start":336,"line_end":336,"column_start":5,"column_end":46}},{"value":"/ use futures::lock::{MappedMutexGuard, Mutex, MutexGuard};","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8473377,"byte_end":8473438,"line_start":337,"line_end":337,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8473443,"byte_end":8473446,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ let data = Mutex::new(Some(\"value\".to_string()));","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8473451,"byte_end":8473504,"line_start":339,"line_end":339,"column_start":5,"column_end":58}},{"value":"/ {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8473509,"byte_end":8473514,"line_start":340,"line_end":340,"column_start":5,"column_end":10}},{"value":"/     let locked_str = MutexGuard::map(data.lock().await, |opt| opt.as_mut().unwrap());","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8473519,"byte_end":8473608,"line_start":341,"line_end":341,"column_start":5,"column_end":94}},{"value":"/     let locked_char = MappedMutexGuard::map(locked_str, |s| s.get_mut(0..1).unwrap());","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8473613,"byte_end":8473703,"line_start":342,"line_end":342,"column_start":5,"column_end":95}},{"value":"/     assert_eq!(&*locked_char, \"v\");","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8473708,"byte_end":8473747,"line_start":343,"line_end":343,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8473752,"byte_end":8473757,"line_start":344,"line_end":344,"column_start":5,"column_end":10}},{"value":"/ # });","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8473762,"byte_end":8473771,"line_start":345,"line_end":345,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8473776,"byte_end":8473783,"line_start":346,"line_end":346,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8473788,"byte_end":8473797,"line_start":347,"line_end":347,"column_start":5,"column_end":14}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\async_await\\poll.rs","byte_start":14268,"byte_end":14276,"line_start":30,"line_end":30,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":27},{"krate":0,"index":28}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\async_await\\pending.rs","byte_start":15432,"byte_end":15443,"line_start":33,"line_end":33,"column_start":17,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":41},{"krate":0,"index":42}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\flatten.rs","byte_start":56613,"byte_end":56620,"line_start":17,"line_end":17,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":138}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\flatten.rs","byte_start":56747,"byte_end":56754,"line_start":23,"line_end":23,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":141}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\flatten.rs","byte_start":56988,"byte_end":56995,"line_start":35,"line_end":35,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":144},{"krate":0,"index":3648}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\flatten.rs","byte_start":57800,"byte_end":57807,"line_start":61,"line_end":61,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":147}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\flatten.rs","byte_start":58041,"byte_end":58048,"line_start":73,"line_end":73,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":150},{"krate":0,"index":3649}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\flatten.rs","byte_start":58933,"byte_end":58940,"line_start":103,"line_end":103,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":154},{"krate":0,"index":3650},{"krate":0,"index":3651},{"krate":0,"index":3652},{"krate":0,"index":3653}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\fuse.rs","byte_start":61144,"byte_end":61148,"line_start":12,"line_end":12,"column_start":11,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":166}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\fuse.rs","byte_start":61250,"byte_end":61254,"line_start":18,"line_end":18,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":169}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\fuse.rs","byte_start":62978,"byte_end":62982,"line_start":69,"line_end":69,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":172}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\fuse.rs","byte_start":63091,"byte_end":63095,"line_start":75,"line_end":75,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":175},{"krate":0,"index":176}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\map.rs","byte_start":64091,"byte_end":64111,"line_start":25,"line_end":25,"column_start":23,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":198}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\map.rs","byte_start":64243,"byte_end":64246,"line_start":33,"line_end":33,"column_start":14,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":202}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\map.rs","byte_start":64421,"byte_end":64424,"line_start":40,"line_end":40,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":207}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\map.rs","byte_start":64688,"byte_end":64691,"line_start":52,"line_end":52,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":212},{"krate":0,"index":3759}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Inherent","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\catch_unwind.rs","byte_start":66590,"byte_end":66601,"line_start":15,"line_end":15,"column_start":11,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":228}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\catch_unwind.rs","byte_start":66755,"byte_end":66766,"line_start":21,"line_end":21,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":231},{"krate":0,"index":232}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\shared.rs","byte_start":67946,"byte_end":67952,"line_start":31,"line_end":31,"column_start":29,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\shared.rs","byte_start":67995,"byte_end":68001,"line_start":33,"line_end":33,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":272}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\shared.rs","byte_start":68259,"byte_end":68264,"line_start":42,"line_end":42,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":275}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\shared.rs","byte_start":68491,"byte_end":68496,"line_start":53,"line_end":53,"column_start":27,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\shared.rs","byte_start":68593,"byte_end":68598,"line_start":60,"line_end":60,"column_start":27,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Inherent","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\shared.rs","byte_start":68842,"byte_end":68848,"line_start":74,"line_end":74,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":295}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Inherent","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\shared.rs","byte_start":69314,"byte_end":69320,"line_start":91,"line_end":91,"column_start":11,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":298}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Inherent","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\shared.rs","byte_start":70012,"byte_end":70017,"line_start":112,"line_end":112,"column_start":11,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":301},{"krate":0,"index":302},{"krate":0,"index":303}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\shared.rs","byte_start":71714,"byte_end":71720,"line_start":161,"line_end":161,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":306}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\shared.rs","byte_start":71872,"byte_end":71878,"line_start":171,"line_end":171,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":309},{"krate":0,"index":310}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\shared.rs","byte_start":73416,"byte_end":73421,"line_start":217,"line_end":217,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":316}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\shared.rs","byte_start":75208,"byte_end":75214,"line_start":276,"line_end":276,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":320}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\shared.rs","byte_start":75408,"byte_end":75414,"line_start":288,"line_end":288,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":323}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\shared.rs","byte_start":75842,"byte_end":75850,"line_start":305,"line_end":305,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":325}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":40190,"byte_end":40191,"line_start":115,"line_end":115,"column_start":31,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Inherent","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\into_future.rs","byte_start":97784,"byte_end":97794,"line_start":12,"line_end":12,"column_start":11,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":412}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\into_future.rs","byte_start":97959,"byte_end":97969,"line_start":19,"line_end":19,"column_start":52,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":415}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\into_future.rs","byte_start":98075,"byte_end":98085,"line_start":23,"line_end":23,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":418},{"krate":0,"index":419}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Inherent","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\try_flatten.rs","byte_start":98723,"byte_end":98733,"line_start":17,"line_end":17,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":440}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\try_flatten.rs","byte_start":98863,"byte_end":98873,"line_start":23,"line_end":23,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":443}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\try_flatten.rs","byte_start":99126,"byte_end":99136,"line_start":35,"line_end":35,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":446},{"krate":0,"index":4481}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\try_flatten.rs","byte_start":100193,"byte_end":100203,"line_start":66,"line_end":66,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":449}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\try_flatten.rs","byte_start":100456,"byte_end":100466,"line_start":78,"line_end":78,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":452},{"krate":0,"index":4482}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\try_flatten.rs","byte_start":101608,"byte_end":101618,"line_start":113,"line_end":113,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":456},{"krate":0,"index":4483},{"krate":0,"index":4484},{"krate":0,"index":4485},{"krate":0,"index":4486}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Inherent","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\try_flatten_err.rs","byte_start":104004,"byte_end":104017,"line_start":14,"line_end":14,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":472}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\try_flatten_err.rs","byte_start":104150,"byte_end":104163,"line_start":20,"line_end":20,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":475}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\try_flatten_err.rs","byte_start":104419,"byte_end":104432,"line_start":32,"line_end":32,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":478},{"krate":0,"index":4558}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":80753,"byte_end":80756,"line_start":133,"line_end":133,"column_start":48,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\lazy.rs","byte_start":105827,"byte_end":105831,"line_start":13,"line_end":13,"column_start":19,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\lazy.rs","byte_start":106404,"byte_end":106408,"line_start":40,"line_end":40,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":547}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\lazy.rs","byte_start":106540,"byte_end":106544,"line_start":46,"line_end":46,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":551},{"krate":0,"index":552}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\pending.rs","byte_start":107121,"byte_end":107128,"line_start":13,"line_end":13,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":567}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\pending.rs","byte_start":107679,"byte_end":107686,"line_start":41,"line_end":41,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":572},{"krate":0,"index":573}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\pending.rs","byte_start":107831,"byte_end":107838,"line_start":49,"line_end":49,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\pending.rs","byte_start":107865,"byte_end":107872,"line_start":52,"line_end":52,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":578}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Inherent","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\maybe_done.rs","byte_start":109158,"byte_end":109167,"line_start":45,"line_end":45,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5632},{"krate":0,"index":598}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\maybe_done.rs","byte_start":110604,"byte_end":110613,"line_start":84,"line_end":84,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":601}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\maybe_done.rs","byte_start":110829,"byte_end":110838,"line_start":93,"line_end":93,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":604},{"krate":0,"index":5633}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Inherent","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_maybe_done.rs","byte_start":112242,"byte_end":112254,"line_start":30,"line_end":30,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":5694},{"krate":0,"index":625}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_maybe_done.rs","byte_start":113718,"byte_end":113730,"line_start":69,"line_end":69,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":628}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_maybe_done.rs","byte_start":113958,"byte_end":113970,"line_start":78,"line_end":78,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":631},{"krate":0,"index":5695}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\option.rs","byte_start":115516,"byte_end":115528,"line_start":30,"line_end":30,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":646},{"krate":0,"index":647}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\option.rs","byte_start":115861,"byte_end":115873,"line_start":44,"line_end":44,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":650}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\option.rs","byte_start":116056,"byte_end":116068,"line_start":53,"line_end":53,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":653}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\poll_fn.rs","byte_start":116478,"byte_end":116484,"line_start":14,"line_end":14,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\poll_fn.rs","byte_start":117154,"byte_end":117160,"line_start":42,"line_end":42,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":672}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\poll_fn.rs","byte_start":117302,"byte_end":117308,"line_start":48,"line_end":48,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":676},{"krate":0,"index":677}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Inherent","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\ready.rs","byte_start":117785,"byte_end":117790,"line_start":10,"line_end":10,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":691}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\ready.rs","byte_start":117969,"byte_end":117974,"line_start":18,"line_end":18,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\ready.rs","byte_start":118006,"byte_end":118011,"line_start":20,"line_end":20,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":696}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\ready.rs","byte_start":118108,"byte_end":118113,"line_start":26,"line_end":26,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":699},{"krate":0,"index":700}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join_all.rs","byte_start":125405,"byte_end":125412,"line_start":33,"line_end":33,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":777}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join_all.rs","byte_start":127077,"byte_end":127084,"line_start":89,"line_end":89,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":782},{"krate":0,"index":783}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join_all.rs","byte_start":127781,"byte_end":127788,"line_start":116,"line_end":116,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":787}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\select.rs","byte_start":128258,"byte_end":128264,"line_start":13,"line_end":13,"column_start":36,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\select.rs","byte_start":129624,"byte_end":129630,"line_start":53,"line_end":53,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":812},{"krate":0,"index":813}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\select.rs","byte_start":130333,"byte_end":130339,"line_start":75,"line_end":75,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":817}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\select_all.rs","byte_start":130876,"byte_end":130885,"line_start":16,"line_end":16,"column_start":28,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\select_all.rs","byte_start":131865,"byte_end":131874,"line_start":44,"line_end":44,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":837},{"krate":0,"index":838}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\select_all.rs","byte_start":132580,"byte_end":132589,"line_start":65,"line_end":65,"column_start":49,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":842}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join_all.rs","byte_start":140806,"byte_end":140816,"line_start":39,"line_end":39,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":920}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join_all.rs","byte_start":142578,"byte_end":142588,"line_start":101,"line_end":101,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":925},{"krate":0,"index":926}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join_all.rs","byte_start":143761,"byte_end":143771,"line_start":138,"line_end":138,"column_start":40,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":930}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_select.rs","byte_start":144253,"byte_end":144262,"line_start":13,"line_end":13,"column_start":36,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_select.rs","byte_start":145968,"byte_end":145977,"line_start":56,"line_end":56,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":955},{"krate":0,"index":956}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\select_ok.rs","byte_start":147330,"byte_end":147338,"line_start":16,"line_end":16,"column_start":28,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\select_ok.rs","byte_start":148308,"byte_end":148316,"line_start":42,"line_end":42,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":978},{"krate":0,"index":979}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\select_ok.rs","byte_start":149760,"byte_end":149768,"line_start":79,"line_end":79,"column_start":52,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":983}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Inherent","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\either.rs","byte_start":150415,"byte_end":150421,"line_start":20,"line_end":20,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1007}],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Inherent","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\either.rs","byte_start":150806,"byte_end":150812,"line_start":32,"line_end":32,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1012}],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Inherent","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\either.rs","byte_start":151193,"byte_end":151199,"line_start":44,"line_end":44,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1015}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\either.rs","byte_start":151440,"byte_end":151446,"line_start":54,"line_end":54,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1019},{"krate":0,"index":6596}],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\either.rs","byte_start":151816,"byte_end":151822,"line_start":71,"line_end":71,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1023}],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\either.rs","byte_start":152098,"byte_end":152104,"line_start":84,"line_end":84,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1027},{"krate":0,"index":6597}],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\either.rs","byte_start":152487,"byte_end":152493,"line_start":101,"line_end":101,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1031}],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\either.rs","byte_start":152800,"byte_end":152806,"line_start":115,"line_end":115,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1036},{"krate":0,"index":6598},{"krate":0,"index":6599},{"krate":0,"index":6600},{"krate":0,"index":6601}],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Inherent","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\abortable.rs","byte_start":8324258,"byte_end":8324267,"line_start":20,"line_end":20,"column_start":11,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":6617}],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Inherent","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\abortable.rs","byte_start":8325569,"byte_end":8325580,"line_start":62,"line_end":62,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6619}],"docs":"","sig":null,"attributes":[]},{"id":311,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\abortable.rs","byte_start":8327456,"byte_end":8327463,"line_start":126,"line_end":126,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6623}],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\abortable.rs","byte_start":8327646,"byte_end":8327653,"line_start":133,"line_end":133,"column_start":28,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\abortable.rs","byte_start":8327679,"byte_end":8327688,"line_start":135,"line_end":135,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":6627},{"krate":0,"index":6628}],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Inherent","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\abortable.rs","byte_start":8328662,"byte_end":8328673,"line_start":164,"line_end":164,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6630}],"docs":"","sig":null,"attributes":[]},{"id":320,"kind":"Inherent","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\chain.rs","byte_start":207654,"byte_end":207659,"line_start":18,"line_end":18,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1086}],"docs":"","sig":null,"attributes":[]},{"id":321,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\chain.rs","byte_start":207928,"byte_end":207933,"line_start":30,"line_end":30,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1090}],"docs":"","sig":null,"attributes":[]},{"id":322,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\chain.rs","byte_start":208138,"byte_end":208143,"line_start":39,"line_end":39,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1094},{"krate":0,"index":6721},{"krate":0,"index":1095}],"docs":"","sig":null,"attributes":[]},{"id":328,"kind":"Inherent","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\collect.rs","byte_start":209741,"byte_end":209748,"line_start":18,"line_end":18,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1115},{"krate":0,"index":1116}],"docs":"","sig":null,"attributes":[]},{"id":329,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\collect.rs","byte_start":210059,"byte_end":210066,"line_start":31,"line_end":31,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1120}],"docs":"","sig":null,"attributes":[]},{"id":330,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\collect.rs","byte_start":210242,"byte_end":210249,"line_start":40,"line_end":40,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1124},{"krate":0,"index":6777}],"docs":"","sig":null,"attributes":[]},{"id":336,"kind":"Inherent","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\concat.rs","byte_start":211202,"byte_end":211208,"line_start":17,"line_end":17,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1142}],"docs":"","sig":null,"attributes":[]},{"id":337,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\concat.rs","byte_start":211483,"byte_end":211489,"line_start":30,"line_end":30,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1145},{"krate":0,"index":6822}],"docs":"","sig":null,"attributes":[]},{"id":338,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\concat.rs","byte_start":212298,"byte_end":212304,"line_start":61,"line_end":61,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1148}],"docs":"","sig":null,"attributes":[]},{"id":344,"kind":"Inherent","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\enumerate.rs","byte_start":212984,"byte_end":212993,"line_start":18,"line_end":18,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1164},{"krate":0,"index":6867},{"krate":0,"index":6868},{"krate":0,"index":6869},{"krate":0,"index":6870}],"docs":"","sig":null,"attributes":[]},{"id":345,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\enumerate.rs","byte_start":213226,"byte_end":213235,"line_start":29,"line_end":29,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1167}],"docs":"","sig":null,"attributes":[]},{"id":346,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\enumerate.rs","byte_start":213353,"byte_end":213362,"line_start":35,"line_end":35,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1170},{"krate":0,"index":6871},{"krate":0,"index":1171}],"docs":"","sig":null,"attributes":[]},{"id":347,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\enumerate.rs","byte_start":214080,"byte_end":214089,"line_start":63,"line_end":63,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1175},{"krate":0,"index":6872},{"krate":0,"index":6873},{"krate":0,"index":6874},{"krate":0,"index":6875}],"docs":"","sig":null,"attributes":[]},{"id":353,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\filter.rs","byte_start":214799,"byte_end":214805,"line_start":25,"line_end":25,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1196}],"docs":"","sig":null,"attributes":[]},{"id":354,"kind":"Inherent","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\filter.rs","byte_start":215197,"byte_end":215203,"line_start":40,"line_end":40,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1202},{"krate":0,"index":6944},{"krate":0,"index":6945},{"krate":0,"index":6946},{"krate":0,"index":6947}],"docs":"","sig":null,"attributes":[]},{"id":355,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\filter.rs","byte_start":215597,"byte_end":215603,"line_start":57,"line_end":57,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1207}],"docs":"","sig":null,"attributes":[]},{"id":356,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\filter.rs","byte_start":215871,"byte_end":215877,"line_start":67,"line_end":67,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1213},{"krate":0,"index":6948},{"krate":0,"index":1214}],"docs":"","sig":null,"attributes":[]},{"id":357,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\filter.rs","byte_start":217330,"byte_end":217336,"line_start":111,"line_end":111,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1220},{"krate":0,"index":6949},{"krate":0,"index":6950},{"krate":0,"index":6951},{"krate":0,"index":6952}],"docs":"","sig":null,"attributes":[]},{"id":363,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\filter_map.rs","byte_start":218078,"byte_end":218087,"line_start":22,"line_end":22,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1241}],"docs":"","sig":null,"attributes":[]},{"id":364,"kind":"Inherent","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\filter_map.rs","byte_start":218384,"byte_end":218393,"line_start":35,"line_end":35,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1246},{"krate":0,"index":7018},{"krate":0,"index":7019},{"krate":0,"index":7020},{"krate":0,"index":7021}],"docs":"","sig":null,"attributes":[]},{"id":365,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\filter_map.rs","byte_start":218694,"byte_end":218703,"line_start":47,"line_end":47,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1252}],"docs":"","sig":null,"attributes":[]},{"id":366,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\filter_map.rs","byte_start":218980,"byte_end":218989,"line_start":57,"line_end":57,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1258},{"krate":0,"index":7022},{"krate":0,"index":1259}],"docs":"","sig":null,"attributes":[]},{"id":367,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\filter_map.rs","byte_start":220481,"byte_end":220490,"line_start":102,"line_end":102,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1265},{"krate":0,"index":7023},{"krate":0,"index":7024},{"krate":0,"index":7025},{"krate":0,"index":7026}],"docs":"","sig":null,"attributes":[]},{"id":373,"kind":"Inherent","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\flatten.rs","byte_start":221118,"byte_end":221125,"line_start":19,"line_end":19,"column_start":13,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1282},{"krate":0,"index":7083},{"krate":0,"index":7084},{"krate":0,"index":7085},{"krate":0,"index":7086}],"docs":"","sig":null,"attributes":[]},{"id":374,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\flatten.rs","byte_start":221294,"byte_end":221301,"line_start":27,"line_end":27,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1285}],"docs":"","sig":null,"attributes":[]},{"id":375,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\flatten.rs","byte_start":221493,"byte_end":221500,"line_start":37,"line_end":37,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1288},{"krate":0,"index":7087}],"docs":"","sig":null,"attributes":[]},{"id":376,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\flatten.rs","byte_start":222360,"byte_end":222367,"line_start":66,"line_end":66,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1292},{"krate":0,"index":7088},{"krate":0,"index":7089},{"krate":0,"index":7090},{"krate":0,"index":7091}],"docs":"","sig":null,"attributes":[]},{"id":387,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\fold.rs","byte_start":222991,"byte_end":222995,"line_start":20,"line_end":20,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1311}],"docs":"","sig":null,"attributes":[]},{"id":388,"kind":"Inherent","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\fold.rs","byte_start":223351,"byte_end":223355,"line_start":35,"line_end":35,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1317}],"docs":"","sig":null,"attributes":[]},{"id":389,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\fold.rs","byte_start":223688,"byte_end":223692,"line_start":50,"line_end":50,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1323}],"docs":"","sig":null,"attributes":[]},{"id":390,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\fold.rs","byte_start":223939,"byte_end":223943,"line_start":60,"line_end":60,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1329},{"krate":0,"index":7238}],"docs":"","sig":null,"attributes":[]},{"id":396,"kind":"Inherent","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\forward.rs","byte_start":225561,"byte_end":225568,"line_start":21,"line_end":21,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1349}],"docs":"","sig":null,"attributes":[]},{"id":397,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\forward.rs","byte_start":225816,"byte_end":225823,"line_start":31,"line_end":31,"column_start":39,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1355}],"docs":"","sig":null,"attributes":[]},{"id":398,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\forward.rs","byte_start":226025,"byte_end":226032,"line_start":41,"line_end":41,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1361},{"krate":0,"index":7309}],"docs":"","sig":null,"attributes":[]},{"id":409,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\for_each.rs","byte_start":227835,"byte_end":227842,"line_start":19,"line_end":19,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1381}],"docs":"","sig":null,"attributes":[]},{"id":410,"kind":"Inherent","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\for_each.rs","byte_start":228135,"byte_end":228142,"line_start":32,"line_end":32,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1386}],"docs":"","sig":null,"attributes":[]},{"id":411,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\for_each.rs","byte_start":228436,"byte_end":228443,"line_start":46,"line_end":46,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1391}],"docs":"","sig":null,"attributes":[]},{"id":412,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\for_each.rs","byte_start":228694,"byte_end":228701,"line_start":56,"line_end":56,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1396},{"krate":0,"index":7443}],"docs":"","sig":null,"attributes":[]},{"id":418,"kind":"Inherent","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\fuse.rs","byte_start":229797,"byte_end":229801,"line_start":18,"line_end":18,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1412},{"krate":0,"index":1413},{"krate":0,"index":7488},{"krate":0,"index":7489},{"krate":0,"index":7490},{"krate":0,"index":7491}],"docs":"","sig":null,"attributes":[]},{"id":419,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\fuse.rs","byte_start":230302,"byte_end":230306,"line_start":35,"line_end":35,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1416}],"docs":"","sig":null,"attributes":[]},{"id":420,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\fuse.rs","byte_start":230404,"byte_end":230408,"line_start":41,"line_end":41,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1419},{"krate":0,"index":7492},{"krate":0,"index":1420}],"docs":"","sig":null,"attributes":[]},{"id":421,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\fuse.rs","byte_start":231153,"byte_end":231157,"line_start":74,"line_end":74,"column_start":51,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1424},{"krate":0,"index":7493},{"krate":0,"index":7494},{"krate":0,"index":7495},{"krate":0,"index":7496}],"docs":"","sig":null,"attributes":[]},{"id":422,"kind":"Inherent","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\into_future.rs","byte_start":231644,"byte_end":231656,"line_start":14,"line_end":14,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1438},{"krate":0,"index":1439},{"krate":0,"index":1440},{"krate":0,"index":1441},{"krate":0,"index":1442}],"docs":"","sig":null,"attributes":[]},{"id":423,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\into_future.rs","byte_start":234170,"byte_end":234182,"line_start":72,"line_end":72,"column_start":42,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1445}],"docs":"","sig":null,"attributes":[]},{"id":424,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\into_future.rs","byte_start":234302,"byte_end":234314,"line_start":78,"line_end":78,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1448},{"krate":0,"index":1449}],"docs":"","sig":null,"attributes":[]},{"id":435,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\map.rs","byte_start":235173,"byte_end":235176,"line_start":20,"line_end":20,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1468}],"docs":"","sig":null,"attributes":[]},{"id":436,"kind":"Inherent","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\map.rs","byte_start":235391,"byte_end":235394,"line_start":31,"line_end":31,"column_start":13,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1472},{"krate":0,"index":7639},{"krate":0,"index":7640},{"krate":0,"index":7641},{"krate":0,"index":7642}],"docs":"","sig":null,"attributes":[]},{"id":437,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\map.rs","byte_start":235568,"byte_end":235571,"line_start":39,"line_end":39,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1476}],"docs":"","sig":null,"attributes":[]},{"id":438,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\map.rs","byte_start":235745,"byte_end":235748,"line_start":48,"line_end":48,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1480},{"krate":0,"index":7643},{"krate":0,"index":1481}],"docs":"","sig":null,"attributes":[]},{"id":439,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\map.rs","byte_start":236343,"byte_end":236346,"line_start":72,"line_end":72,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1486},{"krate":0,"index":7645},{"krate":0,"index":7646},{"krate":0,"index":7647},{"krate":0,"index":7648}],"docs":"","sig":null,"attributes":[]},{"id":445,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\next.rs","byte_start":236919,"byte_end":236923,"line_start":14,"line_end":14,"column_start":36,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":446,"kind":"Inherent","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\next.rs","byte_start":236974,"byte_end":236978,"line_start":16,"line_end":16,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1505}],"docs":"","sig":null,"attributes":[]},{"id":447,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\next.rs","byte_start":237129,"byte_end":237133,"line_start":22,"line_end":22,"column_start":56,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1508}],"docs":"","sig":null,"attributes":[]},{"id":448,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\next.rs","byte_start":237272,"byte_end":237276,"line_start":28,"line_end":28,"column_start":46,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1511},{"krate":0,"index":1512}],"docs":"","sig":null,"attributes":[]},{"id":449,"kind":"Inherent","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\select_next_some.rs","byte_start":237925,"byte_end":237939,"line_start":15,"line_end":15,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1527}],"docs":"","sig":null,"attributes":[]},{"id":450,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\select_next_some.rs","byte_start":238100,"byte_end":238114,"line_start":21,"line_end":21,"column_start":56,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":1530}],"docs":"","sig":null,"attributes":[]},{"id":451,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\select_next_some.rs","byte_start":238258,"byte_end":238272,"line_start":27,"line_end":27,"column_start":51,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":1533},{"krate":0,"index":1534}],"docs":"","sig":null,"attributes":[]},{"id":457,"kind":"Inherent","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\peek.rs","byte_start":239458,"byte_end":239466,"line_start":25,"line_end":25,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1557},{"krate":0,"index":7811},{"krate":0,"index":7812},{"krate":0,"index":7813},{"krate":0,"index":7814},{"krate":0,"index":1558},{"krate":0,"index":7815}],"docs":"","sig":null,"attributes":[]},{"id":458,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\peek.rs","byte_start":240692,"byte_end":240700,"line_start":65,"line_end":65,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1561}],"docs":"","sig":null,"attributes":[]},{"id":459,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\peek.rs","byte_start":240842,"byte_end":240850,"line_start":71,"line_end":71,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1564},{"krate":0,"index":7816},{"krate":0,"index":1565}],"docs":"","sig":null,"attributes":[]},{"id":460,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\peek.rs","byte_start":241682,"byte_end":241690,"line_start":98,"line_end":98,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1569},{"krate":0,"index":7817},{"krate":0,"index":7818},{"krate":0,"index":7819},{"krate":0,"index":7820}],"docs":"","sig":null,"attributes":[]},{"id":466,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\peek.rs","byte_start":242055,"byte_end":242059,"line_start":114,"line_end":114,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1572}],"docs":"","sig":null,"attributes":[]},{"id":467,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\peek.rs","byte_start":242330,"byte_end":242334,"line_start":126,"line_end":126,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1575}],"docs":"","sig":null,"attributes":[]},{"id":468,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\peek.rs","byte_start":242445,"byte_end":242449,"line_start":132,"line_end":132,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1579},{"krate":0,"index":1580}],"docs":"","sig":null,"attributes":[]},{"id":474,"kind":"Inherent","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\skip.rs","byte_start":243306,"byte_end":243310,"line_start":18,"line_end":18,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1598},{"krate":0,"index":7913},{"krate":0,"index":7914},{"krate":0,"index":7915},{"krate":0,"index":7916}],"docs":"","sig":null,"attributes":[]},{"id":475,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\skip.rs","byte_start":243538,"byte_end":243542,"line_start":29,"line_end":29,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1601}],"docs":"","sig":null,"attributes":[]},{"id":476,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\skip.rs","byte_start":243660,"byte_end":243664,"line_start":35,"line_end":35,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1604},{"krate":0,"index":7917},{"krate":0,"index":1605}],"docs":"","sig":null,"attributes":[]},{"id":477,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\skip.rs","byte_start":244616,"byte_end":244620,"line_start":71,"line_end":71,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1609},{"krate":0,"index":7918},{"krate":0,"index":7919},{"krate":0,"index":7920},{"krate":0,"index":7921}],"docs":"","sig":null,"attributes":[]},{"id":483,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\skip_while.rs","byte_start":245337,"byte_end":245346,"line_start":23,"line_end":23,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1629}],"docs":"","sig":null,"attributes":[]},{"id":484,"kind":"Inherent","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\skip_while.rs","byte_start":245798,"byte_end":245807,"line_start":39,"line_end":39,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1634},{"krate":0,"index":7993},{"krate":0,"index":7994},{"krate":0,"index":7995},{"krate":0,"index":7996}],"docs":"","sig":null,"attributes":[]},{"id":485,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\skip_while.rs","byte_start":246236,"byte_end":246245,"line_start":57,"line_end":57,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1639}],"docs":"","sig":null,"attributes":[]},{"id":486,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\skip_while.rs","byte_start":246505,"byte_end":246514,"line_start":67,"line_end":67,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1644},{"krate":0,"index":7997},{"krate":0,"index":1645}],"docs":"","sig":null,"attributes":[]},{"id":487,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\skip_while.rs","byte_start":248210,"byte_end":248219,"line_start":121,"line_end":121,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1651},{"krate":0,"index":7998},{"krate":0,"index":7999},{"krate":0,"index":8000},{"krate":0,"index":8001}],"docs":"","sig":null,"attributes":[]},{"id":493,"kind":"Inherent","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\take.rs","byte_start":248855,"byte_end":248859,"line_start":19,"line_end":19,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1668},{"krate":0,"index":8046},{"krate":0,"index":8047},{"krate":0,"index":8048},{"krate":0,"index":8049}],"docs":"","sig":null,"attributes":[]},{"id":494,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\take.rs","byte_start":249069,"byte_end":249073,"line_start":30,"line_end":30,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1671},{"krate":0,"index":8050},{"krate":0,"index":1672}],"docs":"","sig":null,"attributes":[]},{"id":495,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\take.rs","byte_start":250112,"byte_end":250116,"line_start":73,"line_end":73,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1675}],"docs":"","sig":null,"attributes":[]},{"id":496,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\take.rs","byte_start":250364,"byte_end":250368,"line_start":83,"line_end":83,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1679},{"krate":0,"index":8051},{"krate":0,"index":8052},{"krate":0,"index":8053},{"krate":0,"index":8054}],"docs":"","sig":null,"attributes":[]},{"id":502,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\take_while.rs","byte_start":251074,"byte_end":251083,"line_start":23,"line_end":23,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1699}],"docs":"","sig":null,"attributes":[]},{"id":503,"kind":"Inherent","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\take_while.rs","byte_start":251531,"byte_end":251540,"line_start":39,"line_end":39,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1704},{"krate":0,"index":8126},{"krate":0,"index":8127},{"krate":0,"index":8128},{"krate":0,"index":8129}],"docs":"","sig":null,"attributes":[]},{"id":504,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\take_while.rs","byte_start":251962,"byte_end":251971,"line_start":57,"line_end":57,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1709},{"krate":0,"index":8130},{"krate":0,"index":1710}],"docs":"","sig":null,"attributes":[]},{"id":505,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\take_while.rs","byte_start":253580,"byte_end":253589,"line_start":111,"line_end":111,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1715}],"docs":"","sig":null,"attributes":[]},{"id":506,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\take_while.rs","byte_start":253957,"byte_end":253966,"line_start":123,"line_end":123,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1721},{"krate":0,"index":8131},{"krate":0,"index":8132},{"krate":0,"index":8133},{"krate":0,"index":8134}],"docs":"","sig":null,"attributes":[]},{"id":512,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\take_until.rs","byte_start":254912,"byte_end":254921,"line_start":28,"line_end":28,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1740}],"docs":"","sig":null,"attributes":[]},{"id":513,"kind":"Inherent","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\take_until.rs","byte_start":255248,"byte_end":255257,"line_start":42,"line_end":42,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1744},{"krate":0,"index":8193},{"krate":0,"index":8194},{"krate":0,"index":8195},{"krate":0,"index":8196},{"krate":0,"index":1745},{"krate":0,"index":1746},{"krate":0,"index":1747}],"docs":"","sig":null,"attributes":[]},{"id":514,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\take_until.rs","byte_start":257450,"byte_end":257459,"line_start":117,"line_end":117,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1751},{"krate":0,"index":8197},{"krate":0,"index":1752}],"docs":"","sig":null,"attributes":[]},{"id":515,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\take_until.rs","byte_start":258529,"byte_end":258538,"line_start":158,"line_end":158,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1756}],"docs":"","sig":null,"attributes":[]},{"id":516,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\take_until.rs","byte_start":258775,"byte_end":258784,"line_start":170,"line_end":170,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1761},{"krate":0,"index":8198},{"krate":0,"index":8199},{"krate":0,"index":8200},{"krate":0,"index":8201}],"docs":"","sig":null,"attributes":[]},{"id":522,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\then.rs","byte_start":259423,"byte_end":259427,"line_start":21,"line_end":21,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1781}],"docs":"","sig":null,"attributes":[]},{"id":523,"kind":"Inherent","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\then.rs","byte_start":259717,"byte_end":259721,"line_start":34,"line_end":34,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1786},{"krate":0,"index":8267},{"krate":0,"index":8268},{"krate":0,"index":8269},{"krate":0,"index":8270}],"docs":"","sig":null,"attributes":[]},{"id":524,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\then.rs","byte_start":260030,"byte_end":260034,"line_start":49,"line_end":49,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1791}],"docs":"","sig":null,"attributes":[]},{"id":525,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\then.rs","byte_start":260272,"byte_end":260276,"line_start":59,"line_end":59,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1796},{"krate":0,"index":8271},{"krate":0,"index":1797}],"docs":"","sig":null,"attributes":[]},{"id":526,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\then.rs","byte_start":261524,"byte_end":261528,"line_start":101,"line_end":101,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1803},{"krate":0,"index":8272},{"krate":0,"index":8273},{"krate":0,"index":8274},{"krate":0,"index":8275}],"docs":"","sig":null,"attributes":[]},{"id":532,"kind":"Inherent","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\zip.rs","byte_start":262187,"byte_end":262190,"line_start":21,"line_end":21,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1823},{"krate":0,"index":1824},{"krate":0,"index":1825},{"krate":0,"index":1826},{"krate":0,"index":1827}],"docs":"","sig":null,"attributes":[]},{"id":533,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\zip.rs","byte_start":263941,"byte_end":263944,"line_start":67,"line_end":67,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1831}],"docs":"","sig":null,"attributes":[]},{"id":534,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\zip.rs","byte_start":264135,"byte_end":264138,"line_start":75,"line_end":75,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1835},{"krate":0,"index":8338},{"krate":0,"index":1836}],"docs":"","sig":null,"attributes":[]},{"id":540,"kind":"Inherent","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\chunks.rs","byte_start":266809,"byte_end":266815,"line_start":22,"line_end":22,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1855},{"krate":0,"index":1856},{"krate":0,"index":8386},{"krate":0,"index":8387},{"krate":0,"index":8388},{"krate":0,"index":8389}],"docs":"","sig":null,"attributes":[]},{"id":541,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\chunks.rs","byte_start":267326,"byte_end":267332,"line_start":41,"line_end":41,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1859},{"krate":0,"index":8390},{"krate":0,"index":1860}],"docs":"","sig":null,"attributes":[]},{"id":542,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\chunks.rs","byte_start":268999,"byte_end":269005,"line_start":91,"line_end":91,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1863}],"docs":"","sig":null,"attributes":[]},{"id":543,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\chunks.rs","byte_start":269228,"byte_end":269234,"line_start":99,"line_end":99,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1867},{"krate":0,"index":8391},{"krate":0,"index":8392},{"krate":0,"index":8393},{"krate":0,"index":8394}],"docs":"","sig":null,"attributes":[]},{"id":549,"kind":"Inherent","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\ready_chunks.rs","byte_start":269945,"byte_end":269956,"line_start":22,"line_end":22,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1886},{"krate":0,"index":8442},{"krate":0,"index":8443},{"krate":0,"index":8444},{"krate":0,"index":8445}],"docs":"","sig":null,"attributes":[]},{"id":550,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\ready_chunks.rs","byte_start":270321,"byte_end":270332,"line_start":36,"line_end":36,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1889},{"krate":0,"index":8446},{"krate":0,"index":1890}],"docs":"","sig":null,"attributes":[]},{"id":551,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\ready_chunks.rs","byte_start":272449,"byte_end":272460,"line_start":97,"line_end":97,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1893}],"docs":"","sig":null,"attributes":[]},{"id":552,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\ready_chunks.rs","byte_start":272683,"byte_end":272694,"line_start":105,"line_end":105,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1897},{"krate":0,"index":8447},{"krate":0,"index":8448},{"krate":0,"index":8449},{"krate":0,"index":8450}],"docs":"","sig":null,"attributes":[]},{"id":558,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\scan.rs","byte_start":273401,"byte_end":273405,"line_start":26,"line_end":26,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1923}],"docs":"","sig":null,"attributes":[]},{"id":559,"kind":"Inherent","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\scan.rs","byte_start":273891,"byte_end":273895,"line_start":43,"line_end":43,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1930}],"docs":"","sig":null,"attributes":[]},{"id":560,"kind":"Inherent","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\scan.rs","byte_start":274059,"byte_end":274063,"line_start":50,"line_end":50,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1937},{"krate":0,"index":8526},{"krate":0,"index":8527},{"krate":0,"index":8528},{"krate":0,"index":8529}],"docs":"","sig":null,"attributes":[]},{"id":561,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\scan.rs","byte_start":274530,"byte_end":274534,"line_start":70,"line_end":70,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1944},{"krate":0,"index":8530},{"krate":0,"index":1945}],"docs":"","sig":null,"attributes":[]},{"id":562,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\scan.rs","byte_start":275797,"byte_end":275801,"line_start":115,"line_end":115,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1952}],"docs":"","sig":null,"attributes":[]},{"id":563,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\scan.rs","byte_start":276171,"byte_end":276175,"line_start":128,"line_end":128,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1958},{"krate":0,"index":8531},{"krate":0,"index":8532},{"krate":0,"index":8533},{"krate":0,"index":8534}],"docs":"","sig":null,"attributes":[]},{"id":569,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\buffer_unordered.rs","byte_start":8361628,"byte_end":8361643,"line_start":25,"line_end":25,"column_start":25,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":8555}],"docs":"","sig":null,"attributes":[]},{"id":570,"kind":"Inherent","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\buffer_unordered.rs","byte_start":8361975,"byte_end":8361990,"line_start":38,"line_end":38,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":8558},{"krate":0,"index":8707},{"krate":0,"index":8708},{"krate":0,"index":8709},{"krate":0,"index":8710}],"docs":"","sig":null,"attributes":[]},{"id":571,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\buffer_unordered.rs","byte_start":8362403,"byte_end":8362418,"line_start":58,"line_end":58,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":8561},{"krate":0,"index":11844},{"krate":0,"index":8562}],"docs":"","sig":null,"attributes":[]},{"id":572,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\buffer_unordered.rs","byte_start":8363945,"byte_end":8363960,"line_start":108,"line_end":108,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":8565}],"docs":"","sig":null,"attributes":[]},{"id":573,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\buffer_unordered.rs","byte_start":8364244,"byte_end":8364259,"line_start":120,"line_end":120,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":8569},{"krate":0,"index":8711},{"krate":0,"index":8712},{"krate":0,"index":8713},{"krate":0,"index":8714}],"docs":"","sig":null,"attributes":[]},{"id":579,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\buffered.rs","byte_start":8365001,"byte_end":8365009,"line_start":25,"line_end":25,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":8589}],"docs":"","sig":null,"attributes":[]},{"id":580,"kind":"Inherent","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\buffered.rs","byte_start":8365356,"byte_end":8365364,"line_start":39,"line_end":39,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":8592},{"krate":0,"index":8715},{"krate":0,"index":8716},{"krate":0,"index":8717},{"krate":0,"index":8718}],"docs":"","sig":null,"attributes":[]},{"id":581,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\buffered.rs","byte_start":8365701,"byte_end":8365709,"line_start":55,"line_end":55,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":8595},{"krate":0,"index":11799},{"krate":0,"index":8596}],"docs":"","sig":null,"attributes":[]},{"id":582,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\buffered.rs","byte_start":8367292,"byte_end":8367300,"line_start":107,"line_end":107,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":8600},{"krate":0,"index":8719},{"krate":0,"index":8720},{"krate":0,"index":8721},{"krate":0,"index":8722}],"docs":"","sig":null,"attributes":[]},{"id":588,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\for_each_concurrent.rs","byte_start":8368075,"byte_end":8368092,"line_start":22,"line_end":22,"column_start":33,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":8623}],"docs":"","sig":null,"attributes":[]},{"id":589,"kind":"Inherent","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\for_each_concurrent.rs","byte_start":8368438,"byte_end":8368455,"line_start":36,"line_end":36,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":8628}],"docs":"","sig":null,"attributes":[]},{"id":590,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\for_each_concurrent.rs","byte_start":8368926,"byte_end":8368943,"line_start":52,"line_end":52,"column_start":34,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":8633}],"docs":"","sig":null,"attributes":[]},{"id":591,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\for_each_concurrent.rs","byte_start":8369185,"byte_end":8369202,"line_start":62,"line_end":62,"column_start":29,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":8638},{"krate":0,"index":11730}],"docs":"","sig":null,"attributes":[]},{"id":592,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\split.rs","byte_start":8371401,"byte_end":8371412,"line_start":14,"line_end":14,"column_start":19,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":593,"kind":"Inherent","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\split.rs","byte_start":8371435,"byte_end":8371446,"line_start":16,"line_end":16,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":8653}],"docs":"","sig":null,"attributes":[]},{"id":594,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\split.rs","byte_start":8371875,"byte_end":8371886,"line_start":27,"line_end":27,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":8657},{"krate":0,"index":8658}],"docs":"","sig":null,"attributes":[]},{"id":595,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\split.rs","byte_start":8372437,"byte_end":8372446,"line_start":51,"line_end":51,"column_start":25,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":596,"kind":"Inherent","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\split.rs","byte_start":8372494,"byte_end":8372503,"line_start":53,"line_end":53,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":8668}],"docs":"","sig":null,"attributes":[]},{"id":597,"kind":"Inherent","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\split.rs","byte_start":8372991,"byte_end":8373000,"line_start":64,"line_end":64,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":8673},{"krate":0,"index":8674}],"docs":"","sig":null,"attributes":[]},{"id":598,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\split.rs","byte_start":8373668,"byte_end":8373677,"line_start":81,"line_end":81,"column_start":42,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":8678},{"krate":0,"index":8679},{"krate":0,"index":8680},{"krate":0,"index":8681},{"krate":0,"index":8682}],"docs":"","sig":null,"attributes":[]},{"id":599,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\split.rs","byte_start":8375236,"byte_end":8375248,"line_start":124,"line_end":124,"column_start":30,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":8695}],"docs":"","sig":null,"attributes":[]},{"id":600,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\split.rs","byte_start":8375450,"byte_end":8375462,"line_start":132,"line_end":132,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":8699}],"docs":"","sig":null,"attributes":[]},{"id":601,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\split.rs","byte_start":8375711,"byte_end":8375723,"line_start":139,"line_end":139,"column_start":53,"column_end":65},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":607,"kind":"Inherent","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\catch_unwind.rs","byte_start":276794,"byte_end":276805,"line_start":18,"line_end":18,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1978},{"krate":0,"index":8783},{"krate":0,"index":8784},{"krate":0,"index":8785},{"krate":0,"index":8786}],"docs":"","sig":null,"attributes":[]},{"id":608,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\catch_unwind.rs","byte_start":277015,"byte_end":277026,"line_start":26,"line_end":26,"column_start":42,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1981},{"krate":0,"index":8787},{"krate":0,"index":1982}],"docs":"","sig":null,"attributes":[]},{"id":609,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\catch_unwind.rs","byte_start":277973,"byte_end":277984,"line_start":63,"line_end":63,"column_start":52,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":1985}],"docs":"","sig":null,"attributes":[]},{"id":610,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":166849,"byte_end":166850,"line_start":194,"line_end":194,"column_start":31,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":616,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\and_then.rs","byte_start":309188,"byte_end":309195,"line_start":21,"line_end":21,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2150}],"docs":"","sig":null,"attributes":[]},{"id":617,"kind":"Inherent","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\and_then.rs","byte_start":309488,"byte_end":309495,"line_start":34,"line_end":34,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2155},{"krate":0,"index":8855},{"krate":0,"index":8856},{"krate":0,"index":8857},{"krate":0,"index":8858}],"docs":"","sig":null,"attributes":[]},{"id":618,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\and_then.rs","byte_start":309788,"byte_end":309795,"line_start":46,"line_end":46,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2160},{"krate":0,"index":8859},{"krate":0,"index":2161}],"docs":"","sig":null,"attributes":[]},{"id":619,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\and_then.rs","byte_start":311009,"byte_end":311016,"line_start":86,"line_end":86,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2166}],"docs":"","sig":null,"attributes":[]},{"id":620,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\and_then.rs","byte_start":311374,"byte_end":311381,"line_start":98,"line_end":98,"column_start":38,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2172},{"krate":0,"index":8860},{"krate":0,"index":8861},{"krate":0,"index":8862},{"krate":0,"index":8863}],"docs":"","sig":null,"attributes":[]},{"id":641,"kind":"Inherent","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\into_stream.rs","byte_start":311911,"byte_end":311921,"line_start":17,"line_end":17,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2187},{"krate":0,"index":9160},{"krate":0,"index":9161},{"krate":0,"index":9162},{"krate":0,"index":9163}],"docs":"","sig":null,"attributes":[]},{"id":642,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\into_stream.rs","byte_start":312120,"byte_end":312130,"line_start":26,"line_end":26,"column_start":51,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":2190}],"docs":"","sig":null,"attributes":[]},{"id":643,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\into_stream.rs","byte_start":312251,"byte_end":312261,"line_start":32,"line_end":32,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2193},{"krate":0,"index":2194},{"krate":0,"index":2195}],"docs":"","sig":null,"attributes":[]},{"id":644,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\into_stream.rs","byte_start":312708,"byte_end":312718,"line_start":50,"line_end":50,"column_start":42,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":2199},{"krate":0,"index":9164},{"krate":0,"index":9165},{"krate":0,"index":9166},{"krate":0,"index":9167}],"docs":"","sig":null,"attributes":[]},{"id":660,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\or_else.rs","byte_start":313326,"byte_end":313332,"line_start":21,"line_end":21,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2220}],"docs":"","sig":null,"attributes":[]},{"id":661,"kind":"Inherent","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\or_else.rs","byte_start":313624,"byte_end":313630,"line_start":34,"line_end":34,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2225},{"krate":0,"index":9403},{"krate":0,"index":9404},{"krate":0,"index":9405},{"krate":0,"index":9406}],"docs":"","sig":null,"attributes":[]},{"id":662,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\or_else.rs","byte_start":313920,"byte_end":313926,"line_start":46,"line_end":46,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2230},{"krate":0,"index":9407},{"krate":0,"index":2231}],"docs":"","sig":null,"attributes":[]},{"id":663,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\or_else.rs","byte_start":315274,"byte_end":315280,"line_start":90,"line_end":90,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2236}],"docs":"","sig":null,"attributes":[]},{"id":664,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\or_else.rs","byte_start":315635,"byte_end":315641,"line_start":102,"line_end":102,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2242},{"krate":0,"index":9408},{"krate":0,"index":9409},{"krate":0,"index":9410},{"krate":0,"index":9411}],"docs":"","sig":null,"attributes":[]},{"id":665,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_next.rs","byte_start":316196,"byte_end":316203,"line_start":14,"line_end":14,"column_start":36,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":666,"kind":"Inherent","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_next.rs","byte_start":316257,"byte_end":316264,"line_start":16,"line_end":16,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2261}],"docs":"","sig":null,"attributes":[]},{"id":667,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_next.rs","byte_start":316430,"byte_end":316437,"line_start":22,"line_end":22,"column_start":68,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":2264}],"docs":"","sig":null,"attributes":[]},{"id":668,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_next.rs","byte_start":316579,"byte_end":316586,"line_start":28,"line_end":28,"column_start":49,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2267},{"krate":0,"index":2268}],"docs":"","sig":null,"attributes":[]},{"id":674,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_for_each.rs","byte_start":317328,"byte_end":317338,"line_start":19,"line_end":19,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2287}],"docs":"","sig":null,"attributes":[]},{"id":675,"kind":"Inherent","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_for_each.rs","byte_start":317634,"byte_end":317644,"line_start":32,"line_end":32,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2292}],"docs":"","sig":null,"attributes":[]},{"id":676,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_for_each.rs","byte_start":317958,"byte_end":317968,"line_start":46,"line_end":46,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2297},{"krate":0,"index":9485}],"docs":"","sig":null,"attributes":[]},{"id":682,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_filter.rs","byte_start":319345,"byte_end":319354,"line_start":25,"line_end":25,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2318}],"docs":"","sig":null,"attributes":[]},{"id":683,"kind":"Inherent","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_filter.rs","byte_start":319750,"byte_end":319759,"line_start":40,"line_end":40,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2323},{"krate":0,"index":9554},{"krate":0,"index":9555},{"krate":0,"index":9556},{"krate":0,"index":9557}],"docs":"","sig":null,"attributes":[]},{"id":684,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_filter.rs","byte_start":320063,"byte_end":320072,"line_start":55,"line_end":55,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2328}],"docs":"","sig":null,"attributes":[]},{"id":685,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_filter.rs","byte_start":320341,"byte_end":320350,"line_start":65,"line_end":65,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2333},{"krate":0,"index":9558},{"krate":0,"index":2334}],"docs":"","sig":null,"attributes":[]},{"id":686,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_filter.rs","byte_start":321830,"byte_end":321839,"line_start":109,"line_end":109,"column_start":41,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2341},{"krate":0,"index":9559},{"krate":0,"index":9560},{"krate":0,"index":9561},{"krate":0,"index":9562}],"docs":"","sig":null,"attributes":[]},{"id":692,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_filter_map.rs","byte_start":322523,"byte_end":322535,"line_start":22,"line_end":22,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2363}],"docs":"","sig":null,"attributes":[]},{"id":693,"kind":"Inherent","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_filter_map.rs","byte_start":322835,"byte_end":322847,"line_start":35,"line_end":35,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2368},{"krate":0,"index":9628},{"krate":0,"index":9629},{"krate":0,"index":9630},{"krate":0,"index":9631}],"docs":"","sig":null,"attributes":[]},{"id":694,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_filter_map.rs","byte_start":323052,"byte_end":323064,"line_start":43,"line_end":43,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2374}],"docs":"","sig":null,"attributes":[]},{"id":695,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_filter_map.rs","byte_start":323354,"byte_end":323366,"line_start":53,"line_end":53,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2380},{"krate":0,"index":9632},{"krate":0,"index":2381}],"docs":"","sig":null,"attributes":[]},{"id":696,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_filter_map.rs","byte_start":324921,"byte_end":324933,"line_start":98,"line_end":98,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2387},{"krate":0,"index":9633},{"krate":0,"index":9634},{"krate":0,"index":9635},{"krate":0,"index":9636}],"docs":"","sig":null,"attributes":[]},{"id":702,"kind":"Inherent","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_flatten.rs","byte_start":325536,"byte_end":325546,"line_start":22,"line_end":22,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2404},{"krate":0,"index":9682},{"krate":0,"index":9683},{"krate":0,"index":9684},{"krate":0,"index":9685}],"docs":"","sig":null,"attributes":[]},{"id":703,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_flatten.rs","byte_start":325811,"byte_end":325821,"line_start":35,"line_end":35,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2407}],"docs":"","sig":null,"attributes":[]},{"id":704,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_flatten.rs","byte_start":326067,"byte_end":326077,"line_start":46,"line_end":46,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2410},{"krate":0,"index":9686}],"docs":"","sig":null,"attributes":[]},{"id":705,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_flatten.rs","byte_start":327036,"byte_end":327046,"line_start":76,"line_end":76,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2414},{"krate":0,"index":9687},{"krate":0,"index":9688},{"krate":0,"index":9689},{"krate":0,"index":9690}],"docs":"","sig":null,"attributes":[]},{"id":711,"kind":"Inherent","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_collect.rs","byte_start":327673,"byte_end":327683,"line_start":18,"line_end":18,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2434}],"docs":"","sig":null,"attributes":[]},{"id":712,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_collect.rs","byte_start":327875,"byte_end":327885,"line_start":27,"line_end":27,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2438}],"docs":"","sig":null,"attributes":[]},{"id":713,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_collect.rs","byte_start":328073,"byte_end":328083,"line_start":37,"line_end":37,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2442},{"krate":0,"index":9746}],"docs":"","sig":null,"attributes":[]},{"id":719,"kind":"Inherent","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_concat.rs","byte_start":329094,"byte_end":329103,"line_start":17,"line_end":17,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2456}],"docs":"","sig":null,"attributes":[]},{"id":720,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_concat.rs","byte_start":329369,"byte_end":329378,"line_start":30,"line_end":30,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2459},{"krate":0,"index":9791}],"docs":"","sig":null,"attributes":[]},{"id":726,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_fold.rs","byte_start":330616,"byte_end":330623,"line_start":20,"line_end":20,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2480}],"docs":"","sig":null,"attributes":[]},{"id":727,"kind":"Inherent","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_fold.rs","byte_start":330982,"byte_end":330989,"line_start":35,"line_end":35,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2486}],"docs":"","sig":null,"attributes":[]},{"id":728,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_fold.rs","byte_start":331347,"byte_end":331354,"line_start":50,"line_end":50,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2492}],"docs":"","sig":null,"attributes":[]},{"id":729,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_fold.rs","byte_start":331620,"byte_end":331627,"line_start":60,"line_end":60,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2498},{"krate":0,"index":9870}],"docs":"","sig":null,"attributes":[]},{"id":735,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_unfold.rs","byte_start":335433,"byte_end":335442,"line_start":79,"line_end":79,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2520}],"docs":"","sig":null,"attributes":[]},{"id":736,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_unfold.rs","byte_start":335743,"byte_end":335752,"line_start":92,"line_end":92,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2526},{"krate":0,"index":9935}],"docs":"","sig":null,"attributes":[]},{"id":742,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_skip_while.rs","byte_start":337490,"byte_end":337502,"line_start":24,"line_end":24,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2549}],"docs":"","sig":null,"attributes":[]},{"id":743,"kind":"Inherent","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_skip_while.rs","byte_start":337958,"byte_end":337970,"line_start":40,"line_end":40,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2554},{"krate":0,"index":10007},{"krate":0,"index":10008},{"krate":0,"index":10009},{"krate":0,"index":10010}],"docs":"","sig":null,"attributes":[]},{"id":744,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_skip_while.rs","byte_start":338419,"byte_end":338431,"line_start":58,"line_end":58,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2559},{"krate":0,"index":10011},{"krate":0,"index":2560}],"docs":"","sig":null,"attributes":[]},{"id":745,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_skip_while.rs","byte_start":339984,"byte_end":339996,"line_start":106,"line_end":106,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2565}],"docs":"","sig":null,"attributes":[]},{"id":746,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_skip_while.rs","byte_start":340375,"byte_end":340387,"line_start":118,"line_end":118,"column_start":41,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2572},{"krate":0,"index":10012},{"krate":0,"index":10013},{"krate":0,"index":10014},{"krate":0,"index":10015}],"docs":"","sig":null,"attributes":[]},{"id":752,"kind":"Inherent","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_buffer_unordered.rs","byte_start":8395564,"byte_end":8395582,"line_start":25,"line_end":25,"column_start":10,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":10039},{"krate":0,"index":10088},{"krate":0,"index":10089},{"krate":0,"index":10090},{"krate":0,"index":10091}],"docs":"","sig":null,"attributes":[]},{"id":753,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_buffer_unordered.rs","byte_start":8395941,"byte_end":8395959,"line_start":40,"line_end":40,"column_start":21,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":10042},{"krate":0,"index":11682}],"docs":"","sig":null,"attributes":[]},{"id":754,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_buffer_unordered.rs","byte_start":8397318,"byte_end":8397336,"line_start":80,"line_end":80,"column_start":33,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":10047},{"krate":0,"index":10092},{"krate":0,"index":10093},{"krate":0,"index":10094},{"krate":0,"index":10095}],"docs":"","sig":null,"attributes":[]},{"id":760,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_for_each_concurrent.rs","byte_start":8398172,"byte_end":8398192,"line_start":24,"line_end":24,"column_start":33,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":10071}],"docs":"","sig":null,"attributes":[]},{"id":761,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_for_each_concurrent.rs","byte_start":8398557,"byte_end":8398577,"line_start":38,"line_end":38,"column_start":34,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":10076}],"docs":"","sig":null,"attributes":[]},{"id":762,"kind":"Inherent","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_for_each_concurrent.rs","byte_start":8398828,"byte_end":8398848,"line_start":48,"line_end":48,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":10081}],"docs":"","sig":null,"attributes":[]},{"id":763,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_for_each_concurrent.rs","byte_start":8399340,"byte_end":8399360,"line_start":64,"line_end":64,"column_start":29,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":10086},{"krate":0,"index":11613}],"docs":"","sig":null,"attributes":[]},{"id":764,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":282547,"byte_end":282548,"line_start":128,"line_end":128,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":765,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\iter.rs","byte_start":340762,"byte_end":340766,"line_start":12,"line_end":12,"column_start":19,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":766,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\iter.rs","byte_start":341372,"byte_end":341376,"line_start":36,"line_end":36,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2660},{"krate":0,"index":2661},{"krate":0,"index":2662}],"docs":"","sig":null,"attributes":[]},{"id":767,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\repeat.rs","byte_start":342510,"byte_end":342516,"line_start":32,"line_end":32,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":768,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\repeat.rs","byte_start":342543,"byte_end":342549,"line_start":34,"line_end":34,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2680},{"krate":0,"index":2681},{"krate":0,"index":2682}],"docs":"","sig":null,"attributes":[]},{"id":769,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\repeat.rs","byte_start":342856,"byte_end":342862,"line_start":48,"line_end":48,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2685}],"docs":"","sig":null,"attributes":[]},{"id":770,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\empty.rs","byte_start":343474,"byte_end":343479,"line_start":22,"line_end":22,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":771,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\empty.rs","byte_start":343511,"byte_end":343516,"line_start":24,"line_end":24,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2704}],"docs":"","sig":null,"attributes":[]},{"id":772,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\empty.rs","byte_start":343601,"byte_end":343606,"line_start":30,"line_end":30,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2707},{"krate":0,"index":2708},{"krate":0,"index":2709}],"docs":"","sig":null,"attributes":[]},{"id":778,"kind":"Inherent","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\once.rs","byte_start":344665,"byte_end":344669,"line_start":33,"line_end":33,"column_start":11,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2729}],"docs":"","sig":null,"attributes":[]},{"id":779,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\once.rs","byte_start":344798,"byte_end":344802,"line_start":39,"line_end":39,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2732},{"krate":0,"index":10155},{"krate":0,"index":2733}],"docs":"","sig":null,"attributes":[]},{"id":780,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\once.rs","byte_start":345442,"byte_end":345446,"line_start":64,"line_end":64,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2736}],"docs":"","sig":null,"attributes":[]},{"id":781,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\pending.rs","byte_start":346056,"byte_end":346063,"line_start":20,"line_end":20,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":782,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\pending.rs","byte_start":346095,"byte_end":346102,"line_start":22,"line_end":22,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2755}],"docs":"","sig":null,"attributes":[]},{"id":783,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\pending.rs","byte_start":346187,"byte_end":346194,"line_start":28,"line_end":28,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2758},{"krate":0,"index":2759},{"krate":0,"index":2760}],"docs":"","sig":null,"attributes":[]},{"id":784,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\poll_fn.rs","byte_start":346719,"byte_end":346725,"line_start":14,"line_end":14,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":785,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\poll_fn.rs","byte_start":346756,"byte_end":346762,"line_start":16,"line_end":16,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2778}],"docs":"","sig":null,"attributes":[]},{"id":786,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\poll_fn.rs","byte_start":347504,"byte_end":347510,"line_start":47,"line_end":47,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2785},{"krate":0,"index":2786}],"docs":"","sig":null,"attributes":[]},{"id":792,"kind":"Inherent","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\select.rs","byte_start":348876,"byte_end":348882,"line_start":40,"line_end":40,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2810},{"krate":0,"index":2811},{"krate":0,"index":10221},{"krate":0,"index":2812}],"docs":"","sig":null,"attributes":[]},{"id":793,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\select.rs","byte_start":350356,"byte_end":350362,"line_start":77,"line_end":77,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2816}],"docs":"","sig":null,"attributes":[]},{"id":794,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\select.rs","byte_start":350580,"byte_end":350586,"line_start":86,"line_end":86,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2820},{"krate":0,"index":10222}],"docs":"","sig":null,"attributes":[]},{"id":800,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\unfold.rs","byte_start":353899,"byte_end":353905,"line_start":68,"line_end":68,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2849}],"docs":"","sig":null,"attributes":[]},{"id":801,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\unfold.rs","byte_start":354208,"byte_end":354214,"line_start":81,"line_end":81,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2855}],"docs":"","sig":null,"attributes":[]},{"id":802,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\unfold.rs","byte_start":354440,"byte_end":354446,"line_start":90,"line_end":90,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2861},{"krate":0,"index":10287}],"docs":"","sig":null,"attributes":[]},{"id":808,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_ordered.rs","byte_start":8405910,"byte_end":8405922,"line_start":21,"line_end":21,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":10309}],"docs":"","sig":null,"attributes":[]},{"id":809,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_ordered.rs","byte_start":8406027,"byte_end":8406039,"line_start":27,"line_end":27,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":810,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_ordered.rs","byte_start":8406070,"byte_end":8406082,"line_start":29,"line_end":29,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":10314}],"docs":"","sig":null,"attributes":[]},{"id":811,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_ordered.rs","byte_start":8406205,"byte_end":8406217,"line_start":35,"line_end":35,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":10317}],"docs":"","sig":null,"attributes":[]},{"id":812,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_ordered.rs","byte_start":8406398,"byte_end":8406410,"line_start":42,"line_end":42,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":10320},{"krate":0,"index":10321}],"docs":"","sig":null,"attributes":[]},{"id":813,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_ordered.rs","byte_start":8409027,"byte_end":8409041,"line_start":100,"line_end":100,"column_start":27,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":814,"kind":"Inherent","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_ordered.rs","byte_start":8409067,"byte_end":8409081,"line_start":102,"line_end":102,"column_start":19,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":10333},{"krate":0,"index":10334},{"krate":0,"index":10335},{"krate":0,"index":10336}],"docs":"","sig":null,"attributes":[]},{"id":815,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_ordered.rs","byte_start":8410705,"byte_end":8410719,"line_start":146,"line_end":146,"column_start":31,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":10339}],"docs":"","sig":null,"attributes":[]},{"id":816,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_ordered.rs","byte_start":8410837,"byte_end":8410851,"line_start":152,"line_end":152,"column_start":30,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":10342},{"krate":0,"index":10343},{"krate":0,"index":10344}],"docs":"","sig":null,"attributes":[]},{"id":817,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_ordered.rs","byte_start":8412035,"byte_end":8412049,"line_start":190,"line_end":190,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":10347}],"docs":"","sig":null,"attributes":[]},{"id":818,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_ordered.rs","byte_start":8412215,"byte_end":8412229,"line_start":196,"line_end":196,"column_start":41,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":10350}],"docs":"","sig":null,"attributes":[]},{"id":819,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_ordered.rs","byte_start":8412487,"byte_end":8412501,"line_start":206,"line_end":206,"column_start":35,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":10355}],"docs":"","sig":null,"attributes":[]},{"id":820,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_unordered\\abort.rs","byte_start":8438697,"byte_end":8438708,"line_start":4,"line_end":4,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":10399}],"docs":"","sig":null,"attributes":[]},{"id":821,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_unordered\\iter.rs","byte_start":8439880,"byte_end":8439890,"line_start":32,"line_end":32,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":10409},{"krate":0,"index":10410},{"krate":0,"index":10411}],"docs":"","sig":null,"attributes":[]},{"id":822,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_unordered\\iter.rs","byte_start":8440747,"byte_end":8440757,"line_start":58,"line_end":58,"column_start":33,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":823,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_unordered\\iter.rs","byte_start":8440805,"byte_end":8440812,"line_start":60,"line_end":60,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":10417},{"krate":0,"index":10418},{"krate":0,"index":10419}],"docs":"","sig":null,"attributes":[]},{"id":824,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_unordered\\iter.rs","byte_start":8441076,"byte_end":8441083,"line_start":72,"line_end":72,"column_start":40,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":825,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_unordered\\iter.rs","byte_start":8441124,"byte_end":8441134,"line_start":74,"line_end":74,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":10425},{"krate":0,"index":10426},{"krate":0,"index":10427}],"docs":"","sig":null,"attributes":[]},{"id":826,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_unordered\\iter.rs","byte_start":8442051,"byte_end":8442061,"line_start":103,"line_end":103,"column_start":33,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":827,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_unordered\\iter.rs","byte_start":8442109,"byte_end":8442113,"line_start":105,"line_end":105,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":10433},{"krate":0,"index":10434},{"krate":0,"index":10435}],"docs":"","sig":null,"attributes":[]},{"id":828,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_unordered\\iter.rs","byte_start":8442369,"byte_end":8442373,"line_start":117,"line_end":117,"column_start":40,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":829,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_unordered\\task.rs","byte_start":8443862,"byte_end":8443866,"line_start":41,"line_end":41,"column_start":27,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":830,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_unordered\\task.rs","byte_start":8443901,"byte_end":8443905,"line_start":42,"line_end":42,"column_start":27,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":831,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_unordered\\task.rs","byte_start":8443937,"byte_end":8443941,"line_start":44,"line_end":44,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":10475}],"docs":"","sig":null,"attributes":[]},{"id":832,"kind":"Inherent","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_unordered\\task.rs","byte_start":8445018,"byte_end":8445022,"line_start":71,"line_end":71,"column_start":11,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":10478},{"krate":0,"index":10480}],"docs":"","sig":null,"attributes":[]},{"id":833,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_unordered\\task.rs","byte_start":8446034,"byte_end":8446038,"line_start":102,"line_end":102,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":10483}],"docs":"","sig":null,"attributes":[]},{"id":834,"kind":"Inherent","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_unordered\\ready_to_run_queue.rs","byte_start":8447488,"byte_end":8447503,"line_start":29,"line_end":29,"column_start":11,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":10515},{"krate":0,"index":10516},{"krate":0,"index":10517}],"docs":"","sig":null,"attributes":[]},{"id":835,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_unordered\\ready_to_run_queue.rs","byte_start":8449353,"byte_end":8449368,"line_start":90,"line_end":90,"column_start":20,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":10520}],"docs":"","sig":null,"attributes":[]},{"id":836,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_unordered\\mod.rs","byte_start":8415747,"byte_end":8415763,"line_start":77,"line_end":77,"column_start":33,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":837,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_unordered\\mod.rs","byte_start":8415804,"byte_end":8415820,"line_start":78,"line_end":78,"column_start":33,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":838,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_unordered\\mod.rs","byte_start":8415849,"byte_end":8415865,"line_start":79,"line_end":79,"column_start":21,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":839,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_unordered\\mod.rs","byte_start":8415890,"byte_end":8415906,"line_start":81,"line_end":81,"column_start":16,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":10537}],"docs":"","sig":null,"attributes":[]},{"id":840,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_unordered\\mod.rs","byte_start":8416103,"byte_end":8416119,"line_start":90,"line_end":90,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":10539}],"docs":"","sig":null,"attributes":[]},{"id":841,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_unordered\\mod.rs","byte_start":8417838,"byte_end":8417854,"line_start":124,"line_end":124,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":10542}],"docs":"","sig":null,"attributes":[]},{"id":842,"kind":"Inherent","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_unordered\\mod.rs","byte_start":8417957,"byte_end":8417973,"line_start":130,"line_end":130,"column_start":11,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":10545},{"krate":0,"index":10546},{"krate":0,"index":10547},{"krate":0,"index":10548},{"krate":0,"index":10549},{"krate":0,"index":10550},{"krate":0,"index":10551},{"krate":0,"index":10552},{"krate":0,"index":10553},{"krate":0,"index":10554},{"krate":0,"index":10555},{"krate":0,"index":10556},{"krate":0,"index":10557}],"docs":"","sig":null,"attributes":[]},{"id":843,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_unordered\\mod.rs","byte_start":8429633,"byte_end":8429649,"line_start":411,"line_end":411,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":10560},{"krate":0,"index":10561},{"krate":0,"index":10570}],"docs":"","sig":null,"attributes":[]},{"id":844,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_unordered\\mod.rs","byte_start":8434046,"byte_end":8434050,"line_start":511,"line_end":511,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":10569}],"docs":"","sig":null,"attributes":[]},{"id":845,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_unordered\\mod.rs","byte_start":8436388,"byte_end":8436404,"line_start":573,"line_end":573,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":10573}],"docs":"","sig":null,"attributes":[]},{"id":846,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_unordered\\mod.rs","byte_start":8436551,"byte_end":8436567,"line_start":579,"line_end":579,"column_start":20,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":10576}],"docs":"","sig":null,"attributes":[]},{"id":847,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_unordered\\mod.rs","byte_start":8438007,"byte_end":8438023,"line_start":608,"line_end":608,"column_start":33,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":10579}],"docs":"","sig":null,"attributes":[]},{"id":848,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_unordered\\mod.rs","byte_start":8438279,"byte_end":8438295,"line_start":618,"line_end":618,"column_start":35,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":10584}],"docs":"","sig":null,"attributes":[]},{"id":849,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_unordered\\mod.rs","byte_start":8438417,"byte_end":8438433,"line_start":624,"line_end":624,"column_start":27,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":10587}],"docs":"","sig":null,"attributes":[]},{"id":850,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\select_all.rs","byte_start":8451185,"byte_end":8451194,"line_start":29,"line_end":29,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":10611}],"docs":"","sig":null,"attributes":[]},{"id":851,"kind":"Inherent","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\select_all.rs","byte_start":8451339,"byte_end":8451348,"line_start":35,"line_end":35,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":10614},{"krate":0,"index":10615},{"krate":0,"index":10616},{"krate":0,"index":10617}],"docs":"","sig":null,"attributes":[]},{"id":852,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\select_all.rs","byte_start":8452398,"byte_end":8452407,"line_start":67,"line_end":67,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":10620}],"docs":"","sig":null,"attributes":[]},{"id":853,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\select_all.rs","byte_start":8452520,"byte_end":8452529,"line_start":73,"line_end":73,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":10623},{"krate":0,"index":10624}],"docs":"","sig":null,"attributes":[]},{"id":854,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\select_all.rs","byte_start":8453336,"byte_end":8453345,"line_start":98,"line_end":98,"column_start":42,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":10627}],"docs":"","sig":null,"attributes":[]},{"id":855,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\select_all.rs","byte_start":8454321,"byte_end":8454330,"line_start":129,"line_end":129,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":10632}],"docs":"","sig":null,"attributes":[]},{"id":856,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\select_all.rs","byte_start":8454475,"byte_end":8454484,"line_start":135,"line_end":135,"column_start":41,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":10636}],"docs":"","sig":null,"attributes":[]},{"id":857,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\close.rs","byte_start":365298,"byte_end":365303,"line_start":15,"line_end":15,"column_start":42,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":858,"kind":"Inherent","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\close.rs","byte_start":365498,"byte_end":365503,"line_start":20,"line_end":20,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2894}],"docs":"","sig":null,"attributes":[]},{"id":859,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\close.rs","byte_start":365713,"byte_end":365718,"line_start":29,"line_end":29,"column_start":56,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":2898},{"krate":0,"index":2899}],"docs":"","sig":null,"attributes":[]},{"id":860,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\drain.rs","byte_start":366679,"byte_end":366684,"line_start":32,"line_end":32,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":861,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\drain.rs","byte_start":366712,"byte_end":366717,"line_start":34,"line_end":34,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2915},{"krate":0,"index":2916},{"krate":0,"index":2917},{"krate":0,"index":2918},{"krate":0,"index":2919}],"docs":"","sig":null,"attributes":[]},{"id":867,"kind":"Inherent","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\fanout.rs","byte_start":367930,"byte_end":367936,"line_start":20,"line_end":20,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2939},{"krate":0,"index":2940},{"krate":0,"index":2941},{"krate":0,"index":10749},{"krate":0,"index":2942}],"docs":"","sig":null,"attributes":[]},{"id":868,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\fanout.rs","byte_start":368961,"byte_end":368967,"line_start":52,"line_end":52,"column_start":40,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2946}],"docs":"","sig":null,"attributes":[]},{"id":869,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\fanout.rs","byte_start":369218,"byte_end":369224,"line_start":61,"line_end":61,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2951},{"krate":0,"index":10750},{"krate":0,"index":10751},{"krate":0,"index":10752},{"krate":0,"index":10753}],"docs":"","sig":null,"attributes":[]},{"id":870,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\flush.rs","byte_start":371474,"byte_end":371479,"line_start":16,"line_end":16,"column_start":42,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":871,"kind":"Inherent","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\flush.rs","byte_start":371830,"byte_end":371835,"line_start":24,"line_end":24,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2968}],"docs":"","sig":null,"attributes":[]},{"id":872,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\flush.rs","byte_start":372045,"byte_end":372050,"line_start":33,"line_end":33,"column_start":56,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":2972},{"krate":0,"index":2973}],"docs":"","sig":null,"attributes":[]},{"id":878,"kind":"Inherent","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\err_into.rs","byte_start":372702,"byte_end":372713,"line_start":15,"line_end":15,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2990},{"krate":0,"index":10828},{"krate":0,"index":10829},{"krate":0,"index":10830},{"krate":0,"index":10831}],"docs":"","sig":null,"attributes":[]},{"id":879,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\err_into.rs","byte_start":373004,"byte_end":373015,"line_start":28,"line_end":28,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2995},{"krate":0,"index":10832},{"krate":0,"index":10833},{"krate":0,"index":10834},{"krate":0,"index":10835}],"docs":"","sig":null,"attributes":[]},{"id":880,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\err_into.rs","byte_start":373225,"byte_end":373236,"line_start":38,"line_end":38,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3000},{"krate":0,"index":10836},{"krate":0,"index":10837}],"docs":"","sig":null,"attributes":[]},{"id":881,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\err_into.rs","byte_start":373403,"byte_end":373414,"line_start":47,"line_end":47,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3005}],"docs":"","sig":null,"attributes":[]},{"id":887,"kind":"Inherent","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\map_err.rs","byte_start":373991,"byte_end":374001,"line_start":17,"line_end":17,"column_start":13,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3021},{"krate":0,"index":10897},{"krate":0,"index":10898},{"krate":0,"index":10899},{"krate":0,"index":10900},{"krate":0,"index":3022}],"docs":"","sig":null,"attributes":[]},{"id":888,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\map_err.rs","byte_start":374323,"byte_end":374333,"line_start":29,"line_end":29,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3028},{"krate":0,"index":3029},{"krate":0,"index":3031},{"krate":0,"index":3033},{"krate":0,"index":3035}],"docs":"","sig":null,"attributes":[]},{"id":889,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\map_err.rs","byte_start":375387,"byte_end":375397,"line_start":65,"line_end":65,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3040},{"krate":0,"index":10901},{"krate":0,"index":10902}],"docs":"","sig":null,"attributes":[]},{"id":890,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\map_err.rs","byte_start":375503,"byte_end":375513,"line_start":71,"line_end":71,"column_start":41,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":3044}],"docs":"","sig":null,"attributes":[]},{"id":891,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\send.rs","byte_start":376038,"byte_end":376042,"line_start":15,"line_end":15,"column_start":42,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":892,"kind":"Inherent","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\send.rs","byte_start":376109,"byte_end":376113,"line_start":17,"line_end":17,"column_start":49,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3060}],"docs":"","sig":null,"attributes":[]},{"id":893,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\send.rs","byte_start":376329,"byte_end":376333,"line_start":26,"line_end":26,"column_start":56,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":3064},{"krate":0,"index":3065}],"docs":"","sig":null,"attributes":[]},{"id":894,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\send_all.rs","byte_start":377753,"byte_end":377760,"line_start":22,"line_end":22,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3092}],"docs":"","sig":null,"attributes":[]},{"id":895,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\send_all.rs","byte_start":378199,"byte_end":378206,"line_start":38,"line_end":38,"column_start":24,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":896,"kind":"Inherent","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\send_all.rs","byte_start":378317,"byte_end":378324,"line_start":44,"line_end":44,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3102},{"krate":0,"index":3103}],"docs":"","sig":null,"attributes":[]},{"id":897,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\send_all.rs","byte_start":379217,"byte_end":379224,"line_start":78,"line_end":78,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3109},{"krate":0,"index":3110}],"docs":"","sig":null,"attributes":[]},{"id":903,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\with.rs","byte_start":380886,"byte_end":380890,"line_start":22,"line_end":22,"column_start":42,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3131}],"docs":"","sig":null,"attributes":[]},{"id":904,"kind":"Inherent","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\with.rs","byte_start":381192,"byte_end":381196,"line_start":35,"line_end":35,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3138}],"docs":"","sig":null,"attributes":[]},{"id":905,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\with.rs","byte_start":381656,"byte_end":381660,"line_start":55,"line_end":55,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3146},{"krate":0,"index":11002},{"krate":0,"index":11003}],"docs":"","sig":null,"attributes":[]},{"id":906,"kind":"Inherent","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\with.rs","byte_start":381855,"byte_end":381859,"line_start":65,"line_end":65,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":11004},{"krate":0,"index":11005},{"krate":0,"index":11006},{"krate":0,"index":11007},{"krate":0,"index":11008}],"docs":"","sig":null,"attributes":[]},{"id":907,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\with.rs","byte_start":382614,"byte_end":382618,"line_start":92,"line_end":92,"column_start":42,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3161},{"krate":0,"index":3162},{"krate":0,"index":11009},{"krate":0,"index":3163},{"krate":0,"index":3164}],"docs":"","sig":null,"attributes":[]},{"id":913,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\with_flat_map.rs","byte_start":384416,"byte_end":384427,"line_start":22,"line_end":22,"column_start":41,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":3186}],"docs":"","sig":null,"attributes":[]},{"id":914,"kind":"Inherent","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\with_flat_map.rs","byte_start":384800,"byte_end":384811,"line_start":37,"line_end":37,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3193},{"krate":0,"index":11101},{"krate":0,"index":11102},{"krate":0,"index":11103},{"krate":0,"index":11104},{"krate":0,"index":11105}],"docs":"","sig":null,"attributes":[]},{"id":915,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\with_flat_map.rs","byte_start":386226,"byte_end":386237,"line_start":85,"line_end":85,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3200},{"krate":0,"index":11106},{"krate":0,"index":11107}],"docs":"","sig":null,"attributes":[]},{"id":916,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\with_flat_map.rs","byte_start":386460,"byte_end":386471,"line_start":96,"line_end":96,"column_start":41,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":3207}],"docs":"","sig":null,"attributes":[]},{"id":917,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\with_flat_map.rs","byte_start":386720,"byte_end":386731,"line_start":107,"line_end":107,"column_start":38,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3214},{"krate":0,"index":3215},{"krate":0,"index":11108},{"krate":0,"index":3216},{"krate":0,"index":3217}],"docs":"","sig":null,"attributes":[]},{"id":923,"kind":"Inherent","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\buffer.rs","byte_start":388348,"byte_end":388354,"line_start":21,"line_end":21,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3235},{"krate":0,"index":11167},{"krate":0,"index":11168},{"krate":0,"index":11169},{"krate":0,"index":11170},{"krate":0,"index":11171}],"docs":"","sig":null,"attributes":[]},{"id":924,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\buffer.rs","byte_start":389181,"byte_end":389187,"line_start":51,"line_end":51,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3239},{"krate":0,"index":3240},{"krate":0,"index":3241}],"docs":"","sig":null,"attributes":[]},{"id":925,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\buffer.rs","byte_start":389512,"byte_end":389518,"line_start":63,"line_end":63,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3245}],"docs":"","sig":null,"attributes":[]},{"id":926,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\buffer.rs","byte_start":389687,"byte_end":389693,"line_start":69,"line_end":69,"column_start":43,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3249},{"krate":0,"index":3250},{"krate":0,"index":3251},{"krate":0,"index":3252},{"krate":0,"index":3253}],"docs":"","sig":null,"attributes":[]},{"id":927,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":356364,"byte_end":356365,"line_start":55,"line_end":55,"column_start":41,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":928,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\task\\spawn.rs","byte_start":392159,"byte_end":392161,"line_start":16,"line_end":16,"column_start":31,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":929,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\task\\spawn.rs","byte_start":392216,"byte_end":392218,"line_start":17,"line_end":17,"column_start":36,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":930,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\fns.rs","byte_start":398306,"byte_end":398307,"line_start":9,"line_end":9,"column_start":30,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3346},{"krate":0,"index":3347}],"docs":"","sig":null,"attributes":[]},{"id":931,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\fns.rs","byte_start":398541,"byte_end":398542,"line_start":23,"line_end":23,"column_start":29,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3355}],"docs":"","sig":null,"attributes":[]},{"id":932,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\fns.rs","byte_start":398811,"byte_end":398812,"line_start":38,"line_end":38,"column_start":26,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3363}],"docs":"","sig":null,"attributes":[]},{"id":933,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\fns.rs","byte_start":399827,"byte_end":399831,"line_start":76,"line_end":76,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3371}],"docs":"","sig":null,"attributes":[]},{"id":934,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\fns.rs","byte_start":399925,"byte_end":399929,"line_start":82,"line_end":82,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3375},{"krate":0,"index":3376}],"docs":"","sig":null,"attributes":[]},{"id":940,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\fns.rs","byte_start":400188,"byte_end":400195,"line_start":94,"line_end":94,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3381},{"krate":0,"index":3382}],"docs":"","sig":null,"attributes":[]},{"id":941,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\fns.rs","byte_start":400418,"byte_end":400425,"line_start":104,"line_end":104,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3387}],"docs":"","sig":null,"attributes":[]},{"id":942,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\fns.rs","byte_start":400616,"byte_end":400623,"line_start":113,"line_end":113,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3392}],"docs":"","sig":null,"attributes":[]},{"id":943,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\fns.rs","byte_start":400928,"byte_end":400941,"line_start":129,"line_end":129,"column_start":35,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":3398},{"krate":0,"index":3399}],"docs":"","sig":null,"attributes":[]},{"id":949,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\fns.rs","byte_start":401277,"byte_end":401286,"line_start":143,"line_end":143,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3404},{"krate":0,"index":3405}],"docs":"","sig":null,"attributes":[]},{"id":950,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\fns.rs","byte_start":401487,"byte_end":401496,"line_start":153,"line_end":153,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3410}],"docs":"","sig":null,"attributes":[]},{"id":951,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\fns.rs","byte_start":401675,"byte_end":401684,"line_start":162,"line_end":162,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3415}],"docs":"","sig":null,"attributes":[]},{"id":952,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\fns.rs","byte_start":402004,"byte_end":402011,"line_start":178,"line_end":178,"column_start":41,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":3422},{"krate":0,"index":3423}],"docs":"","sig":null,"attributes":[]},{"id":953,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\fns.rs","byte_start":402230,"byte_end":402237,"line_start":187,"line_end":187,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3429}],"docs":"","sig":null,"attributes":[]},{"id":954,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\fns.rs","byte_start":402415,"byte_end":402422,"line_start":195,"line_end":195,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3435}],"docs":"","sig":null,"attributes":[]},{"id":955,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\fns.rs","byte_start":402723,"byte_end":402731,"line_start":210,"line_end":210,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3443},{"krate":0,"index":3444}],"docs":"","sig":null,"attributes":[]},{"id":956,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\fns.rs","byte_start":402954,"byte_end":402962,"line_start":219,"line_end":219,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":3450}],"docs":"","sig":null,"attributes":[]},{"id":957,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\fns.rs","byte_start":403144,"byte_end":403152,"line_start":227,"line_end":227,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3456}],"docs":"","sig":null,"attributes":[]},{"id":958,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\fns.rs","byte_start":403462,"byte_end":403473,"line_start":242,"line_end":242,"column_start":49,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":3465},{"krate":0,"index":3466}],"docs":"","sig":null,"attributes":[]},{"id":959,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\fns.rs","byte_start":403710,"byte_end":403721,"line_start":251,"line_end":251,"column_start":48,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":3472}],"docs":"","sig":null,"attributes":[]},{"id":960,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\fns.rs","byte_start":403936,"byte_end":403947,"line_start":259,"line_end":259,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3478}],"docs":"","sig":null,"attributes":[]},{"id":961,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\fns.rs","byte_start":404292,"byte_end":404304,"line_start":274,"line_end":274,"column_start":49,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":3486},{"krate":0,"index":3487}],"docs":"","sig":null,"attributes":[]},{"id":962,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\fns.rs","byte_start":404542,"byte_end":404554,"line_start":283,"line_end":283,"column_start":48,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":3493}],"docs":"","sig":null,"attributes":[]},{"id":963,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\fns.rs","byte_start":404770,"byte_end":404782,"line_start":291,"line_end":291,"column_start":45,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":3499}],"docs":"","sig":null,"attributes":[]},{"id":964,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\fns.rs","byte_start":405379,"byte_end":405393,"line_start":311,"line_end":311,"column_start":41,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":3512},{"krate":0,"index":3513}],"docs":"","sig":null,"attributes":[]},{"id":965,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\fns.rs","byte_start":405614,"byte_end":405628,"line_start":320,"line_end":320,"column_start":40,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":3519}],"docs":"","sig":null,"attributes":[]},{"id":966,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\fns.rs","byte_start":405827,"byte_end":405841,"line_start":328,"line_end":328,"column_start":37,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":3525}],"docs":"","sig":null,"attributes":[]},{"id":967,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\fns.rs","byte_start":406145,"byte_end":406151,"line_start":342,"line_end":342,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3535}],"docs":"","sig":null,"attributes":[]},{"id":968,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\fns.rs","byte_start":406246,"byte_end":406252,"line_start":347,"line_end":347,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3539},{"krate":0,"index":3540}],"docs":"","sig":null,"attributes":[]},{"id":974,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8463867,"byte_end":8463872,"line_start":25,"line_end":25,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":11364}],"docs":"","sig":null,"attributes":[]},{"id":975,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8464205,"byte_end":8464210,"line_start":35,"line_end":35,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":11367}],"docs":"","sig":null,"attributes":[]},{"id":976,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8464303,"byte_end":8464308,"line_start":41,"line_end":41,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":11370}],"docs":"","sig":null,"attributes":[]},{"id":977,"kind":"Inherent","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8464446,"byte_end":8464452,"line_start":52,"line_end":52,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":11378},{"krate":0,"index":11379}],"docs":"","sig":null,"attributes":[]},{"id":978,"kind":"Inherent","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8464996,"byte_end":8465001,"line_start":72,"line_end":72,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":11384},{"krate":0,"index":11385}],"docs":"","sig":null,"attributes":[]},{"id":979,"kind":"Inherent","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8465577,"byte_end":8465582,"line_start":97,"line_end":97,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":11388},{"krate":0,"index":11389},{"krate":0,"index":11390},{"krate":0,"index":11391},{"krate":0,"index":11392}],"docs":"","sig":null,"attributes":[]},{"id":980,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8468731,"byte_end":8468746,"line_start":188,"line_end":188,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":11401}],"docs":"","sig":null,"attributes":[]},{"id":981,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8469256,"byte_end":8469271,"line_start":204,"line_end":204,"column_start":33,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":11404}],"docs":"","sig":null,"attributes":[]},{"id":982,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8469388,"byte_end":8469403,"line_start":210,"line_end":210,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":11408},{"krate":0,"index":11409}],"docs":"","sig":null,"attributes":[]},{"id":983,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8470632,"byte_end":8470647,"line_start":246,"line_end":246,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":11412}],"docs":"","sig":null,"attributes":[]},{"id":984,"kind":"Inherent","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8471249,"byte_end":8471259,"line_start":265,"line_end":265,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":11420}],"docs":"","sig":null,"attributes":[]},{"id":985,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8472249,"byte_end":8472259,"line_start":295,"line_end":295,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":11425}],"docs":"","sig":null,"attributes":[]},{"id":986,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8472504,"byte_end":8472514,"line_start":304,"line_end":304,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":11428}],"docs":"","sig":null,"attributes":[]},{"id":987,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8472612,"byte_end":8472622,"line_start":310,"line_end":310,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":11431},{"krate":0,"index":11432}],"docs":"","sig":null,"attributes":[]},{"id":988,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8472763,"byte_end":8472773,"line_start":317,"line_end":317,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":11435}],"docs":"","sig":null,"attributes":[]},{"id":989,"kind":"Inherent","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8473187,"byte_end":8473203,"line_start":330,"line_end":330,"column_start":32,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":11446}],"docs":"","sig":null,"attributes":[]},{"id":990,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8474311,"byte_end":8474327,"line_start":361,"line_end":361,"column_start":56,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":11452}],"docs":"","sig":null,"attributes":[]},{"id":991,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8474592,"byte_end":8474608,"line_start":370,"line_end":370,"column_start":37,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":11456}],"docs":"","sig":null,"attributes":[]},{"id":992,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8474720,"byte_end":8474736,"line_start":376,"line_end":376,"column_start":38,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":11460},{"krate":0,"index":11461}],"docs":"","sig":null,"attributes":[]},{"id":993,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8474879,"byte_end":8474895,"line_start":383,"line_end":383,"column_start":41,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":11465}],"docs":"","sig":null,"attributes":[]},{"id":994,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8475172,"byte_end":8475177,"line_start":391,"line_end":391,"column_start":40,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":995,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8475223,"byte_end":8475228,"line_start":392,"line_end":392,"column_start":40,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":996,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8475395,"byte_end":8475410,"line_start":396,"line_end":396,"column_start":40,"column_end":55},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":997,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8475514,"byte_end":8475529,"line_start":398,"line_end":398,"column_start":33,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":998,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8475733,"byte_end":8475743,"line_start":402,"line_end":402,"column_start":40,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":999,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8475793,"byte_end":8475803,"line_start":403,"line_end":403,"column_start":40,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1000,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8475864,"byte_end":8475880,"line_start":404,"line_end":404,"column_start":51,"column_end":67},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1001,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8475944,"byte_end":8475960,"line_start":405,"line_end":405,"column_start":51,"column_end":67},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1002,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\bilock.rs","byte_start":8477914,"byte_end":8477919,"line_start":47,"line_end":47,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1003,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\bilock.rs","byte_start":8477956,"byte_end":8477961,"line_start":48,"line_end":48,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1004,"kind":"Inherent","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\bilock.rs","byte_start":8477977,"byte_end":8477983,"line_start":50,"line_end":50,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":11510},{"krate":0,"index":11511},{"krate":0,"index":11513},{"krate":0,"index":11514}],"docs":"","sig":null,"attributes":[]},{"id":1005,"kind":"Inherent","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\bilock.rs","byte_start":8483614,"byte_end":8483619,"line_start":187,"line_end":187,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":11517}],"docs":"","sig":null,"attributes":[]},{"id":1006,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\bilock.rs","byte_start":8483741,"byte_end":8483746,"line_start":193,"line_end":193,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":11520}],"docs":"","sig":null,"attributes":[]},{"id":1007,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\bilock.rs","byte_start":8484024,"byte_end":8484036,"line_start":203,"line_end":203,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":11528}],"docs":"","sig":null,"attributes":[]},{"id":1008,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\bilock.rs","byte_start":8484226,"byte_end":8484238,"line_start":211,"line_end":211,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":11531}],"docs":"","sig":null,"attributes":[]},{"id":1009,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\bilock.rs","byte_start":8484459,"byte_end":8484471,"line_start":218,"line_end":218,"column_start":47,"column_end":59},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1010,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\bilock.rs","byte_start":8484803,"byte_end":8484814,"line_start":230,"line_end":230,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":11536},{"krate":0,"index":11537}],"docs":"","sig":null,"attributes":[]},{"id":1011,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\bilock.rs","byte_start":8484977,"byte_end":8484988,"line_start":237,"line_end":237,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":11540}],"docs":"","sig":null,"attributes":[]},{"id":1012,"kind":"Inherent","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\bilock.rs","byte_start":8485126,"byte_end":8485137,"line_start":243,"line_end":243,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":11543}],"docs":"","sig":null,"attributes":[]},{"id":1013,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\bilock.rs","byte_start":8485489,"byte_end":8485500,"line_start":252,"line_end":252,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":11546}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":1773,"byte_end":1784,"line_start":44,"line_end":44,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":7}},{"kind":"Mod","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":11721,"byte_end":11727,"line_start":304,"line_end":304,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":85}},{"kind":"Mod","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":11803,"byte_end":11809,"line_start":307,"line_end":307,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":1044}},{"kind":"Mod","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\mod.rs","byte_start":160661,"byte_end":160678,"line_start":90,"line_end":90,"column_start":13,"column_end":30},"ref_id":{"krate":0,"index":10358}},{"kind":"Mod","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":11910,"byte_end":11914,"line_start":311,"line_end":311,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":2868}},{"kind":"Mod","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":11995,"byte_end":11999,"line_start":315,"line_end":315,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":3292}},{"kind":"Mod","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":12010,"byte_end":12015,"line_start":317,"line_end":317,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":3331}},{"kind":"Mod","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lib.rs","byte_start":12343,"byte_end":12347,"line_start":334,"line_end":334,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":11335}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\async_await\\poll.rs","byte_start":14268,"byte_end":14276,"line_start":30,"line_end":30,"column_start":36,"column_end":44},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":22},"to":{"krate":2,"index":8198}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\async_await\\pending.rs","byte_start":15432,"byte_end":15443,"line_start":33,"line_end":33,"column_start":17,"column_end":28},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":38},"to":{"krate":2,"index":8198}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\flatten.rs","byte_start":56613,"byte_end":56620,"line_start":17,"line_end":17,"column_start":18,"column_end":25},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":3577},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\flatten.rs","byte_start":56747,"byte_end":56754,"line_start":23,"line_end":23,"column_start":27,"column_end":34},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":3577},"to":{"krate":14,"index":17}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\flatten.rs","byte_start":56988,"byte_end":56995,"line_start":35,"line_end":35,"column_start":22,"column_end":29},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":3577},"to":{"krate":2,"index":8198}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\flatten.rs","byte_start":57800,"byte_end":57807,"line_start":61,"line_end":61,"column_start":27,"column_end":34},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":3577},"to":{"krate":14,"index":82}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\flatten.rs","byte_start":58041,"byte_end":58048,"line_start":73,"line_end":73,"column_start":22,"column_end":29},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":3577},"to":{"krate":14,"index":68}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\flatten.rs","byte_start":58933,"byte_end":58940,"line_start":103,"line_end":103,"column_start":32,"column_end":39},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":3577},"to":{"krate":19,"index":9}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\fuse.rs","byte_start":61144,"byte_end":61148,"line_start":12,"line_end":12,"column_start":11,"column_end":15},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":3654},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\fuse.rs","byte_start":61250,"byte_end":61254,"line_start":18,"line_end":18,"column_start":19,"column_end":23},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":3654},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\fuse.rs","byte_start":62978,"byte_end":62982,"line_start":69,"line_end":69,"column_start":35,"column_end":39},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":3654},"to":{"krate":14,"index":17}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\fuse.rs","byte_start":63091,"byte_end":63095,"line_start":75,"line_end":75,"column_start":30,"column_end":34},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":3654},"to":{"krate":2,"index":8198}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\map.rs","byte_start":64091,"byte_end":64111,"line_start":25,"line_end":25,"column_start":23,"column_end":43},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":190},"to":{"krate":2,"index":2097}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\map.rs","byte_start":64243,"byte_end":64246,"line_start":33,"line_end":33,"column_start":14,"column_end":17},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":3698},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\map.rs","byte_start":64421,"byte_end":64424,"line_start":40,"line_end":40,"column_start":33,"column_end":36},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":3698},"to":{"krate":14,"index":17}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\map.rs","byte_start":64688,"byte_end":64691,"line_start":52,"line_end":52,"column_start":28,"column_end":31},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":3698},"to":{"krate":2,"index":8198}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\catch_unwind.rs","byte_start":66590,"byte_end":66601,"line_start":15,"line_end":15,"column_start":11,"column_end":22},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":4322},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\catch_unwind.rs","byte_start":66755,"byte_end":66766,"line_start":21,"line_end":21,"column_start":22,"column_end":33},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":4322},"to":{"krate":2,"index":8198}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\shared.rs","byte_start":67946,"byte_end":67952,"line_start":31,"line_end":31,"column_start":29,"column_end":35},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":257},"to":{"krate":2,"index":1943}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\shared.rs","byte_start":67995,"byte_end":68001,"line_start":33,"line_end":33,"column_start":34,"column_end":40},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":257},"to":{"krate":2,"index":6075}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\shared.rs","byte_start":68259,"byte_end":68264,"line_start":42,"line_end":42,"column_start":34,"column_end":39},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":261},"to":{"krate":2,"index":6075}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\shared.rs","byte_start":68491,"byte_end":68496,"line_start":53,"line_end":53,"column_start":27,"column_end":32},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":261},"to":{"krate":2,"index":1904}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\shared.rs","byte_start":68593,"byte_end":68598,"line_start":60,"line_end":60,"column_start":27,"column_end":32},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":261},"to":{"krate":2,"index":1916}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\shared.rs","byte_start":68842,"byte_end":68848,"line_start":74,"line_end":74,"column_start":19,"column_end":25},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":257},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\shared.rs","byte_start":69314,"byte_end":69320,"line_start":91,"line_end":91,"column_start":11,"column_end":17},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":257},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\shared.rs","byte_start":70012,"byte_end":70017,"line_start":112,"line_end":112,"column_start":11,"column_end":16},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":261},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\shared.rs","byte_start":71714,"byte_end":71720,"line_start":161,"line_end":161,"column_start":27,"column_end":33},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":257},"to":{"krate":14,"index":17}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\shared.rs","byte_start":71872,"byte_end":71878,"line_start":171,"line_end":171,"column_start":22,"column_end":28},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":257},"to":{"krate":2,"index":8198}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\shared.rs","byte_start":73416,"byte_end":73421,"line_start":217,"line_end":217,"column_start":23,"column_end":28},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":311},"to":{"krate":2,"index":2097}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\shared.rs","byte_start":75208,"byte_end":75214,"line_start":276,"line_end":276,"column_start":21,"column_end":27},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":257},"to":{"krate":2,"index":1606}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\shared.rs","byte_start":75408,"byte_end":75414,"line_start":288,"line_end":288,"column_start":20,"column_end":26},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":257},"to":{"krate":2,"index":2097}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\shared.rs","byte_start":75842,"byte_end":75850,"line_start":305,"line_end":305,"column_start":18,"column_end":26},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":265},"to":{"krate":17,"index":260}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":40190,"byte_end":40191,"line_start":115,"line_end":115,"column_start":31,"column_end":32},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":328},"to":{"krate":0,"index":329}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\future\\mod.rs","byte_start":40322,"byte_end":40328,"line_start":119,"line_end":119,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":8198},"to":{"krate":0,"index":329}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\into_future.rs","byte_start":97784,"byte_end":97794,"line_start":12,"line_end":12,"column_start":11,"column_end":21},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":4366},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\into_future.rs","byte_start":97959,"byte_end":97969,"line_start":19,"line_end":19,"column_start":52,"column_end":62},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":4366},"to":{"krate":14,"index":17}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\into_future.rs","byte_start":98075,"byte_end":98085,"line_start":23,"line_end":23,"column_start":33,"column_end":43},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":4366},"to":{"krate":2,"index":8198}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\try_flatten.rs","byte_start":98723,"byte_end":98733,"line_start":17,"line_end":17,"column_start":18,"column_end":28},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":4410},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\try_flatten.rs","byte_start":98863,"byte_end":98873,"line_start":23,"line_end":23,"column_start":27,"column_end":37},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":4410},"to":{"krate":14,"index":17}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\try_flatten.rs","byte_start":99126,"byte_end":99136,"line_start":35,"line_end":35,"column_start":22,"column_end":32},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":4410},"to":{"krate":2,"index":8198}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\try_flatten.rs","byte_start":100193,"byte_end":100203,"line_start":66,"line_end":66,"column_start":27,"column_end":37},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":4410},"to":{"krate":14,"index":82}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\try_flatten.rs","byte_start":100456,"byte_end":100466,"line_start":78,"line_end":78,"column_start":22,"column_end":32},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":4410},"to":{"krate":14,"index":68}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\try_flatten.rs","byte_start":101608,"byte_end":101618,"line_start":113,"line_end":113,"column_start":32,"column_end":42},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":4410},"to":{"krate":19,"index":9}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\try_flatten_err.rs","byte_start":104004,"byte_end":104017,"line_start":14,"line_end":14,"column_start":18,"column_end":31},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":4487},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\try_flatten_err.rs","byte_start":104150,"byte_end":104163,"line_start":20,"line_end":20,"column_start":27,"column_end":40},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":4487},"to":{"krate":14,"index":17}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\try_flatten_err.rs","byte_start":104419,"byte_end":104432,"line_start":32,"line_end":32,"column_start":22,"column_end":35},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":4487},"to":{"krate":2,"index":8198}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":80753,"byte_end":80756,"line_start":133,"line_end":133,"column_start":48,"column_end":51},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":481},"to":{"krate":0,"index":482}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_future\\mod.rs","byte_start":80839,"byte_end":80848,"line_start":136,"line_end":136,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":14,"index":32},"to":{"krate":0,"index":482}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\lazy.rs","byte_start":105827,"byte_end":105831,"line_start":13,"line_end":13,"column_start":19,"column_end":23},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":5560},"to":{"krate":2,"index":1943}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\lazy.rs","byte_start":106404,"byte_end":106408,"line_start":40,"line_end":40,"column_start":28,"column_end":32},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":5560},"to":{"krate":14,"index":17}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\lazy.rs","byte_start":106540,"byte_end":106544,"line_start":46,"line_end":46,"column_start":23,"column_end":27},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":5560},"to":{"krate":2,"index":8198}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\pending.rs","byte_start":107121,"byte_end":107128,"line_start":13,"line_end":13,"column_start":25,"column_end":32},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":5566},"to":{"krate":14,"index":17}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\pending.rs","byte_start":107679,"byte_end":107686,"line_start":41,"line_end":41,"column_start":20,"column_end":27},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":5566},"to":{"krate":2,"index":8198}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\pending.rs","byte_start":107831,"byte_end":107838,"line_start":49,"line_end":49,"column_start":19,"column_end":26},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":5566},"to":{"krate":2,"index":1943}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\pending.rs","byte_start":107865,"byte_end":107872,"line_start":52,"line_end":52,"column_start":19,"column_end":26},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":5566},"to":{"krate":2,"index":1606}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\maybe_done.rs","byte_start":109158,"byte_end":109167,"line_start":45,"line_end":45,"column_start":19,"column_end":28},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":5572},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\maybe_done.rs","byte_start":110604,"byte_end":110613,"line_start":84,"line_end":84,"column_start":35,"column_end":44},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":5572},"to":{"krate":14,"index":17}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\maybe_done.rs","byte_start":110829,"byte_end":110838,"line_start":93,"line_end":93,"column_start":30,"column_end":39},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":5572},"to":{"krate":2,"index":8198}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_maybe_done.rs","byte_start":112242,"byte_end":112254,"line_start":30,"line_end":30,"column_start":22,"column_end":34},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":5634},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_maybe_done.rs","byte_start":113718,"byte_end":113730,"line_start":69,"line_end":69,"column_start":38,"column_end":50},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":5634},"to":{"krate":14,"index":17}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_maybe_done.rs","byte_start":113958,"byte_end":113970,"line_start":78,"line_end":78,"column_start":33,"column_end":45},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":5634},"to":{"krate":2,"index":8198}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\option.rs","byte_start":115516,"byte_end":115528,"line_start":30,"line_end":30,"column_start":28,"column_end":40},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":5696},"to":{"krate":2,"index":8198}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\option.rs","byte_start":115861,"byte_end":115873,"line_start":44,"line_end":44,"column_start":38,"column_end":50},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":5696},"to":{"krate":14,"index":17}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\option.rs","byte_start":116056,"byte_end":116068,"line_start":53,"line_end":53,"column_start":29,"column_end":41},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":5696},"to":{"krate":2,"index":1825}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\poll_fn.rs","byte_start":116478,"byte_end":116484,"line_start":14,"line_end":14,"column_start":19,"column_end":25},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":662},"to":{"krate":2,"index":1943}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\poll_fn.rs","byte_start":117154,"byte_end":117160,"line_start":42,"line_end":42,"column_start":24,"column_end":30},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":662},"to":{"krate":2,"index":6075}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\poll_fn.rs","byte_start":117302,"byte_end":117308,"line_start":48,"line_end":48,"column_start":23,"column_end":29},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":662},"to":{"krate":2,"index":8198}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\ready.rs","byte_start":117785,"byte_end":117790,"line_start":10,"line_end":10,"column_start":9,"column_end":14},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":5743},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\ready.rs","byte_start":117969,"byte_end":117974,"line_start":18,"line_end":18,"column_start":19,"column_end":24},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":5743},"to":{"krate":2,"index":1943}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\ready.rs","byte_start":118006,"byte_end":118011,"line_start":20,"line_end":20,"column_start":25,"column_end":30},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":5743},"to":{"krate":14,"index":17}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\ready.rs","byte_start":118108,"byte_end":118113,"line_start":26,"line_end":26,"column_start":20,"column_end":25},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":5743},"to":{"krate":2,"index":8198}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join_all.rs","byte_start":125405,"byte_end":125412,"line_start":33,"line_end":33,"column_start":24,"column_end":31},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":772},"to":{"krate":2,"index":6075}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join_all.rs","byte_start":127077,"byte_end":127084,"line_start":89,"line_end":89,"column_start":20,"column_end":27},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":772},"to":{"krate":2,"index":8198}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\join_all.rs","byte_start":127781,"byte_end":127788,"line_start":116,"line_end":116,"column_start":37,"column_end":44},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":772},"to":{"krate":2,"index":4761}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\select.rs","byte_start":128258,"byte_end":128264,"line_start":13,"line_end":13,"column_start":36,"column_end":42},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":6137},"to":{"krate":2,"index":1943}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\select.rs","byte_start":129624,"byte_end":129630,"line_start":53,"line_end":53,"column_start":23,"column_end":29},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":6137},"to":{"krate":2,"index":8198}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\select.rs","byte_start":130333,"byte_end":130339,"line_start":75,"line_end":75,"column_start":28,"column_end":34},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":6137},"to":{"krate":14,"index":17}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\select_all.rs","byte_start":130876,"byte_end":130885,"line_start":16,"line_end":16,"column_start":28,"column_end":37},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":6145},"to":{"krate":2,"index":1943}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\select_all.rs","byte_start":131865,"byte_end":131874,"line_start":44,"line_end":44,"column_start":38,"column_end":47},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":6145},"to":{"krate":2,"index":8198}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\select_all.rs","byte_start":132580,"byte_end":132589,"line_start":65,"line_end":65,"column_start":49,"column_end":58},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":6145},"to":{"krate":2,"index":4761}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join_all.rs","byte_start":140806,"byte_end":140816,"line_start":39,"line_end":39,"column_start":24,"column_end":34},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":915},"to":{"krate":2,"index":6075}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join_all.rs","byte_start":142578,"byte_end":142588,"line_start":101,"line_end":101,"column_start":20,"column_end":30},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":915},"to":{"krate":2,"index":8198}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_join_all.rs","byte_start":143761,"byte_end":143771,"line_start":138,"line_end":138,"column_start":40,"column_end":50},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":915},"to":{"krate":2,"index":4761}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_select.rs","byte_start":144253,"byte_end":144262,"line_start":13,"line_end":13,"column_start":36,"column_end":45},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":6513},"to":{"krate":2,"index":1943}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\try_select.rs","byte_start":145968,"byte_end":145977,"line_start":56,"line_end":56,"column_start":37,"column_end":46},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":6513},"to":{"krate":2,"index":8198}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\select_ok.rs","byte_start":147330,"byte_end":147338,"line_start":16,"line_end":16,"column_start":28,"column_end":36},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":6521},"to":{"krate":2,"index":1943}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\select_ok.rs","byte_start":148308,"byte_end":148316,"line_start":42,"line_end":42,"column_start":41,"column_end":49},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":6521},"to":{"krate":2,"index":8198}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\select_ok.rs","byte_start":149760,"byte_end":149768,"line_start":79,"line_end":79,"column_start":52,"column_end":60},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":6521},"to":{"krate":2,"index":4761}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\either.rs","byte_start":150415,"byte_end":150421,"line_start":20,"line_end":20,"column_start":15,"column_end":21},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":6527},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\either.rs","byte_start":150806,"byte_end":150812,"line_start":32,"line_end":32,"column_start":15,"column_end":21},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":6527},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\either.rs","byte_start":151193,"byte_end":151199,"line_start":44,"line_end":44,"column_start":9,"column_end":15},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":6527},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\either.rs","byte_start":151440,"byte_end":151446,"line_start":54,"line_end":54,"column_start":23,"column_end":29},"kind":{"Impl":{"id":299}},"from":{"krate":0,"index":6527},"to":{"krate":2,"index":8198}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\either.rs","byte_start":151816,"byte_end":151822,"line_start":71,"line_end":71,"column_start":28,"column_end":34},"kind":{"Impl":{"id":300}},"from":{"krate":0,"index":6527},"to":{"krate":14,"index":17}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\either.rs","byte_start":152098,"byte_end":152104,"line_start":84,"line_end":84,"column_start":23,"column_end":29},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":6527},"to":{"krate":14,"index":68}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\either.rs","byte_start":152487,"byte_end":152493,"line_start":101,"line_end":101,"column_start":28,"column_end":34},"kind":{"Impl":{"id":302}},"from":{"krate":0,"index":6527},"to":{"krate":14,"index":82}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\either.rs","byte_start":152800,"byte_end":152806,"line_start":115,"line_end":115,"column_start":33,"column_end":39},"kind":{"Impl":{"id":303}},"from":{"krate":0,"index":6527},"to":{"krate":19,"index":9}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\abortable.rs","byte_start":8324258,"byte_end":8324267,"line_start":20,"line_end":20,"column_start":11,"column_end":20},"kind":{"Impl":{"id":309}},"from":{"krate":0,"index":11889},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\abortable.rs","byte_start":8325569,"byte_end":8325580,"line_start":62,"line_end":62,"column_start":6,"column_end":17},"kind":{"Impl":{"id":310}},"from":{"krate":0,"index":6641},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\abortable.rs","byte_start":8327456,"byte_end":8327463,"line_start":126,"line_end":126,"column_start":23,"column_end":30},"kind":{"Impl":{"id":311}},"from":{"krate":0,"index":6652},"to":{"krate":2,"index":6080}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\abortable.rs","byte_start":8327646,"byte_end":8327653,"line_start":133,"line_end":133,"column_start":28,"column_end":35},"kind":{"Impl":{"id":312}},"from":{"krate":0,"index":6652},"to":{"krate":1,"index":1634}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\abortable.rs","byte_start":8327679,"byte_end":8327688,"line_start":135,"line_end":135,"column_start":22,"column_end":31},"kind":{"Impl":{"id":313}},"from":{"krate":0,"index":11889},"to":{"krate":2,"index":8198}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\future\\abortable.rs","byte_start":8328662,"byte_end":8328673,"line_start":164,"line_end":164,"column_start":6,"column_end":17},"kind":{"Impl":{"id":314}},"from":{"krate":0,"index":6641},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\chain.rs","byte_start":207654,"byte_end":207659,"line_start":18,"line_end":18,"column_start":16,"column_end":21},"kind":{"Impl":{"id":320}},"from":{"krate":0,"index":6665},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\chain.rs","byte_start":207928,"byte_end":207933,"line_start":30,"line_end":30,"column_start":32,"column_end":37},"kind":{"Impl":{"id":321}},"from":{"krate":0,"index":6665},"to":{"krate":14,"index":82}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\chain.rs","byte_start":208138,"byte_end":208143,"line_start":39,"line_end":39,"column_start":27,"column_end":32},"kind":{"Impl":{"id":322}},"from":{"krate":0,"index":6665},"to":{"krate":14,"index":68}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\collect.rs","byte_start":209741,"byte_end":209748,"line_start":18,"line_end":18,"column_start":30,"column_end":37},"kind":{"Impl":{"id":328}},"from":{"krate":0,"index":6722},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\collect.rs","byte_start":210059,"byte_end":210066,"line_start":31,"line_end":31,"column_start":29,"column_end":36},"kind":{"Impl":{"id":329}},"from":{"krate":0,"index":6722},"to":{"krate":14,"index":17}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\collect.rs","byte_start":210242,"byte_end":210249,"line_start":40,"line_end":40,"column_start":24,"column_end":31},"kind":{"Impl":{"id":330}},"from":{"krate":0,"index":6722},"to":{"krate":2,"index":8198}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\concat.rs","byte_start":211202,"byte_end":211208,"line_start":17,"line_end":17,"column_start":10,"column_end":16},"kind":{"Impl":{"id":336}},"from":{"krate":0,"index":6778},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\concat.rs","byte_start":211483,"byte_end":211489,"line_start":30,"line_end":30,"column_start":21,"column_end":27},"kind":{"Impl":{"id":337}},"from":{"krate":0,"index":6778},"to":{"krate":2,"index":8198}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\concat.rs","byte_start":212298,"byte_end":212304,"line_start":61,"line_end":61,"column_start":26,"column_end":32},"kind":{"Impl":{"id":338}},"from":{"krate":0,"index":6778},"to":{"krate":14,"index":17}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\enumerate.rs","byte_start":212984,"byte_end":212993,"line_start":18,"line_end":18,"column_start":18,"column_end":27},"kind":{"Impl":{"id":344}},"from":{"krate":0,"index":6823},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\enumerate.rs","byte_start":213226,"byte_end":213235,"line_start":29,"line_end":29,"column_start":48,"column_end":57},"kind":{"Impl":{"id":345}},"from":{"krate":0,"index":6823},"to":{"krate":14,"index":82}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\enumerate.rs","byte_start":213353,"byte_end":213362,"line_start":35,"line_end":35,"column_start":29,"column_end":38},"kind":{"Impl":{"id":346}},"from":{"krate":0,"index":6823},"to":{"krate":14,"index":68}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\enumerate.rs","byte_start":214080,"byte_end":214089,"line_start":63,"line_end":63,"column_start":30,"column_end":39},"kind":{"Impl":{"id":347}},"from":{"krate":0,"index":6823},"to":{"krate":19,"index":9}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\filter.rs","byte_start":214799,"byte_end":214805,"line_start":25,"line_end":25,"column_start":33,"column_end":39},"kind":{"Impl":{"id":353}},"from":{"krate":0,"index":6876},"to":{"krate":2,"index":6075}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\filter.rs","byte_start":215197,"byte_end":215203,"line_start":40,"line_end":40,"column_start":18,"column_end":24},"kind":{"Impl":{"id":354}},"from":{"krate":0,"index":6876},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\filter.rs","byte_start":215597,"byte_end":215603,"line_start":57,"line_end":57,"column_start":34,"column_end":40},"kind":{"Impl":{"id":355}},"from":{"krate":0,"index":6876},"to":{"krate":14,"index":82}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\filter.rs","byte_start":215871,"byte_end":215877,"line_start":67,"line_end":67,"column_start":29,"column_end":35},"kind":{"Impl":{"id":356}},"from":{"krate":0,"index":6876},"to":{"krate":14,"index":68}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\filter.rs","byte_start":217330,"byte_end":217336,"line_start":111,"line_end":111,"column_start":38,"column_end":44},"kind":{"Impl":{"id":357}},"from":{"krate":0,"index":6876},"to":{"krate":19,"index":9}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\filter_map.rs","byte_start":218078,"byte_end":218087,"line_start":22,"line_end":22,"column_start":33,"column_end":42},"kind":{"Impl":{"id":363}},"from":{"krate":0,"index":6953},"to":{"krate":2,"index":6075}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\filter_map.rs","byte_start":218384,"byte_end":218393,"line_start":35,"line_end":35,"column_start":18,"column_end":27},"kind":{"Impl":{"id":364}},"from":{"krate":0,"index":6953},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\filter_map.rs","byte_start":218694,"byte_end":218703,"line_start":47,"line_end":47,"column_start":37,"column_end":46},"kind":{"Impl":{"id":365}},"from":{"krate":0,"index":6953},"to":{"krate":14,"index":82}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\filter_map.rs","byte_start":218980,"byte_end":218989,"line_start":57,"line_end":57,"column_start":32,"column_end":41},"kind":{"Impl":{"id":366}},"from":{"krate":0,"index":6953},"to":{"krate":14,"index":68}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\filter_map.rs","byte_start":220481,"byte_end":220490,"line_start":102,"line_end":102,"column_start":38,"column_end":47},"kind":{"Impl":{"id":367}},"from":{"krate":0,"index":6953},"to":{"krate":19,"index":9}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\flatten.rs","byte_start":221118,"byte_end":221125,"line_start":19,"line_end":19,"column_start":13,"column_end":20},"kind":{"Impl":{"id":373}},"from":{"krate":0,"index":7027},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\flatten.rs","byte_start":221294,"byte_end":221301,"line_start":27,"line_end":27,"column_start":26,"column_end":33},"kind":{"Impl":{"id":374}},"from":{"krate":0,"index":7027},"to":{"krate":14,"index":82}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\flatten.rs","byte_start":221493,"byte_end":221500,"line_start":37,"line_end":37,"column_start":21,"column_end":28},"kind":{"Impl":{"id":375}},"from":{"krate":0,"index":7027},"to":{"krate":14,"index":68}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\flatten.rs","byte_start":222360,"byte_end":222367,"line_start":66,"line_end":66,"column_start":30,"column_end":37},"kind":{"Impl":{"id":376}},"from":{"krate":0,"index":7027},"to":{"krate":19,"index":9}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\fold.rs","byte_start":222991,"byte_end":222995,"line_start":20,"line_end":20,"column_start":36,"column_end":40},"kind":{"Impl":{"id":387}},"from":{"krate":0,"index":7160},"to":{"krate":2,"index":6075}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\fold.rs","byte_start":223351,"byte_end":223355,"line_start":35,"line_end":35,"column_start":21,"column_end":25},"kind":{"Impl":{"id":388}},"from":{"krate":0,"index":7160},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\fold.rs","byte_start":223688,"byte_end":223692,"line_start":50,"line_end":50,"column_start":37,"column_end":41},"kind":{"Impl":{"id":389}},"from":{"krate":0,"index":7160},"to":{"krate":14,"index":17}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\fold.rs","byte_start":223939,"byte_end":223943,"line_start":60,"line_end":60,"column_start":32,"column_end":36},"kind":{"Impl":{"id":390}},"from":{"krate":0,"index":7160},"to":{"krate":2,"index":8198}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\forward.rs","byte_start":225561,"byte_end":225568,"line_start":21,"line_end":21,"column_start":20,"column_end":27},"kind":{"Impl":{"id":396}},"from":{"krate":0,"index":7239},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\forward.rs","byte_start":225816,"byte_end":225823,"line_start":31,"line_end":31,"column_start":39,"column_end":46},"kind":{"Impl":{"id":397}},"from":{"krate":0,"index":7239},"to":{"krate":14,"index":17}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\forward.rs","byte_start":226025,"byte_end":226032,"line_start":41,"line_end":41,"column_start":34,"column_end":41},"kind":{"Impl":{"id":398}},"from":{"krate":0,"index":7239},"to":{"krate":2,"index":8198}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\for_each.rs","byte_start":227835,"byte_end":227842,"line_start":19,"line_end":19,"column_start":33,"column_end":40},"kind":{"Impl":{"id":409}},"from":{"krate":0,"index":7378},"to":{"krate":2,"index":6075}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\for_each.rs","byte_start":228135,"byte_end":228142,"line_start":32,"line_end":32,"column_start":18,"column_end":25},"kind":{"Impl":{"id":410}},"from":{"krate":0,"index":7378},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\for_each.rs","byte_start":228436,"byte_end":228443,"line_start":46,"line_end":46,"column_start":34,"column_end":41},"kind":{"Impl":{"id":411}},"from":{"krate":0,"index":7378},"to":{"krate":14,"index":17}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\for_each.rs","byte_start":228694,"byte_end":228701,"line_start":56,"line_end":56,"column_start":29,"column_end":36},"kind":{"Impl":{"id":412}},"from":{"krate":0,"index":7378},"to":{"krate":2,"index":8198}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\fuse.rs","byte_start":229797,"byte_end":229801,"line_start":18,"line_end":18,"column_start":10,"column_end":14},"kind":{"Impl":{"id":418}},"from":{"krate":0,"index":7444},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\fuse.rs","byte_start":230302,"byte_end":230306,"line_start":35,"line_end":35,"column_start":33,"column_end":37},"kind":{"Impl":{"id":419}},"from":{"krate":0,"index":7444},"to":{"krate":14,"index":82}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\fuse.rs","byte_start":230404,"byte_end":230408,"line_start":41,"line_end":41,"column_start":28,"column_end":32},"kind":{"Impl":{"id":420}},"from":{"krate":0,"index":7444},"to":{"krate":14,"index":68}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\fuse.rs","byte_start":231153,"byte_end":231157,"line_start":74,"line_end":74,"column_start":51,"column_end":55},"kind":{"Impl":{"id":421}},"from":{"krate":0,"index":7444},"to":{"krate":19,"index":9}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\into_future.rs","byte_start":231644,"byte_end":231656,"line_start":14,"line_end":14,"column_start":26,"column_end":38},"kind":{"Impl":{"id":422}},"from":{"krate":0,"index":7497},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\into_future.rs","byte_start":234170,"byte_end":234182,"line_start":72,"line_end":72,"column_start":42,"column_end":54},"kind":{"Impl":{"id":423}},"from":{"krate":0,"index":7497},"to":{"krate":14,"index":17}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\into_future.rs","byte_start":234302,"byte_end":234314,"line_start":78,"line_end":78,"column_start":37,"column_end":49},"kind":{"Impl":{"id":424}},"from":{"krate":0,"index":7497},"to":{"krate":2,"index":8198}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\map.rs","byte_start":235173,"byte_end":235176,"line_start":20,"line_end":20,"column_start":28,"column_end":31},"kind":{"Impl":{"id":435}},"from":{"krate":0,"index":7588},"to":{"krate":2,"index":6075}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\map.rs","byte_start":235391,"byte_end":235394,"line_start":31,"line_end":31,"column_start":13,"column_end":16},"kind":{"Impl":{"id":436}},"from":{"krate":0,"index":7588},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\map.rs","byte_start":235568,"byte_end":235571,"line_start":39,"line_end":39,"column_start":29,"column_end":32},"kind":{"Impl":{"id":437}},"from":{"krate":0,"index":7588},"to":{"krate":14,"index":82}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\map.rs","byte_start":235745,"byte_end":235748,"line_start":48,"line_end":48,"column_start":24,"column_end":27},"kind":{"Impl":{"id":438}},"from":{"krate":0,"index":7588},"to":{"krate":14,"index":68}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\map.rs","byte_start":236343,"byte_end":236346,"line_start":72,"line_end":72,"column_start":34,"column_end":37},"kind":{"Impl":{"id":439}},"from":{"krate":0,"index":7588},"to":{"krate":19,"index":9}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\next.rs","byte_start":236919,"byte_end":236923,"line_start":14,"line_end":14,"column_start":36,"column_end":40},"kind":{"Impl":{"id":445}},"from":{"krate":0,"index":7751},"to":{"krate":2,"index":1943}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\next.rs","byte_start":236974,"byte_end":236978,"line_start":16,"line_end":16,"column_start":39,"column_end":43},"kind":{"Impl":{"id":446}},"from":{"krate":0,"index":7751},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\next.rs","byte_start":237129,"byte_end":237133,"line_start":22,"line_end":22,"column_start":56,"column_end":60},"kind":{"Impl":{"id":447}},"from":{"krate":0,"index":7751},"to":{"krate":14,"index":17}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\next.rs","byte_start":237272,"byte_end":237276,"line_start":28,"line_end":28,"column_start":46,"column_end":50},"kind":{"Impl":{"id":448}},"from":{"krate":0,"index":7751},"to":{"krate":2,"index":8198}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\select_next_some.rs","byte_start":237925,"byte_end":237939,"line_start":15,"line_end":15,"column_start":22,"column_end":36},"kind":{"Impl":{"id":449}},"from":{"krate":0,"index":7759},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\select_next_some.rs","byte_start":238100,"byte_end":238114,"line_start":21,"line_end":21,"column_start":56,"column_end":70},"kind":{"Impl":{"id":450}},"from":{"krate":0,"index":7759},"to":{"krate":14,"index":17}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\select_next_some.rs","byte_start":238258,"byte_end":238272,"line_start":27,"line_end":27,"column_start":51,"column_end":65},"kind":{"Impl":{"id":451}},"from":{"krate":0,"index":7759},"to":{"krate":2,"index":8198}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\peek.rs","byte_start":239458,"byte_end":239466,"line_start":25,"line_end":25,"column_start":18,"column_end":26},"kind":{"Impl":{"id":457}},"from":{"krate":0,"index":7767},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\peek.rs","byte_start":240692,"byte_end":240700,"line_start":65,"line_end":65,"column_start":34,"column_end":42},"kind":{"Impl":{"id":458}},"from":{"krate":0,"index":7767},"to":{"krate":14,"index":82}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\peek.rs","byte_start":240842,"byte_end":240850,"line_start":71,"line_end":71,"column_start":28,"column_end":36},"kind":{"Impl":{"id":459}},"from":{"krate":0,"index":7767},"to":{"krate":14,"index":68}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\peek.rs","byte_start":241682,"byte_end":241690,"line_start":98,"line_end":98,"column_start":30,"column_end":38},"kind":{"Impl":{"id":460}},"from":{"krate":0,"index":7767},"to":{"krate":19,"index":9}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\peek.rs","byte_start":242055,"byte_end":242059,"line_start":114,"line_end":114,"column_start":25,"column_end":29},"kind":{"Impl":{"id":466}},"from":{"krate":0,"index":7821},"to":{"krate":2,"index":6075}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\peek.rs","byte_start":242330,"byte_end":242334,"line_start":126,"line_end":126,"column_start":34,"column_end":38},"kind":{"Impl":{"id":467}},"from":{"krate":0,"index":7821},"to":{"krate":14,"index":17}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\peek.rs","byte_start":242445,"byte_end":242449,"line_start":132,"line_end":132,"column_start":25,"column_end":29},"kind":{"Impl":{"id":468}},"from":{"krate":0,"index":7821},"to":{"krate":2,"index":8198}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\skip.rs","byte_start":243306,"byte_end":243310,"line_start":18,"line_end":18,"column_start":18,"column_end":22},"kind":{"Impl":{"id":474}},"from":{"krate":0,"index":7869},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\skip.rs","byte_start":243538,"byte_end":243542,"line_start":29,"line_end":29,"column_start":39,"column_end":43},"kind":{"Impl":{"id":475}},"from":{"krate":0,"index":7869},"to":{"krate":14,"index":82}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\skip.rs","byte_start":243660,"byte_end":243664,"line_start":35,"line_end":35,"column_start":29,"column_end":33},"kind":{"Impl":{"id":476}},"from":{"krate":0,"index":7869},"to":{"krate":14,"index":68}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\skip.rs","byte_start":244616,"byte_end":244620,"line_start":71,"line_end":71,"column_start":30,"column_end":34},"kind":{"Impl":{"id":477}},"from":{"krate":0,"index":7869},"to":{"krate":19,"index":9}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\skip_while.rs","byte_start":245337,"byte_end":245346,"line_start":23,"line_end":23,"column_start":33,"column_end":42},"kind":{"Impl":{"id":483}},"from":{"krate":0,"index":7922},"to":{"krate":2,"index":6075}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\skip_while.rs","byte_start":245798,"byte_end":245807,"line_start":39,"line_end":39,"column_start":18,"column_end":27},"kind":{"Impl":{"id":484}},"from":{"krate":0,"index":7922},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\skip_while.rs","byte_start":246236,"byte_end":246245,"line_start":57,"line_end":57,"column_start":34,"column_end":43},"kind":{"Impl":{"id":485}},"from":{"krate":0,"index":7922},"to":{"krate":14,"index":82}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\skip_while.rs","byte_start":246505,"byte_end":246514,"line_start":67,"line_end":67,"column_start":29,"column_end":38},"kind":{"Impl":{"id":486}},"from":{"krate":0,"index":7922},"to":{"krate":14,"index":68}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\skip_while.rs","byte_start":248210,"byte_end":248219,"line_start":121,"line_end":121,"column_start":38,"column_end":47},"kind":{"Impl":{"id":487}},"from":{"krate":0,"index":7922},"to":{"krate":19,"index":9}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\take.rs","byte_start":248855,"byte_end":248859,"line_start":19,"line_end":19,"column_start":18,"column_end":22},"kind":{"Impl":{"id":493}},"from":{"krate":0,"index":8002},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\take.rs","byte_start":249069,"byte_end":249073,"line_start":30,"line_end":30,"column_start":21,"column_end":25},"kind":{"Impl":{"id":494}},"from":{"krate":0,"index":8002},"to":{"krate":14,"index":68}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\take.rs","byte_start":250112,"byte_end":250116,"line_start":73,"line_end":73,"column_start":26,"column_end":30},"kind":{"Impl":{"id":495}},"from":{"krate":0,"index":8002},"to":{"krate":14,"index":82}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\take.rs","byte_start":250364,"byte_end":250368,"line_start":83,"line_end":83,"column_start":30,"column_end":34},"kind":{"Impl":{"id":496}},"from":{"krate":0,"index":8002},"to":{"krate":19,"index":9}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\take_while.rs","byte_start":251074,"byte_end":251083,"line_start":23,"line_end":23,"column_start":33,"column_end":42},"kind":{"Impl":{"id":502}},"from":{"krate":0,"index":8055},"to":{"krate":2,"index":6075}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\take_while.rs","byte_start":251531,"byte_end":251540,"line_start":39,"line_end":39,"column_start":18,"column_end":27},"kind":{"Impl":{"id":503}},"from":{"krate":0,"index":8055},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\take_while.rs","byte_start":251962,"byte_end":251971,"line_start":57,"line_end":57,"column_start":29,"column_end":38},"kind":{"Impl":{"id":504}},"from":{"krate":0,"index":8055},"to":{"krate":14,"index":68}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\take_while.rs","byte_start":253580,"byte_end":253589,"line_start":111,"line_end":111,"column_start":34,"column_end":43},"kind":{"Impl":{"id":505}},"from":{"krate":0,"index":8055},"to":{"krate":14,"index":82}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\take_while.rs","byte_start":253957,"byte_end":253966,"line_start":123,"line_end":123,"column_start":38,"column_end":47},"kind":{"Impl":{"id":506}},"from":{"krate":0,"index":8055},"to":{"krate":19,"index":9}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\take_until.rs","byte_start":254912,"byte_end":254921,"line_start":28,"line_end":28,"column_start":30,"column_end":39},"kind":{"Impl":{"id":512}},"from":{"krate":0,"index":8135},"to":{"krate":2,"index":6075}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\take_until.rs","byte_start":255248,"byte_end":255257,"line_start":42,"line_end":42,"column_start":15,"column_end":24},"kind":{"Impl":{"id":513}},"from":{"krate":0,"index":8135},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\take_until.rs","byte_start":257450,"byte_end":257459,"line_start":117,"line_end":117,"column_start":26,"column_end":35},"kind":{"Impl":{"id":514}},"from":{"krate":0,"index":8135},"to":{"krate":14,"index":68}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\take_until.rs","byte_start":258529,"byte_end":258538,"line_start":158,"line_end":158,"column_start":31,"column_end":40},"kind":{"Impl":{"id":515}},"from":{"krate":0,"index":8135},"to":{"krate":14,"index":82}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\take_until.rs","byte_start":258775,"byte_end":258784,"line_start":170,"line_end":170,"column_start":35,"column_end":44},"kind":{"Impl":{"id":516}},"from":{"krate":0,"index":8135},"to":{"krate":19,"index":9}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\then.rs","byte_start":259423,"byte_end":259427,"line_start":21,"line_end":21,"column_start":33,"column_end":37},"kind":{"Impl":{"id":522}},"from":{"krate":0,"index":8202},"to":{"krate":2,"index":6075}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\then.rs","byte_start":259717,"byte_end":259721,"line_start":34,"line_end":34,"column_start":18,"column_end":22},"kind":{"Impl":{"id":523}},"from":{"krate":0,"index":8202},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\then.rs","byte_start":260030,"byte_end":260034,"line_start":49,"line_end":49,"column_start":34,"column_end":38},"kind":{"Impl":{"id":524}},"from":{"krate":0,"index":8202},"to":{"krate":14,"index":82}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\then.rs","byte_start":260272,"byte_end":260276,"line_start":59,"line_end":59,"column_start":29,"column_end":33},"kind":{"Impl":{"id":525}},"from":{"krate":0,"index":8202},"to":{"krate":14,"index":68}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\then.rs","byte_start":261524,"byte_end":261528,"line_start":101,"line_end":101,"column_start":38,"column_end":42},"kind":{"Impl":{"id":526}},"from":{"krate":0,"index":8202},"to":{"krate":19,"index":9}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\zip.rs","byte_start":262187,"byte_end":262190,"line_start":21,"line_end":21,"column_start":32,"column_end":35},"kind":{"Impl":{"id":532}},"from":{"krate":0,"index":8276},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\zip.rs","byte_start":263941,"byte_end":263944,"line_start":67,"line_end":67,"column_start":32,"column_end":35},"kind":{"Impl":{"id":533}},"from":{"krate":0,"index":8276},"to":{"krate":14,"index":82}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\zip.rs","byte_start":264135,"byte_end":264138,"line_start":75,"line_end":75,"column_start":27,"column_end":30},"kind":{"Impl":{"id":534}},"from":{"krate":0,"index":8276},"to":{"krate":14,"index":68}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\chunks.rs","byte_start":266809,"byte_end":266815,"line_start":22,"line_end":22,"column_start":18,"column_end":24},"kind":{"Impl":{"id":540}},"from":{"krate":0,"index":8339},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\chunks.rs","byte_start":267326,"byte_end":267332,"line_start":41,"line_end":41,"column_start":29,"column_end":35},"kind":{"Impl":{"id":541}},"from":{"krate":0,"index":8339},"to":{"krate":14,"index":68}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\chunks.rs","byte_start":268999,"byte_end":269005,"line_start":91,"line_end":91,"column_start":39,"column_end":45},"kind":{"Impl":{"id":542}},"from":{"krate":0,"index":8339},"to":{"krate":14,"index":82}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\chunks.rs","byte_start":269228,"byte_end":269234,"line_start":99,"line_end":99,"column_start":30,"column_end":36},"kind":{"Impl":{"id":543}},"from":{"krate":0,"index":8339},"to":{"krate":19,"index":9}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\ready_chunks.rs","byte_start":269945,"byte_end":269956,"line_start":22,"line_end":22,"column_start":18,"column_end":29},"kind":{"Impl":{"id":549}},"from":{"krate":0,"index":8395},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\ready_chunks.rs","byte_start":270321,"byte_end":270332,"line_start":36,"line_end":36,"column_start":29,"column_end":40},"kind":{"Impl":{"id":550}},"from":{"krate":0,"index":8395},"to":{"krate":14,"index":68}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\ready_chunks.rs","byte_start":272449,"byte_end":272460,"line_start":97,"line_end":97,"column_start":39,"column_end":50},"kind":{"Impl":{"id":551}},"from":{"krate":0,"index":8395},"to":{"krate":14,"index":82}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\ready_chunks.rs","byte_start":272683,"byte_end":272694,"line_start":105,"line_end":105,"column_start":30,"column_end":41},"kind":{"Impl":{"id":552}},"from":{"krate":0,"index":8395},"to":{"krate":19,"index":9}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\scan.rs","byte_start":273401,"byte_end":273405,"line_start":26,"line_end":26,"column_start":36,"column_end":40},"kind":{"Impl":{"id":558}},"from":{"krate":0,"index":8451},"to":{"krate":2,"index":6075}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\scan.rs","byte_start":273891,"byte_end":273895,"line_start":43,"line_end":43,"column_start":29,"column_end":33},"kind":{"Impl":{"id":559}},"from":{"krate":0,"index":8451},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\scan.rs","byte_start":274059,"byte_end":274063,"line_start":50,"line_end":50,"column_start":24,"column_end":28},"kind":{"Impl":{"id":560}},"from":{"krate":0,"index":8451},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\scan.rs","byte_start":274530,"byte_end":274534,"line_start":70,"line_end":70,"column_start":35,"column_end":39},"kind":{"Impl":{"id":561}},"from":{"krate":0,"index":8451},"to":{"krate":14,"index":68}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\scan.rs","byte_start":275797,"byte_end":275801,"line_start":115,"line_end":115,"column_start":40,"column_end":44},"kind":{"Impl":{"id":562}},"from":{"krate":0,"index":8451},"to":{"krate":14,"index":82}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\scan.rs","byte_start":276171,"byte_end":276175,"line_start":128,"line_end":128,"column_start":38,"column_end":42},"kind":{"Impl":{"id":563}},"from":{"krate":0,"index":8451},"to":{"krate":19,"index":9}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\buffer_unordered.rs","byte_start":8361628,"byte_end":8361643,"line_start":25,"line_end":25,"column_start":25,"column_end":40},"kind":{"Impl":{"id":569}},"from":{"krate":0,"index":11845},"to":{"krate":2,"index":6075}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\buffer_unordered.rs","byte_start":8361975,"byte_end":8361990,"line_start":38,"line_end":38,"column_start":10,"column_end":25},"kind":{"Impl":{"id":570}},"from":{"krate":0,"index":11845},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\buffer_unordered.rs","byte_start":8362403,"byte_end":8362418,"line_start":58,"line_end":58,"column_start":21,"column_end":36},"kind":{"Impl":{"id":571}},"from":{"krate":0,"index":11845},"to":{"krate":14,"index":68}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\buffer_unordered.rs","byte_start":8363945,"byte_end":8363960,"line_start":108,"line_end":108,"column_start":26,"column_end":41},"kind":{"Impl":{"id":572}},"from":{"krate":0,"index":11845},"to":{"krate":14,"index":82}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\buffer_unordered.rs","byte_start":8364244,"byte_end":8364259,"line_start":120,"line_end":120,"column_start":30,"column_end":45},"kind":{"Impl":{"id":573}},"from":{"krate":0,"index":11845},"to":{"krate":19,"index":9}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\buffered.rs","byte_start":8365001,"byte_end":8365009,"line_start":25,"line_end":25,"column_start":25,"column_end":33},"kind":{"Impl":{"id":579}},"from":{"krate":0,"index":11800},"to":{"krate":2,"index":6075}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\buffered.rs","byte_start":8365356,"byte_end":8365364,"line_start":39,"line_end":39,"column_start":10,"column_end":18},"kind":{"Impl":{"id":580}},"from":{"krate":0,"index":11800},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\buffered.rs","byte_start":8365701,"byte_end":8365709,"line_start":55,"line_end":55,"column_start":21,"column_end":29},"kind":{"Impl":{"id":581}},"from":{"krate":0,"index":11800},"to":{"krate":14,"index":68}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\buffered.rs","byte_start":8367292,"byte_end":8367300,"line_start":107,"line_end":107,"column_start":30,"column_end":38},"kind":{"Impl":{"id":582}},"from":{"krate":0,"index":11800},"to":{"krate":19,"index":9}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\for_each_concurrent.rs","byte_start":8368075,"byte_end":8368092,"line_start":22,"line_end":22,"column_start":33,"column_end":50},"kind":{"Impl":{"id":588}},"from":{"krate":0,"index":11732},"to":{"krate":2,"index":6075}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\for_each_concurrent.rs","byte_start":8368438,"byte_end":8368455,"line_start":36,"line_end":36,"column_start":18,"column_end":35},"kind":{"Impl":{"id":589}},"from":{"krate":0,"index":11732},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\for_each_concurrent.rs","byte_start":8368926,"byte_end":8368943,"line_start":52,"line_end":52,"column_start":34,"column_end":51},"kind":{"Impl":{"id":590}},"from":{"krate":0,"index":11732},"to":{"krate":14,"index":17}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\for_each_concurrent.rs","byte_start":8369185,"byte_end":8369202,"line_start":62,"line_end":62,"column_start":29,"column_end":46},"kind":{"Impl":{"id":591}},"from":{"krate":0,"index":11732},"to":{"krate":2,"index":8198}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\split.rs","byte_start":8371401,"byte_end":8371412,"line_start":14,"line_end":14,"column_start":19,"column_end":30},"kind":{"Impl":{"id":592}},"from":{"krate":0,"index":8723},"to":{"krate":2,"index":1943}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\split.rs","byte_start":8371435,"byte_end":8371446,"line_start":16,"line_end":16,"column_start":16,"column_end":27},"kind":{"Impl":{"id":593}},"from":{"krate":0,"index":8723},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\split.rs","byte_start":8371875,"byte_end":8371886,"line_start":27,"line_end":27,"column_start":28,"column_end":39},"kind":{"Impl":{"id":594}},"from":{"krate":0,"index":8723},"to":{"krate":14,"index":68}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\split.rs","byte_start":8372437,"byte_end":8372446,"line_start":51,"line_end":51,"column_start":25,"column_end":34},"kind":{"Impl":{"id":595}},"from":{"krate":0,"index":8730},"to":{"krate":2,"index":1943}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\split.rs","byte_start":8372494,"byte_end":8372503,"line_start":53,"line_end":53,"column_start":35,"column_end":44},"kind":{"Impl":{"id":596}},"from":{"krate":0,"index":8730},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\split.rs","byte_start":8372991,"byte_end":8373000,"line_start":64,"line_end":64,"column_start":27,"column_end":36},"kind":{"Impl":{"id":597}},"from":{"krate":0,"index":8730},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\split.rs","byte_start":8373668,"byte_end":8373677,"line_start":81,"line_end":81,"column_start":42,"column_end":51},"kind":{"Impl":{"id":598}},"from":{"krate":0,"index":8730},"to":{"krate":19,"index":9}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\split.rs","byte_start":8375236,"byte_end":8375248,"line_start":124,"line_end":124,"column_start":30,"column_end":42},"kind":{"Impl":{"id":599}},"from":{"krate":0,"index":8686},"to":{"krate":2,"index":6075}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\split.rs","byte_start":8375450,"byte_end":8375462,"line_start":132,"line_end":132,"column_start":32,"column_end":44},"kind":{"Impl":{"id":600}},"from":{"krate":0,"index":8686},"to":{"krate":2,"index":6080}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\split.rs","byte_start":8375711,"byte_end":8375723,"line_start":139,"line_end":139,"column_start":53,"column_end":65},"kind":{"Impl":{"id":601}},"from":{"krate":0,"index":8686},"to":{"krate":1,"index":1634}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\catch_unwind.rs","byte_start":276794,"byte_end":276805,"line_start":18,"line_end":18,"column_start":31,"column_end":42},"kind":{"Impl":{"id":607}},"from":{"krate":0,"index":8739},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\catch_unwind.rs","byte_start":277015,"byte_end":277026,"line_start":26,"line_end":26,"column_start":42,"column_end":53},"kind":{"Impl":{"id":608}},"from":{"krate":0,"index":8739},"to":{"krate":14,"index":68}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\catch_unwind.rs","byte_start":277973,"byte_end":277984,"line_start":63,"line_end":63,"column_start":52,"column_end":63},"kind":{"Impl":{"id":609}},"from":{"krate":0,"index":8739},"to":{"krate":14,"index":82}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":166849,"byte_end":166850,"line_start":194,"line_end":194,"column_start":31,"column_end":32},"kind":{"Impl":{"id":610}},"from":{"krate":0,"index":1988},"to":{"krate":0,"index":1989}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\stream\\mod.rs","byte_start":166993,"byte_end":166999,"line_start":198,"line_end":198,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":14,"index":68},"to":{"krate":0,"index":1989}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\and_then.rs","byte_start":309188,"byte_end":309195,"line_start":21,"line_end":21,"column_start":33,"column_end":40},"kind":{"Impl":{"id":616}},"from":{"krate":0,"index":8790},"to":{"krate":2,"index":6075}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\and_then.rs","byte_start":309488,"byte_end":309495,"line_start":34,"line_end":34,"column_start":18,"column_end":25},"kind":{"Impl":{"id":617}},"from":{"krate":0,"index":8790},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\and_then.rs","byte_start":309788,"byte_end":309795,"line_start":46,"line_end":46,"column_start":29,"column_end":36},"kind":{"Impl":{"id":618}},"from":{"krate":0,"index":8790},"to":{"krate":14,"index":68}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\and_then.rs","byte_start":311009,"byte_end":311016,"line_start":86,"line_end":86,"column_start":34,"column_end":41},"kind":{"Impl":{"id":619}},"from":{"krate":0,"index":8790},"to":{"krate":14,"index":82}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\and_then.rs","byte_start":311374,"byte_end":311381,"line_start":98,"line_end":98,"column_start":38,"column_end":45},"kind":{"Impl":{"id":620}},"from":{"krate":0,"index":8790},"to":{"krate":19,"index":9}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\into_stream.rs","byte_start":311911,"byte_end":311921,"line_start":17,"line_end":17,"column_start":10,"column_end":20},"kind":{"Impl":{"id":641}},"from":{"krate":0,"index":9119},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\into_stream.rs","byte_start":312120,"byte_end":312130,"line_start":26,"line_end":26,"column_start":51,"column_end":61},"kind":{"Impl":{"id":642}},"from":{"krate":0,"index":9119},"to":{"krate":14,"index":82}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\into_stream.rs","byte_start":312251,"byte_end":312261,"line_start":32,"line_end":32,"column_start":32,"column_end":42},"kind":{"Impl":{"id":643}},"from":{"krate":0,"index":9119},"to":{"krate":14,"index":68}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\into_stream.rs","byte_start":312708,"byte_end":312718,"line_start":50,"line_end":50,"column_start":42,"column_end":52},"kind":{"Impl":{"id":644}},"from":{"krate":0,"index":9119},"to":{"krate":19,"index":9}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\or_else.rs","byte_start":313326,"byte_end":313332,"line_start":21,"line_end":21,"column_start":33,"column_end":39},"kind":{"Impl":{"id":660}},"from":{"krate":0,"index":9338},"to":{"krate":2,"index":6075}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\or_else.rs","byte_start":313624,"byte_end":313630,"line_start":34,"line_end":34,"column_start":18,"column_end":24},"kind":{"Impl":{"id":661}},"from":{"krate":0,"index":9338},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\or_else.rs","byte_start":313920,"byte_end":313926,"line_start":46,"line_end":46,"column_start":29,"column_end":35},"kind":{"Impl":{"id":662}},"from":{"krate":0,"index":9338},"to":{"krate":14,"index":68}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\or_else.rs","byte_start":315274,"byte_end":315280,"line_start":90,"line_end":90,"column_start":34,"column_end":40},"kind":{"Impl":{"id":663}},"from":{"krate":0,"index":9338},"to":{"krate":14,"index":82}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\or_else.rs","byte_start":315635,"byte_end":315641,"line_start":102,"line_end":102,"column_start":38,"column_end":44},"kind":{"Impl":{"id":664}},"from":{"krate":0,"index":9338},"to":{"krate":19,"index":9}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_next.rs","byte_start":316196,"byte_end":316203,"line_start":14,"line_end":14,"column_start":36,"column_end":43},"kind":{"Impl":{"id":665}},"from":{"krate":0,"index":9412},"to":{"krate":2,"index":1943}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_next.rs","byte_start":316257,"byte_end":316264,"line_start":16,"line_end":16,"column_start":42,"column_end":49},"kind":{"Impl":{"id":666}},"from":{"krate":0,"index":9412},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_next.rs","byte_start":316430,"byte_end":316437,"line_start":22,"line_end":22,"column_start":68,"column_end":75},"kind":{"Impl":{"id":667}},"from":{"krate":0,"index":9412},"to":{"krate":14,"index":17}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_next.rs","byte_start":316579,"byte_end":316586,"line_start":28,"line_end":28,"column_start":49,"column_end":56},"kind":{"Impl":{"id":668}},"from":{"krate":0,"index":9412},"to":{"krate":2,"index":8198}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_for_each.rs","byte_start":317328,"byte_end":317338,"line_start":19,"line_end":19,"column_start":33,"column_end":43},"kind":{"Impl":{"id":674}},"from":{"krate":0,"index":9420},"to":{"krate":2,"index":6075}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_for_each.rs","byte_start":317634,"byte_end":317644,"line_start":32,"line_end":32,"column_start":18,"column_end":28},"kind":{"Impl":{"id":675}},"from":{"krate":0,"index":9420},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_for_each.rs","byte_start":317958,"byte_end":317968,"line_start":46,"line_end":46,"column_start":29,"column_end":39},"kind":{"Impl":{"id":676}},"from":{"krate":0,"index":9420},"to":{"krate":2,"index":8198}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_filter.rs","byte_start":319345,"byte_end":319354,"line_start":25,"line_end":25,"column_start":33,"column_end":42},"kind":{"Impl":{"id":682}},"from":{"krate":0,"index":9486},"to":{"krate":2,"index":6075}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_filter.rs","byte_start":319750,"byte_end":319759,"line_start":40,"line_end":40,"column_start":18,"column_end":27},"kind":{"Impl":{"id":683}},"from":{"krate":0,"index":9486},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_filter.rs","byte_start":320063,"byte_end":320072,"line_start":55,"line_end":55,"column_start":34,"column_end":43},"kind":{"Impl":{"id":684}},"from":{"krate":0,"index":9486},"to":{"krate":14,"index":82}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_filter.rs","byte_start":320341,"byte_end":320350,"line_start":65,"line_end":65,"column_start":29,"column_end":38},"kind":{"Impl":{"id":685}},"from":{"krate":0,"index":9486},"to":{"krate":14,"index":68}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_filter.rs","byte_start":321830,"byte_end":321839,"line_start":109,"line_end":109,"column_start":41,"column_end":50},"kind":{"Impl":{"id":686}},"from":{"krate":0,"index":9486},"to":{"krate":19,"index":9}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_filter_map.rs","byte_start":322523,"byte_end":322535,"line_start":22,"line_end":22,"column_start":33,"column_end":45},"kind":{"Impl":{"id":692}},"from":{"krate":0,"index":9563},"to":{"krate":2,"index":6075}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_filter_map.rs","byte_start":322835,"byte_end":322847,"line_start":35,"line_end":35,"column_start":18,"column_end":30},"kind":{"Impl":{"id":693}},"from":{"krate":0,"index":9563},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_filter_map.rs","byte_start":323052,"byte_end":323064,"line_start":43,"line_end":43,"column_start":37,"column_end":49},"kind":{"Impl":{"id":694}},"from":{"krate":0,"index":9563},"to":{"krate":14,"index":82}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_filter_map.rs","byte_start":323354,"byte_end":323366,"line_start":53,"line_end":53,"column_start":32,"column_end":44},"kind":{"Impl":{"id":695}},"from":{"krate":0,"index":9563},"to":{"krate":14,"index":68}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_filter_map.rs","byte_start":324921,"byte_end":324933,"line_start":98,"line_end":98,"column_start":38,"column_end":50},"kind":{"Impl":{"id":696}},"from":{"krate":0,"index":9563},"to":{"krate":19,"index":9}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_flatten.rs","byte_start":325536,"byte_end":325546,"line_start":22,"line_end":22,"column_start":10,"column_end":20},"kind":{"Impl":{"id":702}},"from":{"krate":0,"index":9637},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_flatten.rs","byte_start":325811,"byte_end":325821,"line_start":35,"line_end":35,"column_start":26,"column_end":36},"kind":{"Impl":{"id":703}},"from":{"krate":0,"index":9637},"to":{"krate":14,"index":82}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_flatten.rs","byte_start":326067,"byte_end":326077,"line_start":46,"line_end":46,"column_start":21,"column_end":31},"kind":{"Impl":{"id":704}},"from":{"krate":0,"index":9637},"to":{"krate":14,"index":68}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_flatten.rs","byte_start":327036,"byte_end":327046,"line_start":76,"line_end":76,"column_start":30,"column_end":40},"kind":{"Impl":{"id":705}},"from":{"krate":0,"index":9637},"to":{"krate":19,"index":9}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_collect.rs","byte_start":327673,"byte_end":327683,"line_start":18,"line_end":18,"column_start":33,"column_end":43},"kind":{"Impl":{"id":711}},"from":{"krate":0,"index":9691},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_collect.rs","byte_start":327875,"byte_end":327885,"line_start":27,"line_end":27,"column_start":29,"column_end":39},"kind":{"Impl":{"id":712}},"from":{"krate":0,"index":9691},"to":{"krate":14,"index":17}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_collect.rs","byte_start":328073,"byte_end":328083,"line_start":37,"line_end":37,"column_start":24,"column_end":34},"kind":{"Impl":{"id":713}},"from":{"krate":0,"index":9691},"to":{"krate":2,"index":8198}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_concat.rs","byte_start":329094,"byte_end":329103,"line_start":17,"line_end":17,"column_start":10,"column_end":19},"kind":{"Impl":{"id":719}},"from":{"krate":0,"index":9747},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_concat.rs","byte_start":329369,"byte_end":329378,"line_start":30,"line_end":30,"column_start":21,"column_end":30},"kind":{"Impl":{"id":720}},"from":{"krate":0,"index":9747},"to":{"krate":2,"index":8198}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_fold.rs","byte_start":330616,"byte_end":330623,"line_start":20,"line_end":20,"column_start":36,"column_end":43},"kind":{"Impl":{"id":726}},"from":{"krate":0,"index":9792},"to":{"krate":2,"index":6075}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_fold.rs","byte_start":330982,"byte_end":330989,"line_start":35,"line_end":35,"column_start":21,"column_end":28},"kind":{"Impl":{"id":727}},"from":{"krate":0,"index":9792},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_fold.rs","byte_start":331347,"byte_end":331354,"line_start":50,"line_end":50,"column_start":37,"column_end":44},"kind":{"Impl":{"id":728}},"from":{"krate":0,"index":9792},"to":{"krate":14,"index":17}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_fold.rs","byte_start":331620,"byte_end":331627,"line_start":60,"line_end":60,"column_start":32,"column_end":39},"kind":{"Impl":{"id":729}},"from":{"krate":0,"index":9792},"to":{"krate":2,"index":8198}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_unfold.rs","byte_start":335433,"byte_end":335442,"line_start":79,"line_end":79,"column_start":32,"column_end":41},"kind":{"Impl":{"id":735}},"from":{"krate":0,"index":9871},"to":{"krate":2,"index":6075}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_unfold.rs","byte_start":335743,"byte_end":335752,"line_start":92,"line_end":92,"column_start":34,"column_end":43},"kind":{"Impl":{"id":736}},"from":{"krate":0,"index":9871},"to":{"krate":14,"index":68}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_skip_while.rs","byte_start":337490,"byte_end":337502,"line_start":24,"line_end":24,"column_start":33,"column_end":45},"kind":{"Impl":{"id":742}},"from":{"krate":0,"index":9936},"to":{"krate":2,"index":6075}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_skip_while.rs","byte_start":337958,"byte_end":337970,"line_start":40,"line_end":40,"column_start":18,"column_end":30},"kind":{"Impl":{"id":743}},"from":{"krate":0,"index":9936},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_skip_while.rs","byte_start":338419,"byte_end":338431,"line_start":58,"line_end":58,"column_start":29,"column_end":41},"kind":{"Impl":{"id":744}},"from":{"krate":0,"index":9936},"to":{"krate":14,"index":68}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_skip_while.rs","byte_start":339984,"byte_end":339996,"line_start":106,"line_end":106,"column_start":34,"column_end":46},"kind":{"Impl":{"id":745}},"from":{"krate":0,"index":9936},"to":{"krate":14,"index":82}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_skip_while.rs","byte_start":340375,"byte_end":340387,"line_start":118,"line_end":118,"column_start":41,"column_end":53},"kind":{"Impl":{"id":746}},"from":{"krate":0,"index":9936},"to":{"krate":19,"index":9}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_buffer_unordered.rs","byte_start":8395564,"byte_end":8395582,"line_start":25,"line_end":25,"column_start":10,"column_end":28},"kind":{"Impl":{"id":752}},"from":{"krate":0,"index":11683},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_buffer_unordered.rs","byte_start":8395941,"byte_end":8395959,"line_start":40,"line_end":40,"column_start":21,"column_end":39},"kind":{"Impl":{"id":753}},"from":{"krate":0,"index":11683},"to":{"krate":14,"index":68}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_buffer_unordered.rs","byte_start":8397318,"byte_end":8397336,"line_start":80,"line_end":80,"column_start":33,"column_end":51},"kind":{"Impl":{"id":754}},"from":{"krate":0,"index":11683},"to":{"krate":19,"index":9}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_for_each_concurrent.rs","byte_start":8398172,"byte_end":8398192,"line_start":24,"line_end":24,"column_start":33,"column_end":53},"kind":{"Impl":{"id":760}},"from":{"krate":0,"index":11615},"to":{"krate":2,"index":6075}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_for_each_concurrent.rs","byte_start":8398557,"byte_end":8398577,"line_start":38,"line_end":38,"column_start":34,"column_end":54},"kind":{"Impl":{"id":761}},"from":{"krate":0,"index":11615},"to":{"krate":14,"index":17}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_for_each_concurrent.rs","byte_start":8398828,"byte_end":8398848,"line_start":48,"line_end":48,"column_start":18,"column_end":38},"kind":{"Impl":{"id":762}},"from":{"krate":0,"index":11615},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\try_for_each_concurrent.rs","byte_start":8399340,"byte_end":8399360,"line_start":64,"line_end":64,"column_start":29,"column_end":49},"kind":{"Impl":{"id":763}},"from":{"krate":0,"index":11615},"to":{"krate":2,"index":8198}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":282547,"byte_end":282548,"line_start":128,"line_end":128,"column_start":46,"column_end":47},"kind":{"Impl":{"id":764}},"from":{"krate":0,"index":2575},"to":{"krate":0,"index":2576}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\try_stream\\mod.rs","byte_start":282629,"byte_end":282638,"line_start":131,"line_end":131,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":14,"index":97},"to":{"krate":0,"index":2576}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\iter.rs","byte_start":340762,"byte_end":340766,"line_start":12,"line_end":12,"column_start":19,"column_end":23},"kind":{"Impl":{"id":765}},"from":{"krate":0,"index":10096},"to":{"krate":2,"index":1943}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\iter.rs","byte_start":341372,"byte_end":341376,"line_start":36,"line_end":36,"column_start":20,"column_end":24},"kind":{"Impl":{"id":766}},"from":{"krate":0,"index":10096},"to":{"krate":14,"index":68}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\repeat.rs","byte_start":342510,"byte_end":342516,"line_start":32,"line_end":32,"column_start":19,"column_end":25},"kind":{"Impl":{"id":767}},"from":{"krate":0,"index":10102},"to":{"krate":2,"index":1943}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\repeat.rs","byte_start":342543,"byte_end":342549,"line_start":34,"line_end":34,"column_start":20,"column_end":26},"kind":{"Impl":{"id":768}},"from":{"krate":0,"index":10102},"to":{"krate":14,"index":68}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\repeat.rs","byte_start":342856,"byte_end":342862,"line_start":48,"line_end":48,"column_start":25,"column_end":31},"kind":{"Impl":{"id":769}},"from":{"krate":0,"index":10102},"to":{"krate":14,"index":82}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\empty.rs","byte_start":343474,"byte_end":343479,"line_start":22,"line_end":22,"column_start":19,"column_end":24},"kind":{"Impl":{"id":770}},"from":{"krate":0,"index":10108},"to":{"krate":2,"index":1943}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\empty.rs","byte_start":343511,"byte_end":343516,"line_start":24,"line_end":24,"column_start":25,"column_end":30},"kind":{"Impl":{"id":771}},"from":{"krate":0,"index":10108},"to":{"krate":14,"index":82}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\empty.rs","byte_start":343601,"byte_end":343606,"line_start":30,"line_end":30,"column_start":20,"column_end":25},"kind":{"Impl":{"id":772}},"from":{"krate":0,"index":10108},"to":{"krate":14,"index":68}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\once.rs","byte_start":344665,"byte_end":344669,"line_start":33,"line_end":33,"column_start":11,"column_end":15},"kind":{"Impl":{"id":778}},"from":{"krate":0,"index":10114},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\once.rs","byte_start":344798,"byte_end":344802,"line_start":39,"line_end":39,"column_start":30,"column_end":34},"kind":{"Impl":{"id":779}},"from":{"krate":0,"index":10114},"to":{"krate":14,"index":68}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\once.rs","byte_start":345442,"byte_end":345446,"line_start":64,"line_end":64,"column_start":35,"column_end":39},"kind":{"Impl":{"id":780}},"from":{"krate":0,"index":10114},"to":{"krate":14,"index":82}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\pending.rs","byte_start":346056,"byte_end":346063,"line_start":20,"line_end":20,"column_start":19,"column_end":26},"kind":{"Impl":{"id":781}},"from":{"krate":0,"index":10156},"to":{"krate":2,"index":1943}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\pending.rs","byte_start":346095,"byte_end":346102,"line_start":22,"line_end":22,"column_start":25,"column_end":32},"kind":{"Impl":{"id":782}},"from":{"krate":0,"index":10156},"to":{"krate":14,"index":82}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\pending.rs","byte_start":346187,"byte_end":346194,"line_start":28,"line_end":28,"column_start":20,"column_end":27},"kind":{"Impl":{"id":783}},"from":{"krate":0,"index":10156},"to":{"krate":14,"index":68}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\poll_fn.rs","byte_start":346719,"byte_end":346725,"line_start":14,"line_end":14,"column_start":19,"column_end":25},"kind":{"Impl":{"id":784}},"from":{"krate":0,"index":2771},"to":{"krate":2,"index":1943}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\poll_fn.rs","byte_start":346756,"byte_end":346762,"line_start":16,"line_end":16,"column_start":24,"column_end":30},"kind":{"Impl":{"id":785}},"from":{"krate":0,"index":2771},"to":{"krate":2,"index":6075}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\poll_fn.rs","byte_start":347504,"byte_end":347510,"line_start":47,"line_end":47,"column_start":23,"column_end":29},"kind":{"Impl":{"id":786}},"from":{"krate":0,"index":2771},"to":{"krate":14,"index":68}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\select.rs","byte_start":348876,"byte_end":348882,"line_start":40,"line_end":40,"column_start":16,"column_end":22},"kind":{"Impl":{"id":792}},"from":{"krate":0,"index":10162},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\select.rs","byte_start":350356,"byte_end":350362,"line_start":77,"line_end":77,"column_start":32,"column_end":38},"kind":{"Impl":{"id":793}},"from":{"krate":0,"index":10162},"to":{"krate":14,"index":82}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\select.rs","byte_start":350580,"byte_end":350586,"line_start":86,"line_end":86,"column_start":27,"column_end":33},"kind":{"Impl":{"id":794}},"from":{"krate":0,"index":10162},"to":{"krate":14,"index":68}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\unfold.rs","byte_start":353899,"byte_end":353905,"line_start":68,"line_end":68,"column_start":32,"column_end":38},"kind":{"Impl":{"id":800}},"from":{"krate":0,"index":10223},"to":{"krate":2,"index":6075}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\unfold.rs","byte_start":354208,"byte_end":354214,"line_start":81,"line_end":81,"column_start":39,"column_end":45},"kind":{"Impl":{"id":801}},"from":{"krate":0,"index":10223},"to":{"krate":14,"index":82}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\unfold.rs","byte_start":354440,"byte_end":354446,"line_start":90,"line_end":90,"column_start":34,"column_end":40},"kind":{"Impl":{"id":802}},"from":{"krate":0,"index":10223},"to":{"krate":14,"index":68}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_ordered.rs","byte_start":8405910,"byte_end":8405922,"line_start":21,"line_end":21,"column_start":23,"column_end":35},"kind":{"Impl":{"id":808}},"from":{"krate":0,"index":11569},"to":{"krate":2,"index":1634}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_ordered.rs","byte_start":8406027,"byte_end":8406039,"line_start":27,"line_end":27,"column_start":16,"column_end":28},"kind":{"Impl":{"id":809}},"from":{"krate":0,"index":11569},"to":{"krate":2,"index":1639}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_ordered.rs","byte_start":8406070,"byte_end":8406082,"line_start":29,"line_end":29,"column_start":24,"column_end":36},"kind":{"Impl":{"id":810}},"from":{"krate":0,"index":11569},"to":{"krate":2,"index":1671}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_ordered.rs","byte_start":8406205,"byte_end":8406217,"line_start":35,"line_end":35,"column_start":17,"column_end":29},"kind":{"Impl":{"id":811}},"from":{"krate":0,"index":11569},"to":{"krate":2,"index":1660}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_ordered.rs","byte_start":8406398,"byte_end":8406410,"line_start":42,"line_end":42,"column_start":20,"column_end":32},"kind":{"Impl":{"id":812}},"from":{"krate":0,"index":11569},"to":{"krate":2,"index":8198}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_ordered.rs","byte_start":8409027,"byte_end":8409041,"line_start":100,"line_end":100,"column_start":27,"column_end":41},"kind":{"Impl":{"id":813}},"from":{"krate":0,"index":10323},"to":{"krate":2,"index":1943}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_ordered.rs","byte_start":8409067,"byte_end":8409081,"line_start":102,"line_end":102,"column_start":19,"column_end":33},"kind":{"Impl":{"id":814}},"from":{"krate":0,"index":10323},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_ordered.rs","byte_start":8410705,"byte_end":8410719,"line_start":146,"line_end":146,"column_start":31,"column_end":45},"kind":{"Impl":{"id":815}},"from":{"krate":0,"index":10323},"to":{"krate":2,"index":1895}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_ordered.rs","byte_start":8410837,"byte_end":8410851,"line_start":152,"line_end":152,"column_start":30,"column_end":44},"kind":{"Impl":{"id":816}},"from":{"krate":0,"index":10323},"to":{"krate":14,"index":68}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_ordered.rs","byte_start":8412035,"byte_end":8412049,"line_start":190,"line_end":190,"column_start":29,"column_end":43},"kind":{"Impl":{"id":817}},"from":{"krate":0,"index":10323},"to":{"krate":2,"index":6075}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_ordered.rs","byte_start":8412215,"byte_end":8412229,"line_start":196,"line_end":196,"column_start":41,"column_end":55},"kind":{"Impl":{"id":818}},"from":{"krate":0,"index":10323},"to":{"krate":2,"index":4761}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_ordered.rs","byte_start":8412487,"byte_end":8412501,"line_start":206,"line_end":206,"column_start":35,"column_end":49},"kind":{"Impl":{"id":819}},"from":{"krate":0,"index":10323},"to":{"krate":2,"index":4774}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_unordered\\abort.rs","byte_start":8438697,"byte_end":8438708,"line_start":4,"line_end":4,"column_start":19,"column_end":30},"kind":{"Impl":{"id":820}},"from":{"krate":0,"index":10396},"to":{"krate":2,"index":2097}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_unordered\\iter.rs","byte_start":8439880,"byte_end":8439890,"line_start":32,"line_end":32,"column_start":28,"column_end":38},"kind":{"Impl":{"id":821}},"from":{"krate":0,"index":10641},"to":{"krate":2,"index":4858}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_unordered\\iter.rs","byte_start":8440747,"byte_end":8440757,"line_start":58,"line_end":58,"column_start":33,"column_end":43},"kind":{"Impl":{"id":822}},"from":{"krate":0,"index":10641},"to":{"krate":2,"index":4813}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_unordered\\iter.rs","byte_start":8440805,"byte_end":8440812,"line_start":60,"line_end":60,"column_start":35,"column_end":42},"kind":{"Impl":{"id":823}},"from":{"krate":0,"index":10651},"to":{"krate":2,"index":4858}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_unordered\\iter.rs","byte_start":8441076,"byte_end":8441083,"line_start":72,"line_end":72,"column_start":40,"column_end":47},"kind":{"Impl":{"id":824}},"from":{"krate":0,"index":10651},"to":{"krate":2,"index":4813}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_unordered\\iter.rs","byte_start":8441124,"byte_end":8441134,"line_start":74,"line_end":74,"column_start":28,"column_end":38},"kind":{"Impl":{"id":825}},"from":{"krate":0,"index":10660},"to":{"krate":2,"index":4858}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_unordered\\iter.rs","byte_start":8442051,"byte_end":8442061,"line_start":103,"line_end":103,"column_start":33,"column_end":43},"kind":{"Impl":{"id":826}},"from":{"krate":0,"index":10660},"to":{"krate":2,"index":4813}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_unordered\\iter.rs","byte_start":8442109,"byte_end":8442113,"line_start":105,"line_end":105,"column_start":35,"column_end":39},"kind":{"Impl":{"id":827}},"from":{"krate":0,"index":10671},"to":{"krate":2,"index":4858}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_unordered\\iter.rs","byte_start":8442369,"byte_end":8442373,"line_start":117,"line_end":117,"column_start":40,"column_end":44},"kind":{"Impl":{"id":828}},"from":{"krate":0,"index":10671},"to":{"krate":2,"index":4813}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_unordered\\task.rs","byte_start":8443862,"byte_end":8443866,"line_start":41,"line_end":41,"column_start":27,"column_end":31},"kind":{"Impl":{"id":829}},"from":{"krate":0,"index":10460},"to":{"krate":2,"index":1904}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_unordered\\task.rs","byte_start":8443901,"byte_end":8443905,"line_start":42,"line_end":42,"column_start":27,"column_end":31},"kind":{"Impl":{"id":830}},"from":{"krate":0,"index":10460},"to":{"krate":2,"index":1916}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_unordered\\task.rs","byte_start":8443937,"byte_end":8443941,"line_start":44,"line_end":44,"column_start":23,"column_end":27},"kind":{"Impl":{"id":831}},"from":{"krate":0,"index":10460},"to":{"krate":17,"index":260}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_unordered\\task.rs","byte_start":8445018,"byte_end":8445022,"line_start":71,"line_end":71,"column_start":11,"column_end":15},"kind":{"Impl":{"id":832}},"from":{"krate":0,"index":10460},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_unordered\\task.rs","byte_start":8446034,"byte_end":8446038,"line_start":102,"line_end":102,"column_start":20,"column_end":24},"kind":{"Impl":{"id":833}},"from":{"krate":0,"index":10460},"to":{"krate":2,"index":2097}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_unordered\\ready_to_run_queue.rs","byte_start":8447488,"byte_end":8447503,"line_start":29,"line_end":29,"column_start":11,"column_end":26},"kind":{"Impl":{"id":834}},"from":{"krate":0,"index":10507},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_unordered\\ready_to_run_queue.rs","byte_start":8449353,"byte_end":8449368,"line_start":90,"line_end":90,"column_start":20,"column_end":35},"kind":{"Impl":{"id":835}},"from":{"krate":0,"index":10507},"to":{"krate":2,"index":2097}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_unordered\\mod.rs","byte_start":8415747,"byte_end":8415763,"line_start":77,"line_end":77,"column_start":33,"column_end":49},"kind":{"Impl":{"id":836}},"from":{"krate":0,"index":10525},"to":{"krate":2,"index":1904}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_unordered\\mod.rs","byte_start":8415804,"byte_end":8415820,"line_start":78,"line_end":78,"column_start":33,"column_end":49},"kind":{"Impl":{"id":837}},"from":{"krate":0,"index":10525},"to":{"krate":2,"index":1916}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_unordered\\mod.rs","byte_start":8415849,"byte_end":8415865,"line_start":79,"line_end":79,"column_start":21,"column_end":37},"kind":{"Impl":{"id":838}},"from":{"krate":0,"index":10525},"to":{"krate":2,"index":1943}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_unordered\\mod.rs","byte_start":8415890,"byte_end":8415906,"line_start":81,"line_end":81,"column_start":16,"column_end":32},"kind":{"Impl":{"id":839}},"from":{"krate":0,"index":10525},"to":{"krate":17,"index":10}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_unordered\\mod.rs","byte_start":8416103,"byte_end":8416119,"line_start":90,"line_end":90,"column_start":21,"column_end":37},"kind":{"Impl":{"id":840}},"from":{"krate":0,"index":10525},"to":{"krate":17,"index":13}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_unordered\\mod.rs","byte_start":8417838,"byte_end":8417854,"line_start":124,"line_end":124,"column_start":23,"column_end":39},"kind":{"Impl":{"id":841}},"from":{"krate":0,"index":10525},"to":{"krate":2,"index":1895}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_unordered\\mod.rs","byte_start":8417957,"byte_end":8417973,"line_start":130,"line_end":130,"column_start":11,"column_end":27},"kind":{"Impl":{"id":842}},"from":{"krate":0,"index":10525},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_unordered\\mod.rs","byte_start":8429633,"byte_end":8429649,"line_start":411,"line_end":411,"column_start":30,"column_end":46},"kind":{"Impl":{"id":843}},"from":{"krate":0,"index":10525},"to":{"krate":14,"index":68}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_unordered\\mod.rs","byte_start":8434046,"byte_end":8434050,"line_start":511,"line_end":511,"column_start":32,"column_end":36},"kind":{"Impl":{"id":844}},"from":{"krate":0,"index":10562},"to":{"krate":2,"index":2097}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_unordered\\mod.rs","byte_start":8436388,"byte_end":8436404,"line_start":573,"line_end":573,"column_start":21,"column_end":37},"kind":{"Impl":{"id":845}},"from":{"krate":0,"index":10525},"to":{"krate":2,"index":6075}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_unordered\\mod.rs","byte_start":8436551,"byte_end":8436567,"line_start":579,"line_end":579,"column_start":20,"column_end":36},"kind":{"Impl":{"id":846}},"from":{"krate":0,"index":10525},"to":{"krate":2,"index":2097}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_unordered\\mod.rs","byte_start":8438007,"byte_end":8438023,"line_start":608,"line_end":608,"column_start":33,"column_end":49},"kind":{"Impl":{"id":847}},"from":{"krate":0,"index":10525},"to":{"krate":2,"index":4761}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_unordered\\mod.rs","byte_start":8438279,"byte_end":8438295,"line_start":618,"line_end":618,"column_start":35,"column_end":51},"kind":{"Impl":{"id":848}},"from":{"krate":0,"index":10525},"to":{"krate":14,"index":82}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\futures_unordered\\mod.rs","byte_start":8438417,"byte_end":8438433,"line_start":624,"line_end":624,"column_start":27,"column_end":43},"kind":{"Impl":{"id":849}},"from":{"krate":0,"index":10525},"to":{"krate":2,"index":4774}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\select_all.rs","byte_start":8451185,"byte_end":8451194,"line_start":29,"line_end":29,"column_start":27,"column_end":36},"kind":{"Impl":{"id":850}},"from":{"krate":0,"index":10606},"to":{"krate":2,"index":6075}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\select_all.rs","byte_start":8451339,"byte_end":8451348,"line_start":35,"line_end":35,"column_start":26,"column_end":35},"kind":{"Impl":{"id":851}},"from":{"krate":0,"index":10606},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\select_all.rs","byte_start":8452398,"byte_end":8452407,"line_start":67,"line_end":67,"column_start":38,"column_end":47},"kind":{"Impl":{"id":852}},"from":{"krate":0,"index":10606},"to":{"krate":2,"index":1895}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\select_all.rs","byte_start":8452520,"byte_end":8452529,"line_start":73,"line_end":73,"column_start":37,"column_end":46},"kind":{"Impl":{"id":853}},"from":{"krate":0,"index":10606},"to":{"krate":14,"index":68}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\select_all.rs","byte_start":8453336,"byte_end":8453345,"line_start":98,"line_end":98,"column_start":42,"column_end":51},"kind":{"Impl":{"id":854}},"from":{"krate":0,"index":10606},"to":{"krate":14,"index":82}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\select_all.rs","byte_start":8454321,"byte_end":8454330,"line_start":129,"line_end":129,"column_start":47,"column_end":56},"kind":{"Impl":{"id":855}},"from":{"krate":0,"index":10606},"to":{"krate":2,"index":4761}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\stream\\select_all.rs","byte_start":8454475,"byte_end":8454484,"line_start":135,"line_end":135,"column_start":41,"column_end":50},"kind":{"Impl":{"id":856}},"from":{"krate":0,"index":10606},"to":{"krate":2,"index":4774}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\close.rs","byte_start":365298,"byte_end":365303,"line_start":15,"line_end":15,"column_start":42,"column_end":47},"kind":{"Impl":{"id":857}},"from":{"krate":0,"index":10680},"to":{"krate":2,"index":1943}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\close.rs","byte_start":365498,"byte_end":365503,"line_start":20,"line_end":20,"column_start":49,"column_end":54},"kind":{"Impl":{"id":858}},"from":{"krate":0,"index":10680},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\close.rs","byte_start":365713,"byte_end":365718,"line_start":29,"line_end":29,"column_start":56,"column_end":61},"kind":{"Impl":{"id":859}},"from":{"krate":0,"index":10680},"to":{"krate":2,"index":8198}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\drain.rs","byte_start":366679,"byte_end":366684,"line_start":32,"line_end":32,"column_start":19,"column_end":24},"kind":{"Impl":{"id":860}},"from":{"krate":0,"index":10691},"to":{"krate":2,"index":1943}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\drain.rs","byte_start":366712,"byte_end":366717,"line_start":34,"line_end":34,"column_start":21,"column_end":26},"kind":{"Impl":{"id":861}},"from":{"krate":0,"index":10691},"to":{"krate":19,"index":9}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\fanout.rs","byte_start":367930,"byte_end":367936,"line_start":20,"line_end":20,"column_start":16,"column_end":22},"kind":{"Impl":{"id":867}},"from":{"krate":0,"index":10697},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\fanout.rs","byte_start":368961,"byte_end":368967,"line_start":52,"line_end":52,"column_start":40,"column_end":46},"kind":{"Impl":{"id":868}},"from":{"krate":0,"index":10697},"to":{"krate":2,"index":6075}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\fanout.rs","byte_start":369218,"byte_end":369224,"line_start":61,"line_end":61,"column_start":37,"column_end":43},"kind":{"Impl":{"id":869}},"from":{"krate":0,"index":10697},"to":{"krate":19,"index":9}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\flush.rs","byte_start":371474,"byte_end":371479,"line_start":16,"line_end":16,"column_start":42,"column_end":47},"kind":{"Impl":{"id":870}},"from":{"krate":0,"index":10754},"to":{"krate":2,"index":1943}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\flush.rs","byte_start":371830,"byte_end":371835,"line_start":24,"line_end":24,"column_start":49,"column_end":54},"kind":{"Impl":{"id":871}},"from":{"krate":0,"index":10754},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\flush.rs","byte_start":372045,"byte_end":372050,"line_start":33,"line_end":33,"column_start":56,"column_end":61},"kind":{"Impl":{"id":872}},"from":{"krate":0,"index":10754},"to":{"krate":2,"index":8198}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\err_into.rs","byte_start":372702,"byte_end":372713,"line_start":15,"line_end":15,"column_start":19,"column_end":30},"kind":{"Impl":{"id":878}},"from":{"krate":0,"index":10765},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\err_into.rs","byte_start":373004,"byte_end":373015,"line_start":28,"line_end":28,"column_start":34,"column_end":45},"kind":{"Impl":{"id":879}},"from":{"krate":0,"index":10765},"to":{"krate":19,"index":9}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\err_into.rs","byte_start":373225,"byte_end":373236,"line_start":38,"line_end":38,"column_start":29,"column_end":40},"kind":{"Impl":{"id":880}},"from":{"krate":0,"index":10765},"to":{"krate":14,"index":68}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\err_into.rs","byte_start":373403,"byte_end":373414,"line_start":47,"line_end":47,"column_start":34,"column_end":45},"kind":{"Impl":{"id":881}},"from":{"krate":0,"index":10765},"to":{"krate":14,"index":82}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\map_err.rs","byte_start":373991,"byte_end":374001,"line_start":17,"line_end":17,"column_start":13,"column_end":23},"kind":{"Impl":{"id":887}},"from":{"krate":0,"index":10838},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\map_err.rs","byte_start":374323,"byte_end":374333,"line_start":29,"line_end":29,"column_start":37,"column_end":47},"kind":{"Impl":{"id":888}},"from":{"krate":0,"index":10838},"to":{"krate":19,"index":9}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\map_err.rs","byte_start":375387,"byte_end":375397,"line_start":65,"line_end":65,"column_start":31,"column_end":41},"kind":{"Impl":{"id":889}},"from":{"krate":0,"index":10838},"to":{"krate":14,"index":68}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\map_err.rs","byte_start":375503,"byte_end":375513,"line_start":71,"line_end":71,"column_start":41,"column_end":51},"kind":{"Impl":{"id":890}},"from":{"krate":0,"index":10838},"to":{"krate":14,"index":82}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\send.rs","byte_start":376038,"byte_end":376042,"line_start":15,"line_end":15,"column_start":42,"column_end":46},"kind":{"Impl":{"id":891}},"from":{"krate":0,"index":10903},"to":{"krate":2,"index":1943}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\send.rs","byte_start":376109,"byte_end":376113,"line_start":17,"line_end":17,"column_start":49,"column_end":53},"kind":{"Impl":{"id":892}},"from":{"krate":0,"index":10903},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\send.rs","byte_start":376329,"byte_end":376333,"line_start":26,"line_end":26,"column_start":56,"column_end":60},"kind":{"Impl":{"id":893}},"from":{"krate":0,"index":10903},"to":{"krate":2,"index":8198}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\send_all.rs","byte_start":377753,"byte_end":377760,"line_start":22,"line_end":22,"column_start":29,"column_end":36},"kind":{"Impl":{"id":894}},"from":{"krate":0,"index":3082},"to":{"krate":2,"index":6075}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\send_all.rs","byte_start":378199,"byte_end":378206,"line_start":38,"line_end":38,"column_start":24,"column_end":31},"kind":{"Impl":{"id":895}},"from":{"krate":0,"index":3082},"to":{"krate":2,"index":1943}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\send_all.rs","byte_start":378317,"byte_end":378324,"line_start":44,"line_end":44,"column_start":29,"column_end":36},"kind":{"Impl":{"id":896}},"from":{"krate":0,"index":3082},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\send_all.rs","byte_start":379217,"byte_end":379224,"line_start":78,"line_end":78,"column_start":36,"column_end":43},"kind":{"Impl":{"id":897}},"from":{"krate":0,"index":3082},"to":{"krate":2,"index":8198}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\with.rs","byte_start":380886,"byte_end":380890,"line_start":22,"line_end":22,"column_start":42,"column_end":46},"kind":{"Impl":{"id":903}},"from":{"krate":0,"index":10914},"to":{"krate":2,"index":6075}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\with.rs","byte_start":381192,"byte_end":381196,"line_start":35,"line_end":35,"column_start":27,"column_end":31},"kind":{"Impl":{"id":904}},"from":{"krate":0,"index":10914},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\with.rs","byte_start":381656,"byte_end":381660,"line_start":55,"line_end":55,"column_start":37,"column_end":41},"kind":{"Impl":{"id":905}},"from":{"krate":0,"index":10914},"to":{"krate":14,"index":68}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\with.rs","byte_start":381855,"byte_end":381859,"line_start":65,"line_end":65,"column_start":30,"column_end":34},"kind":{"Impl":{"id":906}},"from":{"krate":0,"index":10914},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\with.rs","byte_start":382614,"byte_end":382618,"line_start":92,"line_end":92,"column_start":42,"column_end":46},"kind":{"Impl":{"id":907}},"from":{"krate":0,"index":10914},"to":{"krate":19,"index":9}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\with_flat_map.rs","byte_start":384416,"byte_end":384427,"line_start":22,"line_end":22,"column_start":41,"column_end":52},"kind":{"Impl":{"id":913}},"from":{"krate":0,"index":11010},"to":{"krate":2,"index":6075}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\with_flat_map.rs","byte_start":384800,"byte_end":384811,"line_start":37,"line_end":37,"column_start":26,"column_end":37},"kind":{"Impl":{"id":914}},"from":{"krate":0,"index":11010},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\with_flat_map.rs","byte_start":386226,"byte_end":386237,"line_start":85,"line_end":85,"column_start":36,"column_end":47},"kind":{"Impl":{"id":915}},"from":{"krate":0,"index":11010},"to":{"krate":14,"index":68}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\with_flat_map.rs","byte_start":386460,"byte_end":386471,"line_start":96,"line_end":96,"column_start":41,"column_end":52},"kind":{"Impl":{"id":916}},"from":{"krate":0,"index":11010},"to":{"krate":14,"index":82}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\with_flat_map.rs","byte_start":386720,"byte_end":386731,"line_start":107,"line_end":107,"column_start":38,"column_end":49},"kind":{"Impl":{"id":917}},"from":{"krate":0,"index":11010},"to":{"krate":19,"index":9}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\buffer.rs","byte_start":388348,"byte_end":388354,"line_start":21,"line_end":21,"column_start":28,"column_end":34},"kind":{"Impl":{"id":923}},"from":{"krate":0,"index":11109},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\buffer.rs","byte_start":389181,"byte_end":389187,"line_start":51,"line_end":51,"column_start":26,"column_end":32},"kind":{"Impl":{"id":924}},"from":{"krate":0,"index":11109},"to":{"krate":14,"index":68}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\buffer.rs","byte_start":389512,"byte_end":389518,"line_start":63,"line_end":63,"column_start":31,"column_end":37},"kind":{"Impl":{"id":925}},"from":{"krate":0,"index":11109},"to":{"krate":14,"index":82}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\buffer.rs","byte_start":389687,"byte_end":389693,"line_start":69,"line_end":69,"column_start":43,"column_end":49},"kind":{"Impl":{"id":926}},"from":{"krate":0,"index":11109},"to":{"krate":19,"index":9}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":356364,"byte_end":356365,"line_start":55,"line_end":55,"column_start":41,"column_end":42},"kind":{"Impl":{"id":927}},"from":{"krate":0,"index":3256},"to":{"krate":0,"index":3258}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\sink\\mod.rs","byte_start":356514,"byte_end":356518,"line_start":59,"line_end":59,"column_start":26,"column_end":30},"kind":"SuperTrait","from":{"krate":19,"index":9},"to":{"krate":0,"index":3258}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\task\\spawn.rs","byte_start":392159,"byte_end":392161,"line_start":16,"line_end":16,"column_start":31,"column_end":33},"kind":{"Impl":{"id":928}},"from":{"krate":0,"index":3304},"to":{"krate":0,"index":3307}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\task\\spawn.rs","byte_start":392216,"byte_end":392218,"line_start":17,"line_end":17,"column_start":36,"column_end":38},"kind":{"Impl":{"id":929}},"from":{"krate":0,"index":3306},"to":{"krate":0,"index":3310}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\task\\spawn.rs","byte_start":392297,"byte_end":392302,"line_start":20,"line_end":20,"column_start":21,"column_end":26},"kind":"SuperTrait","from":{"krate":17,"index":10},"to":{"krate":0,"index":3307}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\task\\spawn.rs","byte_start":394957,"byte_end":394967,"line_start":95,"line_end":95,"column_start":26,"column_end":36},"kind":"SuperTrait","from":{"krate":17,"index":13},"to":{"krate":0,"index":3310}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\fns.rs","byte_start":398306,"byte_end":398307,"line_start":9,"line_end":9,"column_start":30,"column_end":31},"kind":{"Impl":{"id":930}},"from":{"krate":0,"index":3343},"to":{"krate":0,"index":3338}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\fns.rs","byte_start":398445,"byte_end":398452,"line_start":19,"line_end":19,"column_start":22,"column_end":29},"kind":"SuperTrait","from":{"krate":0,"index":3338},"to":{"krate":0,"index":3348}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\fns.rs","byte_start":398541,"byte_end":398542,"line_start":23,"line_end":23,"column_start":29,"column_end":30},"kind":{"Impl":{"id":931}},"from":{"krate":0,"index":3352},"to":{"krate":0,"index":3348}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\fns.rs","byte_start":398727,"byte_end":398733,"line_start":34,"line_end":34,"column_start":19,"column_end":25},"kind":"SuperTrait","from":{"krate":0,"index":3348},"to":{"krate":0,"index":3356}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\fns.rs","byte_start":398811,"byte_end":398812,"line_start":38,"line_end":38,"column_start":26,"column_end":27},"kind":{"Impl":{"id":932}},"from":{"krate":0,"index":3360},"to":{"krate":0,"index":3356}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\fns.rs","byte_start":399827,"byte_end":399831,"line_start":76,"line_end":76,"column_start":21,"column_end":25},"kind":{"Impl":{"id":933}},"from":{"krate":0,"index":3365},"to":{"krate":2,"index":1895}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\fns.rs","byte_start":399925,"byte_end":399929,"line_start":82,"line_end":82,"column_start":27,"column_end":31},"kind":{"Impl":{"id":934}},"from":{"krate":0,"index":3365},"to":{"krate":0,"index":3338}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\fns.rs","byte_start":400188,"byte_end":400195,"line_start":94,"line_end":94,"column_start":30,"column_end":37},"kind":{"Impl":{"id":940}},"from":{"krate":0,"index":11196},"to":{"krate":0,"index":3338}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\fns.rs","byte_start":400418,"byte_end":400425,"line_start":104,"line_end":104,"column_start":29,"column_end":36},"kind":{"Impl":{"id":941}},"from":{"krate":0,"index":11196},"to":{"krate":0,"index":3348}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\fns.rs","byte_start":400616,"byte_end":400623,"line_start":113,"line_end":113,"column_start":26,"column_end":33},"kind":{"Impl":{"id":942}},"from":{"krate":0,"index":11196},"to":{"krate":0,"index":3356}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\fns.rs","byte_start":400928,"byte_end":400941,"line_start":129,"line_end":129,"column_start":35,"column_end":48},"kind":{"Impl":{"id":943}},"from":{"krate":0,"index":11217},"to":{"krate":0,"index":3338}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\fns.rs","byte_start":401277,"byte_end":401286,"line_start":143,"line_end":143,"column_start":27,"column_end":36},"kind":{"Impl":{"id":949}},"from":{"krate":0,"index":11233},"to":{"krate":0,"index":3338}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\fns.rs","byte_start":401487,"byte_end":401496,"line_start":153,"line_end":153,"column_start":26,"column_end":35},"kind":{"Impl":{"id":950}},"from":{"krate":0,"index":11233},"to":{"krate":0,"index":3348}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\fns.rs","byte_start":401675,"byte_end":401684,"line_start":162,"line_end":162,"column_start":23,"column_end":32},"kind":{"Impl":{"id":951}},"from":{"krate":0,"index":11233},"to":{"krate":0,"index":3356}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\fns.rs","byte_start":402004,"byte_end":402011,"line_start":178,"line_end":178,"column_start":41,"column_end":48},"kind":{"Impl":{"id":952}},"from":{"krate":0,"index":11248},"to":{"krate":0,"index":3338}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\fns.rs","byte_start":402230,"byte_end":402237,"line_start":187,"line_end":187,"column_start":40,"column_end":47},"kind":{"Impl":{"id":953}},"from":{"krate":0,"index":11248},"to":{"krate":0,"index":3348}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\fns.rs","byte_start":402415,"byte_end":402422,"line_start":195,"line_end":195,"column_start":37,"column_end":44},"kind":{"Impl":{"id":954}},"from":{"krate":0,"index":11248},"to":{"krate":0,"index":3356}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\fns.rs","byte_start":402723,"byte_end":402731,"line_start":210,"line_end":210,"column_start":41,"column_end":49},"kind":{"Impl":{"id":955}},"from":{"krate":0,"index":11263},"to":{"krate":0,"index":3338}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\fns.rs","byte_start":402954,"byte_end":402962,"line_start":219,"line_end":219,"column_start":40,"column_end":48},"kind":{"Impl":{"id":956}},"from":{"krate":0,"index":11263},"to":{"krate":0,"index":3348}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\fns.rs","byte_start":403144,"byte_end":403152,"line_start":227,"line_end":227,"column_start":37,"column_end":45},"kind":{"Impl":{"id":957}},"from":{"krate":0,"index":11263},"to":{"krate":0,"index":3356}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\fns.rs","byte_start":403462,"byte_end":403473,"line_start":242,"line_end":242,"column_start":49,"column_end":60},"kind":{"Impl":{"id":958}},"from":{"krate":0,"index":11278},"to":{"krate":0,"index":3338}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\fns.rs","byte_start":403710,"byte_end":403721,"line_start":251,"line_end":251,"column_start":48,"column_end":59},"kind":{"Impl":{"id":959}},"from":{"krate":0,"index":11278},"to":{"krate":0,"index":3348}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\fns.rs","byte_start":403936,"byte_end":403947,"line_start":259,"line_end":259,"column_start":45,"column_end":56},"kind":{"Impl":{"id":960}},"from":{"krate":0,"index":11278},"to":{"krate":0,"index":3356}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\fns.rs","byte_start":404292,"byte_end":404304,"line_start":274,"line_end":274,"column_start":49,"column_end":61},"kind":{"Impl":{"id":961}},"from":{"krate":0,"index":11290},"to":{"krate":0,"index":3338}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\fns.rs","byte_start":404542,"byte_end":404554,"line_start":283,"line_end":283,"column_start":48,"column_end":60},"kind":{"Impl":{"id":962}},"from":{"krate":0,"index":11290},"to":{"krate":0,"index":3348}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\fns.rs","byte_start":404770,"byte_end":404782,"line_start":291,"line_end":291,"column_start":45,"column_end":57},"kind":{"Impl":{"id":963}},"from":{"krate":0,"index":11290},"to":{"krate":0,"index":3356}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\fns.rs","byte_start":405379,"byte_end":405393,"line_start":311,"line_end":311,"column_start":41,"column_end":55},"kind":{"Impl":{"id":964}},"from":{"krate":0,"index":11302},"to":{"krate":0,"index":3338}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\fns.rs","byte_start":405614,"byte_end":405628,"line_start":320,"line_end":320,"column_start":40,"column_end":54},"kind":{"Impl":{"id":965}},"from":{"krate":0,"index":11302},"to":{"krate":0,"index":3348}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\fns.rs","byte_start":405827,"byte_end":405841,"line_start":328,"line_end":328,"column_start":37,"column_end":51},"kind":{"Impl":{"id":966}},"from":{"krate":0,"index":11302},"to":{"krate":0,"index":3356}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\fns.rs","byte_start":406145,"byte_end":406151,"line_start":342,"line_end":342,"column_start":21,"column_end":27},"kind":{"Impl":{"id":967}},"from":{"krate":0,"index":3529},"to":{"krate":2,"index":1895}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\fns.rs","byte_start":406246,"byte_end":406252,"line_start":347,"line_end":347,"column_start":27,"column_end":33},"kind":{"Impl":{"id":968}},"from":{"krate":0,"index":3529},"to":{"krate":0,"index":3338}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8463867,"byte_end":8463872,"line_start":25,"line_end":25,"column_start":32,"column_end":37},"kind":{"Impl":{"id":974}},"from":{"krate":0,"index":11357},"to":{"krate":2,"index":6075}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8464205,"byte_end":8464210,"line_start":35,"line_end":35,"column_start":21,"column_end":26},"kind":{"Impl":{"id":975}},"from":{"krate":0,"index":11357},"to":{"krate":2,"index":1825}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8464303,"byte_end":8464308,"line_start":41,"line_end":41,"column_start":30,"column_end":35},"kind":{"Impl":{"id":976}},"from":{"krate":0,"index":11357},"to":{"krate":2,"index":1895}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8464446,"byte_end":8464452,"line_start":52,"line_end":52,"column_start":6,"column_end":12},"kind":{"Impl":{"id":977}},"from":{"krate":0,"index":11371},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8464996,"byte_end":8465001,"line_start":72,"line_end":72,"column_start":9,"column_end":14},"kind":{"Impl":{"id":978}},"from":{"krate":0,"index":11357},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8465577,"byte_end":8465582,"line_start":97,"line_end":97,"column_start":17,"column_end":22},"kind":{"Impl":{"id":979}},"from":{"krate":0,"index":11357},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8468731,"byte_end":8468746,"line_start":188,"line_end":188,"column_start":32,"column_end":47},"kind":{"Impl":{"id":980}},"from":{"krate":0,"index":11394},"to":{"krate":2,"index":6075}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8469256,"byte_end":8469271,"line_start":204,"line_end":204,"column_start":33,"column_end":48},"kind":{"Impl":{"id":981}},"from":{"krate":0,"index":11394},"to":{"krate":14,"index":17}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8469388,"byte_end":8469403,"line_start":210,"line_end":210,"column_start":32,"column_end":47},"kind":{"Impl":{"id":982}},"from":{"krate":0,"index":11394},"to":{"krate":2,"index":8198}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8470632,"byte_end":8470647,"line_start":246,"line_end":246,"column_start":26,"column_end":41},"kind":{"Impl":{"id":983}},"from":{"krate":0,"index":11394},"to":{"krate":2,"index":2097}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8471249,"byte_end":8471259,"line_start":265,"line_end":265,"column_start":21,"column_end":31},"kind":{"Impl":{"id":984}},"from":{"krate":0,"index":11413},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8472249,"byte_end":8472259,"line_start":295,"line_end":295,"column_start":45,"column_end":55},"kind":{"Impl":{"id":985}},"from":{"krate":0,"index":11413},"to":{"krate":2,"index":6075}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8472504,"byte_end":8472514,"line_start":304,"line_end":304,"column_start":26,"column_end":36},"kind":{"Impl":{"id":986}},"from":{"krate":0,"index":11413},"to":{"krate":2,"index":2097}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8472612,"byte_end":8472622,"line_start":310,"line_end":310,"column_start":27,"column_end":37},"kind":{"Impl":{"id":987}},"from":{"krate":0,"index":11413},"to":{"krate":2,"index":2073}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8472763,"byte_end":8472773,"line_start":317,"line_end":317,"column_start":30,"column_end":40},"kind":{"Impl":{"id":988}},"from":{"krate":0,"index":11413},"to":{"krate":2,"index":2086}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8473187,"byte_end":8473203,"line_start":330,"line_end":330,"column_start":32,"column_end":48},"kind":{"Impl":{"id":989}},"from":{"krate":0,"index":11436},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8474311,"byte_end":8474327,"line_start":361,"line_end":361,"column_start":56,"column_end":72},"kind":{"Impl":{"id":990}},"from":{"krate":0,"index":11436},"to":{"krate":2,"index":6075}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8474592,"byte_end":8474608,"line_start":370,"line_end":370,"column_start":37,"column_end":53},"kind":{"Impl":{"id":991}},"from":{"krate":0,"index":11436},"to":{"krate":2,"index":2097}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8474720,"byte_end":8474736,"line_start":376,"line_end":376,"column_start":38,"column_end":54},"kind":{"Impl":{"id":992}},"from":{"krate":0,"index":11436},"to":{"krate":2,"index":2073}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8474879,"byte_end":8474895,"line_start":383,"line_end":383,"column_start":41,"column_end":57},"kind":{"Impl":{"id":993}},"from":{"krate":0,"index":11436},"to":{"krate":2,"index":2086}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8475172,"byte_end":8475177,"line_start":391,"line_end":391,"column_start":40,"column_end":45},"kind":{"Impl":{"id":994}},"from":{"krate":0,"index":11357},"to":{"krate":2,"index":1904}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8475223,"byte_end":8475228,"line_start":392,"line_end":392,"column_start":40,"column_end":45},"kind":{"Impl":{"id":995}},"from":{"krate":0,"index":11357},"to":{"krate":2,"index":1916}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8475395,"byte_end":8475410,"line_start":396,"line_end":396,"column_start":40,"column_end":55},"kind":{"Impl":{"id":996}},"from":{"krate":0,"index":11394},"to":{"krate":2,"index":1904}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8475514,"byte_end":8475529,"line_start":398,"line_end":398,"column_start":33,"column_end":48},"kind":{"Impl":{"id":997}},"from":{"krate":0,"index":11394},"to":{"krate":2,"index":1916}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8475733,"byte_end":8475743,"line_start":402,"line_end":402,"column_start":40,"column_end":50},"kind":{"Impl":{"id":998}},"from":{"krate":0,"index":11413},"to":{"krate":2,"index":1904}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8475793,"byte_end":8475803,"line_start":403,"line_end":403,"column_start":40,"column_end":50},"kind":{"Impl":{"id":999}},"from":{"krate":0,"index":11413},"to":{"krate":2,"index":1916}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8475864,"byte_end":8475880,"line_start":404,"line_end":404,"column_start":51,"column_end":67},"kind":{"Impl":{"id":1000}},"from":{"krate":0,"index":11436},"to":{"krate":2,"index":1904}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\mutex.rs","byte_start":8475944,"byte_end":8475960,"line_start":405,"line_end":405,"column_start":51,"column_end":67},"kind":{"Impl":{"id":1001}},"from":{"krate":0,"index":11436},"to":{"krate":2,"index":1916}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\bilock.rs","byte_start":8477914,"byte_end":8477919,"line_start":47,"line_end":47,"column_start":31,"column_end":36},"kind":{"Impl":{"id":1002}},"from":{"krate":0,"index":11554},"to":{"krate":2,"index":1904}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\bilock.rs","byte_start":8477956,"byte_end":8477961,"line_start":48,"line_end":48,"column_start":31,"column_end":36},"kind":{"Impl":{"id":1003}},"from":{"krate":0,"index":11554},"to":{"krate":2,"index":1916}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\bilock.rs","byte_start":8477977,"byte_end":8477983,"line_start":50,"line_end":50,"column_start":9,"column_end":15},"kind":{"Impl":{"id":1004}},"from":{"krate":0,"index":11548},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\bilock.rs","byte_start":8483614,"byte_end":8483619,"line_start":187,"line_end":187,"column_start":16,"column_end":21},"kind":{"Impl":{"id":1005}},"from":{"krate":0,"index":11554},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\bilock.rs","byte_start":8483741,"byte_end":8483746,"line_start":193,"line_end":193,"column_start":18,"column_end":23},"kind":{"Impl":{"id":1006}},"from":{"krate":0,"index":11554},"to":{"krate":2,"index":2097}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\bilock.rs","byte_start":8484024,"byte_end":8484036,"line_start":203,"line_end":203,"column_start":24,"column_end":36},"kind":{"Impl":{"id":1007}},"from":{"krate":0,"index":11521},"to":{"krate":2,"index":6075}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\bilock.rs","byte_start":8484226,"byte_end":8484238,"line_start":211,"line_end":211,"column_start":26,"column_end":38},"kind":{"Impl":{"id":1008}},"from":{"krate":0,"index":11521},"to":{"krate":2,"index":6080}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\bilock.rs","byte_start":8484459,"byte_end":8484471,"line_start":218,"line_end":218,"column_start":47,"column_end":59},"kind":{"Impl":{"id":1009}},"from":{"krate":0,"index":11521},"to":{"krate":1,"index":1634}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\bilock.rs","byte_start":8484803,"byte_end":8484814,"line_start":230,"line_end":230,"column_start":19,"column_end":30},"kind":{"Impl":{"id":1010}},"from":{"krate":0,"index":11561},"to":{"krate":2,"index":2073}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\bilock.rs","byte_start":8484977,"byte_end":8484988,"line_start":237,"line_end":237,"column_start":29,"column_end":40},"kind":{"Impl":{"id":1011}},"from":{"krate":0,"index":11561},"to":{"krate":2,"index":2086}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\bilock.rs","byte_start":8485126,"byte_end":8485137,"line_start":243,"line_end":243,"column_start":9,"column_end":20},"kind":{"Impl":{"id":1012}},"from":{"krate":0,"index":11561},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.5\\src\\lock\\bilock.rs","byte_start":8485489,"byte_end":8485500,"line_start":252,"line_end":252,"column_start":18,"column_end":29},"kind":{"Impl":{"id":1013}},"from":{"krate":0,"index":11561},"to":{"krate":2,"index":2097}}]}